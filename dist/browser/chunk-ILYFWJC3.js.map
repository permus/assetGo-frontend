{
  "version": 3,
  "sources": ["src/app/core/services/inventory-analytics.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport interface DashboardData {\r\n  total_value: number;\r\n  total_parts: number;\r\n  low_stock_count: number;\r\n  out_of_stock_count: number;\r\n  // New fields from overview endpoint\r\n  average_turnover?: number;\r\n  slow_moving_count?: number;\r\n}\r\n\r\nexport interface PartsOverviewData {\r\n  total_parts: number;\r\n  low_stock_count: number;\r\n  total_value: number;\r\n}\r\n\r\nexport interface PartsOverviewResponse {\r\n  success: boolean;\r\n  data: PartsOverviewData;\r\n}\r\n\r\nexport interface AbcAnalysisItem {\r\n  part_id: number;\r\n  name: string;\r\n  value: number;\r\n  cumulative_ratio: number;\r\n  class: string;\r\n}\r\n\r\nexport interface AbcAnalysisResponse {\r\n  success: boolean;\r\n  data: AbcAnalysisItem[];\r\n}\r\n\r\nexport interface TurnoverData {\r\n  period: string;\r\n  cogs: number;\r\n  avg_inventory_value: number;\r\n  turnover: number;\r\n  days_on_hand: number | null;\r\n}\r\n\r\nexport interface TurnoverResponse {\r\n  success: boolean;\r\n  data: TurnoverData;\r\n}\r\n\r\nexport interface KpisData {\r\n  period: string;\r\n  turnover: number;\r\n  days_on_hand: number | null;\r\n  avg_inventory_value: number;\r\n  carrying_cost_monthly: number;\r\n  carrying_rate_annual: number;\r\n  dead_stock_value: number;\r\n  dead_stock_items: number;\r\n  dead_days_threshold: number;\r\n  previous_turnover?: number;\r\n  turnover_change_pct?: number | null;\r\n}\r\n\r\nexport interface KpisResponse {\r\n  success: boolean;\r\n  data: KpisData;\r\n}\r\n\r\nexport interface CategoryTurnoverItem {\r\n  category_id: number | null;\r\n  category_name: string;\r\n  cogs: number;\r\n  avg_inventory_value: number;\r\n  turnover: number;\r\n  days_on_hand: number | null;\r\n}\r\n\r\nexport interface TurnoverByCategoryResponse {\r\n  success: boolean;\r\n  data: {\r\n    period: string;\r\n    categories: CategoryTurnoverItem[];\r\n  };\r\n}\r\n\r\nexport interface MonthlyTurnoverPoint {\r\n  month: string;      // YYYY-MM\r\n  label: string;      // e.g., \"Mar 2025\"\r\n  cogs: number;\r\n  avg_inventory_value: number;\r\n  turnover: number;   // monthly (not annualized)\r\n}\r\n\r\nexport interface MonthlyTurnoverTrendResponse {\r\n  success: boolean;\r\n  data: {\r\n    period: string;\r\n    points: MonthlyTurnoverPoint[];\r\n  };\r\n}\r\n\r\nexport interface AgingBucket {\r\n  label: string;\r\n  days_from: number;\r\n  days_to: number | null;\r\n  count: number;\r\n  value: number;\r\n}\r\n\r\nexport interface SlowMovingItem {\r\n  part_id: number;\r\n  name: string;\r\n  on_hand: number;\r\n  value: number;\r\n  last_movement_at: string | null;\r\n  days_since_movement: number;\r\n}\r\n\r\nexport interface StockAgingData {\r\n  buckets: AgingBucket[];\r\n  slow_moving: SlowMovingItem[];\r\n}\r\n\r\nexport interface StockAgingResponse {\r\n  success: boolean;\r\n  data: StockAgingData;\r\n}\r\n\r\n// Alerts API\r\nexport interface InventoryAlertDTO {\r\n  id: number;\r\n  part_id: number | null;\r\n  alert_type: string;\r\n  alert_level: string;\r\n  message: string;\r\n  is_resolved: boolean;\r\n  created_at: string;\r\n}\r\n\r\nexport interface AlertsListResponse {\r\n  success: boolean;\r\n  data: { data: InventoryAlertDTO[]; current_page: number; last_page: number; total: number };\r\n}\r\n\r\nexport interface AlertActionResponse {\r\n  success: boolean;\r\n  data: any;\r\n}\r\n\r\nexport interface AlertsSummaryResponse {\r\n  success: boolean;\r\n  data: { active: number; critical: number; ack: number; total: number };\r\n}\r\n\r\nexport interface DashboardResponse {\r\n  success: boolean;\r\n  data: DashboardData;\r\n}\r\n\r\n// Parts Catalog Interfaces\r\nexport interface InventoryPart {\r\n  id: number;\r\n  name: string;\r\n  part_number: string;\r\n  description?: string;\r\n  uom: string;\r\n  unit_cost?: number;\r\n  category_id?: number;\r\n  reorder_point?: number;\r\n  reorder_qty?: number;\r\n  barcode?: string;\r\n  status?: string;\r\n  abc_class?: string;\r\n  company_id: number;\r\n  user_id: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface PartsCatalogResponse {\r\n  success: boolean;\r\n  data: {\r\n    data: InventoryPart[];\r\n    current_page: number;\r\n    last_page: number;\r\n    per_page: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\nexport interface PartResponse {\r\n  success: boolean;\r\n  data: InventoryPart;\r\n}\r\n\r\nexport interface CreatePartRequest {\r\n  name: string;\r\n  part_number: string;\r\n  description?: string;\r\n  uom: string;\r\n  unit_cost?: number;\r\n  category_id?: number;\r\n  reorder_point?: number;\r\n  reorder_qty?: number;\r\n  barcode?: string;\r\n}\r\n\r\nexport interface UpdatePartRequest {\r\n  name?: string;\r\n  part_number?: string;\r\n  description?: string;\r\n  uom?: string;\r\n  unit_cost?: number;\r\n  category_id?: number;\r\n  reorder_point?: number;\r\n  reorder_qty?: number;\r\n  barcode?: string;\r\n  status?: string;\r\n  abc_class?: string;\r\n}\r\n\r\n// Stock Levels Interfaces\r\nexport interface InventoryLocation {\r\n  id: number;\r\n  name: string;\r\n  code?: string;\r\n  type?: string;\r\n  address?: string;\r\n  company_id: number;\r\n}\r\n\r\nexport interface LocationResponse {\r\n  success: boolean;\r\n  data: {\r\n    locations: any[];\r\n    data: InventoryLocation[];\r\n    current_page: number;\r\n    last_page: number;\r\n    per_page: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\n// Transactions Interfaces\r\nexport interface InventoryTransaction {\r\n  id: number;\r\n  company_id: number;\r\n  part_id: number;\r\n  location_id: number;\r\n  type: 'receipt' | 'issue' | 'adjustment' | 'transfer_out' | 'transfer_in' | 'return';\r\n  quantity: number;\r\n  unit_cost: number;\r\n  total_cost: number;\r\n  reason: string;\r\n  notes: string;\r\n  reference: string;\r\n  related_id: number;\r\n  user_id: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n  part: {\r\n    id: number;\r\n    name: string;\r\n    part_number: string;\r\n    description: string;\r\n  };\r\n  location: {\r\n    id: number;\r\n    name: string;\r\n    code: string;\r\n  };\r\n}\r\n\r\nexport interface TransactionsResponse {\r\n  success: boolean;\r\n  data: {\r\n    data: InventoryTransaction[];\r\n    current_page: number;\r\n    last_page: number;\r\n    per_page: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\n// Purchase Order Interfaces\r\nexport interface PurchaseOrderItem {\r\n  id?: number;\r\n  part_id?: number;\r\n  part_number: string;\r\n  description: string;\r\n  ordered_qty: number;\r\n  received_qty?: number;\r\n  unit_cost: number;\r\n  line_total?: number;\r\n  notes?: string;\r\n  part?: InventoryPart;\r\n}\r\n\r\nexport interface PurchaseOrder {\r\n  id?: number;\r\n  company_id?: number;\r\n  po_number: string;\r\n  supplier_id?: number;\r\n  vendor_name: string;\r\n  vendor_contact: string;\r\n  order_date: string;\r\n  expected_date: string;\r\n  status: string;\r\n  subtotal: number;\r\n  tax: number;\r\n  total: number;\r\n  terms?: string;\r\n  notes?: string;\r\n  created_by?: number;\r\n  approved_by?: number;\r\n  approved_at?: string;\r\n  reject_comment?: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  supplier?: any;\r\n  items: PurchaseOrderItem[];\r\n}\r\n\r\nexport interface CreatePurchaseOrderRequest {\r\n  supplier_id?: number;\r\n  vendor_name: string;\r\n  vendor_contact: string;\r\n  order_date: string;\r\n  expected_date: string;\r\n  items: {\r\n    part_id?: number;\r\n    part_number: string;\r\n    description: string;\r\n    qty: number;\r\n    unit_cost: number;\r\n  }[];\r\n  tax_rate?: number;\r\n  tax_amount?: number;\r\n  terms?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdatePurchaseOrderRequest {\r\n  supplier_id?: number;\r\n  vendor_name?: string;\r\n  vendor_contact?: string;\r\n  order_date?: string;\r\n  expected_date?: string;\r\n  items?: {\r\n    part_id?: number;\r\n    part_number: string;\r\n    description: string;\r\n    qty: number;\r\n    unit_cost: number;\r\n  }[];\r\n  tax_rate?: number;\r\n  tax_amount?: number;\r\n  terms?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface ReceivePurchaseOrderRequest {\r\n  location_id: number;\r\n  items: {\r\n    item_id: number;\r\n    receive_qty: number;\r\n  }[];\r\n  reference?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface ApprovePurchaseOrderRequest {\r\n  purchase_order_id: number;\r\n  approve: boolean;\r\n  comment?: string;\r\n}\r\n\r\nexport interface PurchaseOrdersResponse {\r\n  success: boolean;\r\n  data: {\r\n    data: PurchaseOrder[];\r\n    current_page: number;\r\n    last_page: number;\r\n    per_page: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\nexport interface PurchaseOrdersOverviewData {\r\n  total_pos: number;\r\n  draft: number;\r\n  pending: number;\r\n  approved: number;\r\n  ordered: number;\r\n  received: number;\r\n  closed: number;\r\n  rejected: number;\r\n  cancelled: number;\r\n  total_value: number;\r\n}\r\n\r\nexport interface PurchaseOrdersOverviewResponse {\r\n  success: boolean;\r\n  data: PurchaseOrdersOverviewData;\r\n}\r\n\r\nexport interface PurchaseOrderResponse {\r\n  success: boolean;\r\n  data: PurchaseOrder;\r\n}\r\n\r\nexport interface InventoryStock {\r\n  id: number;\r\n  part_id: number;\r\n  location_id: number;\r\n  on_hand: number;\r\n  available: number;\r\n  reserved: number;\r\n  allocated: number;\r\n  average_cost: number;\r\n  last_updated: string;\r\n  part: InventoryPart;\r\n  location: InventoryLocation;\r\n}\r\n\r\nexport interface StockLevelsResponse {\r\n  success: boolean;\r\n  data: {\r\n    data: InventoryStock[];\r\n    current_page: number;\r\n    last_page: number;\r\n    per_page: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\nexport interface StockAdjustmentRequest {\r\n  part_id: number | null;\r\n  location_id: number | null;\r\n  type: 'receipt' | 'issue' | 'adjustment' | 'return';\r\n  quantity: number;\r\n  unit_cost?: number;\r\n  reason?: string;\r\n  notes?: string;\r\n  reference?: string;\r\n}\r\n\r\nexport interface StockTransferRequest {\r\n  part_id: number;\r\n  from_location_id: number;\r\n  to_location_id: number;\r\n  quantity: number;\r\n  reason?: string;\r\n  notes?: string;\r\n  reference?: string;\r\n}\r\n\r\nexport interface StockReserveRequest {\r\n  part_id: number;\r\n  location_id: number;\r\n  quantity: number;\r\n  reference?: string;\r\n}\r\n\r\nexport interface StockCountRequest {\r\n  part_id: number;\r\n  location_id: number;\r\n  counted_quantity: number;\r\n  notes?: string;\r\n}\r\n\r\nexport interface StockOperationResponse {\r\n  success: boolean;\r\n  data: any;\r\n}\r\n\r\n// Supplier interfaces\r\nexport interface Supplier {\r\n  id: number;\r\n  company_id: number;\r\n  supplier_code: string;\r\n  name: string;\r\n  contact_person: string;\r\n  tax_registration_number?: string;\r\n  email: string;\r\n  phone: string;\r\n  alternate_phone?: string;\r\n  website?: string;\r\n  street_address?: string;\r\n  city?: string;\r\n  state?: string;\r\n  postal_code?: string;\r\n  payment_terms?: string;\r\n  terms?: string;\r\n  currency: string;\r\n  credit_limit?: number;\r\n  delivery_lead_time?: number;\r\n  notes?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface CreateSupplierRequest {\r\n  name: string;\r\n  contact_person: string;\r\n  email: string;\r\n  phone: string;\r\n  supplier_code?: string;\r\n  tax_registration_number?: string;\r\n  alternate_phone?: string;\r\n  website?: string;\r\n  street_address?: string;\r\n  city?: string;\r\n  state?: string;\r\n  postal_code?: string;\r\n  payment_terms?: string;\r\n  currency?: string;\r\n  credit_limit?: number;\r\n  delivery_lead_time?: number;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateSupplierRequest {\r\n  name?: string;\r\n  contact_person?: string;\r\n  email?: string;\r\n  phone?: string;\r\n  supplier_code?: string;\r\n  tax_registration_number?: string;\r\n  alternate_phone?: string;\r\n  website?: string;\r\n  street_address?: string;\r\n  city?: string;\r\n  state?: string;\r\n  postal_code?: string;\r\n  payment_terms?: string;\r\n  currency?: string;\r\n  credit_limit?: number;\r\n  delivery_lead_time?: number;\r\n  notes?: string;\r\n}\r\n\r\nexport interface SuppliersResponse {\r\n  success: boolean;\r\n  data: {\r\n    current_page: number;\r\n    data: Supplier[];\r\n    per_page: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\nexport interface SupplierResponse {\r\n  success: boolean;\r\n  data: Supplier;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventoryAnalyticsService {\r\n  private apiUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private getAuthHeaders(): { headers: { [header: string]: string } } {\r\n    const token = localStorage.getItem('token');\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n      }\r\n    };\r\n  }\r\n\r\n  getDashboardData(): Observable<DashboardResponse> {\r\n    return this.http.get<DashboardResponse>(\r\n      `${this.apiUrl}/inventory/dashboard/overview`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  getInventoryAnalytics(): Observable<DashboardResponse> {\r\n    return this.http.get<DashboardResponse>(\r\n      `${this.apiUrl}/inventory/analytics/dashboard`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  getTurnover(params?: { period?: '1m' | '3m' | '6m' | '1y' }): Observable<TurnoverResponse> {\r\n    return this.http.get<TurnoverResponse>(\r\n      `${this.apiUrl}/inventory/analytics/turnover`,\r\n      { ...this.getAuthHeaders(), params: new HttpParams({ fromObject: params || {} }) }\r\n    );\r\n  }\r\n\r\n  getKpis(params?: { period?: '1m' | '3m' | '6m' | '1y'; carrying_rate?: number; dead_days?: number }): Observable<KpisResponse> {\r\n    return this.http.get<KpisResponse>(\r\n      `${this.apiUrl}/inventory/analytics/kpis`,\r\n      { ...this.getAuthHeaders(), params: new HttpParams({ fromObject: params || {} }) }\r\n    );\r\n  }\r\n\r\n  getTurnoverByCategory(params?: { period?: '1m' | '3m' | '6m' | '1y' }): Observable<TurnoverByCategoryResponse> {\r\n    return this.http.get<TurnoverByCategoryResponse>(\r\n      `${this.apiUrl}/inventory/analytics/turnover-by-category`,\r\n      { ...this.getAuthHeaders(), params: new HttpParams({ fromObject: params || {} }) }\r\n    );\r\n  }\r\n\r\n  getMonthlyTurnoverTrend(params?: { period?: '1m' | '3m' | '6m' | '1y' }): Observable<MonthlyTurnoverTrendResponse> {\r\n    return this.http.get<MonthlyTurnoverTrendResponse>(\r\n      `${this.apiUrl}/inventory/analytics/monthly-turnover-trend`,\r\n      { ...this.getAuthHeaders(), params: new HttpParams({ fromObject: params || {} }) }\r\n    );\r\n  }\r\n\r\n  getStockAging(params?: { bands?: number[] }): Observable<StockAgingResponse> {\r\n    let httpParams = new HttpParams();\r\n    if (params?.bands && params.bands.length) {\r\n      // send repeated bands[]=n params for array\r\n      params.bands.forEach(b => { httpParams = httpParams.append('bands[]', String(b)); });\r\n    }\r\n    return this.http.get<StockAgingResponse>(\r\n      `${this.apiUrl}/inventory/analytics/stock-aging`,\r\n      { ...this.getAuthHeaders(), params: httpParams }\r\n    );\r\n  }\r\n\r\n  getAbcAnalysis(params?: { cost_basis?: 'average' | 'unit'; thr_a?: number; thr_b?: number }): Observable<AbcAnalysisResponse> {\r\n    let httpParams = new HttpParams();\r\n    if (params?.cost_basis) httpParams = httpParams.set('cost_basis', params.cost_basis);\r\n    if (typeof params?.thr_a === 'number') httpParams = httpParams.set('thr_a', String(params.thr_a));\r\n    if (typeof params?.thr_b === 'number') httpParams = httpParams.set('thr_b', String(params.thr_b));\r\n\r\n    return this.http.get<AbcAnalysisResponse>(\r\n      `${this.apiUrl}/inventory/analytics/abc-analysis`,\r\n      { ...this.getAuthHeaders(), params: httpParams }\r\n    );\r\n  }\r\n\r\n  // Alerts\r\n  getAlerts(params?: { is_resolved?: boolean; page?: number }): Observable<AlertsListResponse> {\r\n    let httpParams = new HttpParams();\r\n    if (typeof params?.is_resolved === 'boolean') httpParams = httpParams.set('is_resolved', String(params.is_resolved));\r\n    if (params?.page) httpParams = httpParams.set('page', String(params.page));\r\n    return this.http.get<AlertsListResponse>(\r\n      `${this.apiUrl}/inventory/alerts`,\r\n      { ...this.getAuthHeaders(), params: httpParams }\r\n    );\r\n  }\r\n\r\n  resolveAlert(alertId: number): Observable<AlertActionResponse> {\r\n    return this.http.post<AlertActionResponse>(\r\n      `${this.apiUrl}/inventory/alerts/${alertId}/resolve`,\r\n      {},\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  scanAlerts(): Observable<AlertActionResponse> {\r\n    return this.http.post<AlertActionResponse>(\r\n      `${this.apiUrl}/inventory/alerts/scan`,\r\n      {},\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  getAlertsSummary(): Observable<AlertsSummaryResponse> {\r\n    return this.http.get<AlertsSummaryResponse>(\r\n      `${this.apiUrl}/inventory/alerts/summary`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  // Automation recommendations\r\n  getReorderRecommendations(body?: { lookback_days?: number; lead_time_days?: number; safety_days?: number }): Observable<{ success: boolean; data: { recommendations: any[] } }> {\r\n    return this.http.post<{ success: boolean; data: { recommendations: any[] } }>(\r\n      `${this.apiUrl}/inventory/automation/recommendations`,\r\n      body || {},\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  // Parts Catalog Methods\r\n  getPartsCatalog(\r\n    search?: string,\r\n    status?: string,\r\n    page: number = 1,\r\n    perPage: number = 15\r\n  ): Observable<PartsCatalogResponse> {\r\n    console.log('Calling parts API:', `${this.apiUrl}/inventory/parts`);\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('per_page', perPage.toString());\r\n\r\n    if (search) {\r\n      params = params.set('search', search);\r\n    }\r\n\r\n    if (status) {\r\n      params = params.set('status', status);\r\n    }\r\n\r\n    console.log('Parts API params:', params.toString());\r\n    console.log('Auth headers:', this.getAuthHeaders());\r\n\r\n    return this.http.get<PartsCatalogResponse>(\r\n      `${this.apiUrl}/inventory/parts`,\r\n      { ...this.getAuthHeaders(), params }\r\n    );\r\n  }\r\n\r\n  getPartsOverview(): Observable<PartsOverviewResponse> {\r\n    return this.http.get<PartsOverviewResponse>(\r\n      `${this.apiUrl}/inventory/parts/overview`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  getPart(partId: number): Observable<PartResponse> {\r\n    return this.http.get<PartResponse>(\r\n      `${this.apiUrl}/inventory/parts/${partId}`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  createPart(partData: CreatePartRequest): Observable<PartResponse> {\r\n    return this.http.post<PartResponse>(\r\n      `${this.apiUrl}/inventory/parts`,\r\n      partData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  updatePart(partId: number, partData: UpdatePartRequest): Observable<PartResponse> {\r\n    return this.http.put<PartResponse>(\r\n      `${this.apiUrl}/inventory/parts/${partId}`,\r\n      partData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  deletePart(partId: number): Observable<{ success: boolean }> {\r\n    return this.http.delete<{ success: boolean }>(\r\n      `${this.apiUrl}/inventory/parts/${partId}`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  // Stock Levels Methods\r\n  getStockLevels(\r\n    locationId?: number,\r\n    partId?: number,\r\n    search?: string,\r\n    page: number = 1,\r\n    perPage: number = 15\r\n  ): Observable<StockLevelsResponse> {\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('per_page', perPage.toString());\r\n\r\n    if (locationId) {\r\n      params = params.set('location_id', locationId.toString());\r\n    }\r\n\r\n    if (partId) {\r\n      params = params.set('part_id', partId.toString());\r\n    }\r\n\r\n    if (search) {\r\n      params = params.set('search', search);\r\n    }\r\n\r\n    return this.http.get<StockLevelsResponse>(\r\n      `${this.apiUrl}/inventory/stocks`,\r\n      { ...this.getAuthHeaders(), params }\r\n    );\r\n  }\r\n\r\n  adjustStock(adjustmentData: StockAdjustmentRequest): Observable<StockOperationResponse> {\r\n    return this.http.post<StockOperationResponse>(\r\n      `${this.apiUrl}/inventory/stocks/adjust`,\r\n      adjustmentData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  transferStock(transferData: StockTransferRequest): Observable<StockOperationResponse> {\r\n    return this.http.post<StockOperationResponse>(\r\n      `${this.apiUrl}/inventory/stocks/transfer`,\r\n      transferData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  reserveStock(reserveData: StockReserveRequest): Observable<StockOperationResponse> {\r\n    return this.http.post<StockOperationResponse>(\r\n      `${this.apiUrl}/inventory/stocks/reserve`,\r\n      reserveData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  releaseStock(releaseData: StockReserveRequest): Observable<StockOperationResponse> {\r\n    return this.http.post<StockOperationResponse>(\r\n      `${this.apiUrl}/inventory/stocks/release`,\r\n      releaseData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  performStockCount(countData: StockCountRequest): Observable<StockOperationResponse> {\r\n    return this.http.post<StockOperationResponse>(\r\n      `${this.apiUrl}/inventory/stocks/count`,\r\n      countData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  // Locations Methods\r\n  getLocations(\r\n    page: number = 1,\r\n    perPage: number = 15,\r\n    hierarchyLevel: number = 0,\r\n    sortBy: string = 'created',\r\n    sortDirection: string = 'desc'\r\n  ): Observable<LocationResponse> {\r\n    console.log('Calling locations API:', `${this.apiUrl}/locations`);\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('per_page', perPage.toString())\r\n      .set('hierarchy_level', hierarchyLevel.toString())\r\n      .set('sort_by', sortBy)\r\n      .set('sort_direction', sortDirection);\r\n\r\n    console.log('Locations API params:', params.toString());\r\n    console.log('Auth headers:', this.getAuthHeaders());\r\n\r\n    return this.http.get<LocationResponse>(\r\n      `${this.apiUrl}/locations`,\r\n      { ...this.getAuthHeaders(), params }\r\n    );\r\n  }\r\n\r\n  // Transactions Methods\r\n  getTransactions(queryParams: string = ''): Observable<TransactionsResponse> {\r\n    const url = queryParams ?\r\n      `${this.apiUrl}/inventory/transactions?${queryParams}` :\r\n      `${this.apiUrl}/inventory/transactions`;\r\n\r\n    return this.http.get<TransactionsResponse>(\r\n      url,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  // Purchase Order Methods\r\n\r\n  // Purchase Order Methods\r\n  getPurchaseOrders(\r\n    page: number = 1,\r\n    perPage: number = 15,\r\n    status?: string,\r\n    search?: string\r\n  ): Observable<PurchaseOrdersResponse> {\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('per_page', perPage.toString());\r\n\r\n    if (status) {\r\n      params = params.set('status', status);\r\n    }\r\n\r\n    if (search) {\r\n      params = params.set('search', search);\r\n    }\r\n\r\n    return this.http.get<PurchaseOrdersResponse>(\r\n      `${this.apiUrl}/inventory/purchase-orders`,\r\n      { ...this.getAuthHeaders(), params }\r\n    );\r\n  }\r\n\r\n  getPurchaseOrder(id: number): Observable<PurchaseOrderResponse> {\r\n    return this.http.get<PurchaseOrderResponse>(\r\n      `${this.apiUrl}/inventory/purchase-orders/${id}`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  createPurchaseOrder(poData: CreatePurchaseOrderRequest): Observable<PurchaseOrderResponse> {\r\n    return this.http.post<PurchaseOrderResponse>(\r\n      `${this.apiUrl}/inventory/purchase-orders`,\r\n      poData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  updatePurchaseOrder(id: number, poData: UpdatePurchaseOrderRequest): Observable<PurchaseOrderResponse> {\r\n    return this.http.put<PurchaseOrderResponse>(\r\n      `${this.apiUrl}/inventory/purchase-orders/${id}`,\r\n      poData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  deletePurchaseOrder(id: number): Observable<any> {\r\n    return this.http.delete(\r\n      `${this.apiUrl}/inventory/purchase-orders/${id}`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  receivePurchaseOrder(id: number, receiveData: ReceivePurchaseOrderRequest): Observable<any> {\r\n    return this.http.post(\r\n      `${this.apiUrl}/inventory/purchase-orders/${id}/receive`,\r\n      receiveData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  approvePurchaseOrder(approveData: ApprovePurchaseOrderRequest): Observable<any> {\r\n    return this.http.post(\r\n      `${this.apiUrl}/inventory/purchase-orders/approve`,\r\n      approveData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  getPendingApprovals(): Observable<PurchaseOrdersResponse> {\r\n    return this.http.get<PurchaseOrdersResponse>(\r\n      `${this.apiUrl}/inventory/purchase-orders/pending-approval`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  getPurchaseOrderPerformance(): Observable<any> {\r\n    return this.http.get(\r\n      `${this.apiUrl}/inventory/purchase-orders/performance`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  getPurchaseOrdersOverview(): Observable<PurchaseOrdersOverviewResponse> {\r\n    return this.http.get<PurchaseOrdersOverviewResponse>(\r\n      `${this.apiUrl}/inventory/purchase-orders/overview`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  sendPurchaseOrderEmail(id: number, emailData: any): Observable<any> {\r\n    return this.http.post(\r\n      `${this.apiUrl}/inventory/purchase-orders/${id}/send-email`,\r\n      emailData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  // ABC CSV Export\r\n  downloadAbcCsv(params?: { cost_basis?: 'average' | 'unit'; thr_a?: number; thr_b?: number }): Observable<Blob> {\r\n    let httpParams = new HttpParams();\r\n    if (params?.cost_basis) httpParams = httpParams.set('cost_basis', params.cost_basis);\r\n    if (typeof params?.thr_a === 'number') httpParams = httpParams.set('thr_a', String(params.thr_a));\r\n    if (typeof params?.thr_b === 'number') httpParams = httpParams.set('thr_b', String(params.thr_b));\r\n\r\n    return this.http.get(\r\n      `${this.apiUrl}/inventory/analytics/abc-analysis/export`,\r\n      {\r\n        headers: this.getAuthHeaders().headers,\r\n        params: httpParams,\r\n        // Angular's HttpClient typing requires this cast to use blob\r\n        responseType: 'blob' as 'json'\r\n      }\r\n    ) as unknown as Observable<Blob>;\r\n  }\r\n\r\n  // Supplier methods\r\n  getSuppliers(search: string = '', perPage: number = 15, page: number = 1): Observable<SuppliersResponse> {\r\n    const params = new HttpParams()\r\n      .set('search', search)\r\n      .set('per_page', perPage.toString())\r\n      .set('page', page.toString());\r\n\r\n    console.log('Getting suppliers with params:', params.toString());\r\n    return this.http.get<SuppliersResponse>(`${this.apiUrl}/inventory/suppliers`, {\r\n      ...this.getAuthHeaders(),\r\n      params\r\n    });\r\n  }\r\n\r\n  getSupplier(id: number): Observable<SupplierResponse> {\r\n    console.log('Getting supplier:', id);\r\n    return this.http.get<SupplierResponse>(`${this.apiUrl}/inventory/suppliers/${id}`, this.getAuthHeaders());\r\n  }\r\n\r\n  createSupplier(supplierData: CreateSupplierRequest): Observable<SupplierResponse> {\r\n    console.log('Creating supplier:', supplierData);\r\n    return this.http.post<SupplierResponse>(`${this.apiUrl}/inventory/suppliers`, supplierData, this.getAuthHeaders());\r\n  }\r\n\r\n  updateSupplier(id: number, supplierData: UpdateSupplierRequest): Observable<SupplierResponse> {\r\n    console.log('Updating supplier:', id, supplierData);\r\n    return this.http.put<SupplierResponse>(`${this.apiUrl}/inventory/suppliers/${id}`, supplierData, this.getAuthHeaders());\r\n  }\r\n\r\n  deleteSupplier(id: number): Observable<any> {\r\n    console.log('Deleting supplier:', id);\r\n    return this.http.delete(`${this.apiUrl}/inventory/suppliers/${id}`, this.getAuthHeaders());\r\n  }\r\n\r\n  bulkDeleteSuppliers(supplierIds: number[]): Observable<any> {\r\n    console.log('Bulk deleting suppliers:', supplierIds);\r\n    return this.http.post(`${this.apiUrl}/inventory/suppliers/bulk-delete`, { supplier_ids: supplierIds }, this.getAuthHeaders());\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
