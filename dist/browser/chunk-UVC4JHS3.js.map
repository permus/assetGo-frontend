{
  "version": 3,
  "sources": ["src/app/inventory/components/edit-part-modal/edit-part-modal.component.ts", "src/app/inventory/components/edit-part-modal/edit-part-modal.component.html", "src/app/inventory/components/add-part-modal/add-part-modal.component.ts", "src/app/inventory/components/add-part-modal/add-part-modal.component.html", "src/app/inventory/components/parts-catalog/parts-catalog.component.ts", "src/app/inventory/components/parts-catalog/parts-catalog.component.html"],
  "sourcesContent": ["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InventoryPart, UpdatePartRequest } from '../../../core/services/inventory-analytics.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-part-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './edit-part-modal.component.html',\r\n  styleUrls: ['./edit-part-modal.component.scss']\r\n})\r\nexport class EditPartModalComponent implements OnInit {\r\n  @Input() part!: InventoryPart;\r\n  @Output() closeModal = new EventEmitter<void>();\r\n  @Output() updatePart = new EventEmitter<UpdatePartRequest>();\r\n\r\n  editForm: UpdatePartRequest = {};\r\n  @Input() manageLoading: boolean = false;\r\n  ngOnInit(): void {\r\n    // Initialize form with current part data\r\n    this.editForm = {\r\n      name: this.part.name,\r\n      part_number: this.part.part_number,\r\n      description: this.part.description,\r\n      uom: this.part.uom,\r\n      unit_cost: this.part.unit_cost,\r\n      category_id: this.part.category_id,\r\n      reorder_point: this.part.reorder_point,\r\n      reorder_qty: this.part.reorder_qty,\r\n      barcode: this.part.barcode,\r\n      status: this.part.status,\r\n      abc_class: this.part.abc_class\r\n    };\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.isFormValid()) {\r\n      this.updatePart.emit(this.editForm);\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private isFormValid(): boolean {\r\n    return !!(this.editForm.name && this.editForm.uom);\r\n  }\r\n\r\n  getStatusOptions(): string[] {\r\n    return ['active', 'inactive', 'discontinued'];\r\n  }\r\n\r\n  getAbcClassOptions(): string[] {\r\n    return ['A', 'B', 'C'];\r\n  }\r\n}\r\n", "<div class=\"modal-overlay\" (click)=\"onCancel()\">\r\n  <div class=\"modal-content\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h2 class=\"modal-title\">Edit Part</h2>\r\n      <button class=\"close-btn\" (click)=\"onCancel()\">\r\n        <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    <form (ngSubmit)=\"onSubmit()\" class=\"edit-form\">\r\n      <div class=\"form-grid\">\r\n        <!-- Basic Information -->\r\n        <div class=\"form-section\">\r\n          <h3 class=\"section-title\">Basic Information</h3>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"name\" class=\"form-label\">Part Name *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              class=\"form-input\"\r\n              [(ngModel)]=\"editForm.name\"\r\n              required>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"part_number\" class=\"form-label\">Part Number *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"part_number\"\r\n              name=\"part_number\"\r\n              class=\"form-input\"\r\n              [(ngModel)]=\"editForm.part_number\"\r\n              required>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"description\" class=\"form-label\">Description</label>\r\n            <textarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              class=\"form-textarea\"\r\n              rows=\"3\"\r\n              [(ngModel)]=\"editForm.description\"\r\n              placeholder=\"Enter part description...\"></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Specifications -->\r\n        <div class=\"form-section\">\r\n          <h3 class=\"section-title\">Specifications</h3>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"uom\" class=\"form-label\">Unit of Measure *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"uom\"\r\n              name=\"uom\"\r\n              class=\"form-input\"\r\n              [(ngModel)]=\"editForm.uom\"\r\n              required\r\n              placeholder=\"e.g., pcs, kg, m\">\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"unit_cost\" class=\"form-label\">Unit Cost</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"unit_cost\"\r\n              name=\"unit_cost\"\r\n              class=\"form-input\"\r\n              [(ngModel)]=\"editForm.unit_cost\"\r\n              min=\"0\"\r\n              step=\"0.01\"\r\n              placeholder=\"0.00\">\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"category_id\" class=\"form-label\">Category ID</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"category_id\"\r\n              name=\"category_id\"\r\n              class=\"form-input\"\r\n              [(ngModel)]=\"editForm.category_id\"\r\n              placeholder=\"Category ID\">\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Inventory Management -->\r\n        <div class=\"form-section\">\r\n          <h3 class=\"section-title\">Inventory Management</h3>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"reorder_point\" class=\"form-label\">Reorder Point</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"reorder_point\"\r\n              name=\"reorder_point\"\r\n              class=\"form-input\"\r\n              [(ngModel)]=\"editForm.reorder_point\"\r\n              min=\"0\"\r\n              placeholder=\"0\">\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"reorder_qty\" class=\"form-label\">Reorder Quantity</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"reorder_qty\"\r\n              name=\"reorder_qty\"\r\n              class=\"form-input\"\r\n              [(ngModel)]=\"editForm.reorder_qty\"\r\n              min=\"0\"\r\n              placeholder=\"0\">\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"barcode\" class=\"form-label\">Barcode</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"barcode\"\r\n              name=\"barcode\"\r\n              class=\"form-input\"\r\n              [(ngModel)]=\"editForm.barcode\"\r\n              placeholder=\"Barcode\">\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Classification -->\r\n        <div class=\"form-section\">\r\n          <h3 class=\"section-title\">Classification</h3>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"status\" class=\"form-label\">Status</label>\r\n            <select\r\n              id=\"status\"\r\n              name=\"status\"\r\n              class=\"form-select\"\r\n              [(ngModel)]=\"editForm.status\">\r\n              <option value=\"\">Select Status</option>\r\n              <option *ngFor=\"let status of getStatusOptions()\" [value]=\"status\">\r\n                {{ status | titlecase }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"abc_class\" class=\"form-label\">ABC Class</label>\r\n            <select\r\n              id=\"abc_class\"\r\n              name=\"abc_class\"\r\n              class=\"form-select\"\r\n              [(ngModel)]=\"editForm.abc_class\">\r\n              <option value=\"\">Select ABC Class</option>\r\n              <option *ngFor=\"let abcClass of getAbcClassOptions()\" [value]=\"abcClass\">\r\n                Class {{ abcClass }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-actions\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"onCancel()\">\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" class=\"btn btn-primary\">\r\n          @if (manageLoading) {\r\n            Updating...\r\n            <span\r\n              class=\"border-t border-white border-opacity-25 ml-2 w-4 h-4 rounded-full animate-spin inline-block\"></span>\r\n          }@else {\r\n            Update Part\r\n          }\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n", "import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { CreatePartRequest } from '../../../core/services/inventory-analytics.service';\r\n\r\n@Component({\r\n  selector: 'app-add-part-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './add-part-modal.component.html',\r\n  styleUrls: ['./add-part-modal.component.scss']\r\n})\r\nexport class AddPartModalComponent {\r\n  @Output() closeModal = new EventEmitter<void>();\r\n  @Output() createPart = new EventEmitter<CreatePartRequest>();\r\n  @Input() manageLoading = false;\r\n\r\n  partForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.partForm = this.fb.group({\r\n      part_number: ['', [Validators.required]],\r\n      name: ['', [Validators.required]],\r\n      description: [''],\r\n      uom: ['each', [Validators.required]],\r\n      unit_cost: [''],\r\n      category_id: [''],\r\n      reorder_point: [0],\r\n      reorder_qty: [1],\r\n      barcode: ['']\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.partForm.valid) {\r\n      const formValue = this.partForm.value;\r\n\r\n      // Convert empty strings to undefined for optional fields\r\n      const partData: CreatePartRequest = {\r\n        part_number: formValue.part_number,\r\n        name: formValue.name,\r\n        description: formValue.description || undefined,\r\n        uom: formValue.uom,\r\n        unit_cost: formValue.unit_cost ? parseFloat(formValue.unit_cost) : undefined,\r\n        category_id: formValue.category_id ? parseInt(formValue.category_id) : undefined,\r\n        reorder_point: formValue.reorder_point ? parseInt(formValue.reorder_point) : undefined,\r\n        reorder_qty: formValue.reorder_qty ? parseInt(formValue.reorder_qty) : undefined,\r\n        barcode: formValue.barcode || undefined\r\n      };\r\n\r\n      this.createPart.emit(partData);\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  getFieldError(fieldName: string): string {\r\n    const field = this.partForm.get(fieldName);\r\n    if (field?.errors && field?.touched) {\r\n      if (field.errors['required']) {\r\n        return 'This field is required';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getStatusOptions(): string[] {\r\n    return ['active', 'inactive', 'discontinued'];\r\n  }\r\n\r\n  getAbcClassOptions(): string[] {\r\n    return ['A', 'B', 'C'];\r\n  }\r\n}\r\n", "<div class=\"modal-overlay\" (click)=\"onCancel()\">\r\n  <div class=\"modal-container\" (click)=\"$event.stopPropagation()\">\r\n    <!-- Modal Header -->\r\n    <div class=\"modal-header\">\r\n      <div class=\"header-left\">\r\n        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-14V4a2 2 0 00-2-2H6a2 2 0 00-2 2v3m16 0H4\"></path>\r\n        </svg>\r\n        <h2 class=\"modal-title\">Add New Part</h2>\r\n      </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"partForm\" (ngSubmit)=\"onSubmit()\" class=\"modal-form\">\r\n      <!-- Basic Information Section -->\r\n      <div class=\"form-section\">\r\n        <div class=\"section-header\">\r\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n          </svg>\r\n          <h3 class=\"section-title\">Basic Information</h3>\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n          <div class=\"form-field\">\r\n            <label for=\"part_number\" class=\"field-label\">\r\n              Part Number <span class=\"required\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"part_number\"\r\n              formControlName=\"part_number\"\r\n              class=\"form-input\"\r\n              [class.error]=\"partForm.get('part_number')?.errors && partForm.get('part_number')?.touched\"\r\n              placeholder=\"Enter part number\">\r\n            <div class=\"error-message\" *ngIf=\"getFieldError('part_number')\">\r\n              {{ getFieldError('part_number') }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-field\">\r\n            <label for=\"name\" class=\"field-label\">\r\n              Name <span class=\"required\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              formControlName=\"name\"\r\n              class=\"form-input\"\r\n              [class.error]=\"partForm.get('name')?.errors && partForm.get('name')?.touched\"\r\n              placeholder=\"Enter part name\">\r\n            <div class=\"error-message\" *ngIf=\"getFieldError('name')\">\r\n              {{ getFieldError('name') }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-field\">\r\n          <label for=\"description\" class=\"field-label\">Description</label>\r\n          <textarea\r\n            id=\"description\"\r\n            formControlName=\"description\"\r\n            class=\"form-textarea\"\r\n            rows=\"3\"\r\n            placeholder=\"Enter part description\"></textarea>\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n          <div class=\"form-field\">\r\n            <label for=\"category_id\" class=\"field-label\">Category ID</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"category_id\"\r\n              formControlName=\"category_id\"\r\n              class=\"form-input\"\r\n              placeholder=\"Enter category ID\">\r\n          </div>\r\n\r\n          <div class=\"form-field\">\r\n            <label for=\"barcode\" class=\"field-label\">Barcode</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"barcode\"\r\n              formControlName=\"barcode\"\r\n              class=\"form-input\"\r\n              placeholder=\"Enter barcode\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Specifications Section -->\r\n      <div class=\"form-section\">\r\n        <div class=\"section-header\">\r\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\r\n          </svg>\r\n          <h3 class=\"section-title\">Specifications</h3>\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n          <div class=\"form-field\">\r\n            <label for=\"uom\" class=\"field-label\">\r\n              Unit of Measure <span class=\"required\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"uom\"\r\n              formControlName=\"uom\"\r\n              class=\"form-input\"\r\n              [class.error]=\"partForm.get('uom')?.errors && partForm.get('uom')?.touched\"\r\n              placeholder=\"e.g., pcs, kg, m\">\r\n            <div class=\"error-message\" *ngIf=\"getFieldError('uom')\">\r\n              {{ getFieldError('uom') }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-field\">\r\n            <label for=\"unit_cost\" class=\"field-label\">Unit Cost</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"unit_cost\"\r\n              formControlName=\"unit_cost\"\r\n              class=\"form-input\"\r\n              placeholder=\"0.00\"\r\n              step=\"0.01\"\r\n              min=\"0\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Stock Management Section -->\r\n      <div class=\"form-section\">\r\n        <div class=\"section-header\">\r\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-14V4a2 2 0 00-2-2H6a2 2 0 00-2 2v3m16 0H4\"></path>\r\n          </svg>\r\n          <h3 class=\"section-title\">Stock Management</h3>\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n          <div class=\"form-field\">\r\n            <label for=\"reorder_point\" class=\"field-label\">Reorder Point</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"reorder_point\"\r\n              formControlName=\"reorder_point\"\r\n              class=\"form-input\"\r\n              placeholder=\"0\"\r\n              min=\"0\">\r\n          </div>\r\n\r\n          <div class=\"form-field\">\r\n            <label for=\"reorder_qty\" class=\"field-label\">Reorder Quantity</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"reorder_qty\"\r\n              formControlName=\"reorder_qty\"\r\n              class=\"form-input\"\r\n              placeholder=\"1\"\r\n              min=\"1\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Modal Footer -->\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"onCancel()\">\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!partForm.valid\">\r\n\r\n          @if (manageLoading) {\r\n            Creating...\r\n            <span class=\"border-t border-white border-opacity-25 ml-2 w-4 h-4 rounded-full animate-spin inline-block\"></span>\r\n          } @else {\r\n            Create Part\r\n          }\r\n\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InventoryAnalyticsService, InventoryPart, PartsCatalogResponse, CreatePartRequest, UpdatePartRequest } from '../../../core/services/inventory-analytics.service';\r\nimport { EditPartModalComponent } from '../edit-part-modal/edit-part-modal.component';\r\nimport { AddPartModalComponent } from '../add-part-modal/add-part-modal.component';\r\nimport {\r\n  DeleteConfirmationModalComponent\r\n} from '../../../assets/components/delete-confirmation-modal/delete-confirmation-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-parts-catalog',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, EditPartModalComponent, AddPartModalComponent, DeleteConfirmationModalComponent],\r\n  templateUrl: './parts-catalog.component.html',\r\n  styleUrls: ['./parts-catalog.component.scss']\r\n})\r\nexport class PartsCatalogComponent implements OnInit {\r\n  // Data properties\r\n  parts: InventoryPart[] = [];\r\n  loading = true;\r\n  error: string | null = null;\r\n  isDropdownOpen = false;\r\n  showDeleteConfirmationModal = false;\r\n  // Search and filter properties\r\n  searchTerm = '';\r\n  selectedStatus = '';\r\n  currentPage = 1;\r\n  perPage = 15;\r\n  totalParts = 0;\r\n  totalPages = 0;\r\n\r\n  // View control properties\r\n  currentView: 'grid' | 'list' | 'compact' | 'table' = 'grid';\r\n  showAddPartModal = false;\r\n  showEditPartModal = false;\r\n  selectedPart: InventoryPart | null = null;\r\n  partLoading = false;\r\n\r\n  // Summary data\r\n  summaryData = {\r\n    totalParts: 0,\r\n    lowStockItems: 0,\r\n    totalValue: 0\r\n  };\r\n\r\n  constructor(private analyticsService: InventoryAnalyticsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadPartsCatalog();\r\n    this.loadPartsOverview();\r\n  }\r\n\r\n  loadPartsCatalog(): void {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    this.analyticsService.getPartsCatalog(\r\n      this.searchTerm || undefined,\r\n      this.selectedStatus || undefined,\r\n      this.currentPage,\r\n      this.perPage\r\n    ).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.parts = response.data.data;\r\n          this.totalParts = response.data.total;\r\n          this.totalPages = response.data.last_page;\r\n          this.currentPage = response.data.current_page;\r\n          this.calculateSummaryData();\r\n        } else {\r\n          this.error = 'Failed to load parts catalog';\r\n        }\r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Error loading parts catalog:', err);\r\n        this.error = 'Error loading parts catalog. Please try again.';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  calculateSummaryData(): void {\r\n    this.summaryData.totalParts = this.totalParts;\r\n    this.summaryData.lowStockItems = this.parts.filter(part =>\r\n      part.reorder_point && part.reorder_point > 0\r\n    ).length;\r\n    this.summaryData.totalValue = this.parts.reduce((sum, part) =>\r\n      sum + Number(part.unit_cost || 0), 0\r\n    );\r\n  }\r\n\r\n  loadPartsOverview(): void {\r\n    this.analyticsService.getPartsOverview().subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.summaryData.totalParts = response.data.total_parts;\r\n          this.summaryData.lowStockItems = response.data.low_stock_count;\r\n          this.summaryData.totalValue = response.data.total_value;\r\n          console.log('Parts overview:', this.summaryData.totalValue);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error('Error loading parts overview:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearchChange(): void {\r\n    // No-op; apply on button click\r\n  }\r\n\r\n  onStatusFilterChange(): void {\r\n    // No-op; apply on button click\r\n  }\r\n\r\n  applyFilters(): void {\r\n    this.currentPage = 1;\r\n    this.loadPartsCatalog();\r\n  }\r\n\r\n  clearFilters(): void {\r\n    this.searchTerm = '';\r\n    this.selectedStatus = '';\r\n    this.currentPage = 1;\r\n    this.loadPartsCatalog();\r\n  }\r\n\r\n  onPageChange(page: number): void {\r\n    this.currentPage = page;\r\n    this.loadPartsCatalog();\r\n  }\r\n\r\n  onViewChange(view: 'grid' | 'list' | 'compact' | 'table'): void {\r\n    this.currentView = view;\r\n  }\r\n\r\n  openAddPartModal(): void {\r\n    this.showAddPartModal = true;\r\n  }\r\n\r\n  closeAddPartModal(): void {\r\n    this.showAddPartModal = false;\r\n  }\r\n\r\n  openEditPartModal(part: InventoryPart): void {\r\n    this.selectedPart = { ...part };\r\n    this.showEditPartModal = true;\r\n  }\r\n\r\n  closeEditPartModal(): void {\r\n    this.selectedPart = null;\r\n    this.showEditPartModal = false;\r\n  }\r\n\r\n  onCreatePart(partData: CreatePartRequest): void {\r\n    this.partLoading = true;\r\n    this.analyticsService.createPart(partData).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.closeAddPartModal();\r\n          this.loadPartsCatalog();\r\n          // You could add a success notification here\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error('Error creating part:', err);\r\n        this.partLoading = false;\r\n      }\r\n    }).add(() =>{\r\n      this.partLoading = false;\r\n    });\r\n  }\r\n\r\n  onUpdatePart(partData: UpdatePartRequest): void {\r\n    this.partLoading = true;\r\n    if (!this.selectedPart) return;\r\n\r\n    this.analyticsService.updatePart(this.selectedPart.id, partData).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.closeEditPartModal();\r\n          this.loadPartsCatalog();\r\n          // You could add a success notification here\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error('Error updating part:', err);\r\n        // You could add an error notification here\r\n        this.partLoading = false;\r\n      }\r\n    }).add(() => {\r\n      this.partLoading = false;\r\n    });\r\n  }\r\n\r\n  openDeleteConfirmationModal(selectedPart: InventoryPart): void {\r\n    this.selectedPart = selectedPart;\r\n    this.showDeleteConfirmationModal = true;\r\n  }\r\n\r\n  onDeletePart(partId: number): void {\r\n    this.analyticsService.deletePart(partId).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.closeDeleteModal();\r\n          this.loadPartsCatalog();\r\n          // You could add a success notification here\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error('Error deleting part:', err);\r\n        // You could add an error notification here\r\n      }\r\n    });\r\n  }\r\n\r\n  getStockStatus(part: InventoryPart): { status: string; class: string; icon: string } {\r\n    if (!part.reorder_point || part.reorder_point <= 0) {\r\n      return { status: 'In Stock', class: 'in-stock', icon: 'check-circle' };\r\n    }\r\n\r\n    // This is a simplified check - in a real app you'd compare with actual stock levels\r\n    if (part.unit_cost && part.unit_cost > 0) {\r\n      return { status: 'Low Stock', class: 'low-stock', icon: 'exclamation-triangle' };\r\n    }\r\n\r\n    return { status: 'Out of Stock', class: 'out-of-stock', icon: 'x-circle' };\r\n  }\r\n\r\n  refreshData(): void {\r\n    this.loadPartsCatalog();\r\n  }\r\n\r\n  getStatusOptions(): string[] {\r\n    return ['active', 'inactive', 'discontinued'];\r\n  }\r\n\r\n  closeDeleteModal(): void {\r\n    this.showDeleteConfirmationModal = false;\r\n  }\r\n\r\n}\r\n", "<div class=\"parts-catalog\">\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading\" class=\"loading-state\">\r\n    <div class=\"loading-spinner\"></div>\r\n    <p>Loading parts catalog...</p>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error && !loading\" class=\"error-state\">\r\n    <svg class=\"w-12 h-12 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n            d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\r\n    </svg>\r\n    <h3 class=\"error-title\">{{ error }}</h3>\r\n    <button class=\"btn btn-primary\" (click)=\"refreshData()\">\r\n      <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n              d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\r\n      </svg>\r\n      Retry\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Parts Catalog Content -->\r\n  <div *ngIf=\"!loading && !error\">\r\n    <!-- Summary Cards Row -->\r\n    <div class=\"summary-cards-row\">\r\n      <div class=\"summary-card total-parts\">\r\n        <div class=\"card-icon\">\r\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                  d=\"M20 7l-8-4-8 4m16 0l-8 4m8-14V4a2 2 0 00-2-2H6a2 2 0 00-2 2v3m16 0H4\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <div class=\"card-value\">{{ summaryData.totalParts }}</div>\r\n          <div class=\"card-label\">Total Parts</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"summary-card low-stock\">\r\n        <div class=\"card-icon\">\r\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <div class=\"card-value warning\">{{ summaryData.lowStockItems }}</div>\r\n          <div class=\"card-label\">Low Stock Items</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"summary-card total-value\">\r\n        <div class=\"card-icon\">\r\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                  d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <div class=\"card-value\">${{ summaryData.totalValue.toLocaleString() }}</div>\r\n          <div class=\"card-label\">Total Inventory Value</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Search and Filters Section -->\r\n    <div class=\"search-filters-section\">\r\n      <div class=\"search-row\">\r\n        <div class=\"search-container grid-cols-2 !grid\">\r\n          <svg class=\"search-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n          </svg>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search here...\"\r\n            class=\"search-input\"\r\n            [(ngModel)]=\"searchTerm\">\r\n\r\n          <div class=\"grid-cols-2\">\r\n            @if (searchTerm || selectedStatus) {\r\n              <button class=\"btn btn-outline\" (click)=\"clearFilters()\" style=\"margin-left: 0.5rem;\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" style=\"margin-right: .5rem;\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                </svg>\r\n                Clear Filters\r\n              </button>\r\n              <button class=\"btn btn-primary\" (click)=\"applyFilters()\" style=\"margin-left: 0.5rem;\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" style=\"margin-right: .5rem;\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                        d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n                </svg>\r\n                Apply Filters\r\n              </button>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"status-filter relative\">\r\n          <select\r\n            (mousedown)=\"isDropdownOpen = true\"\r\n            (change)=\"isDropdownOpen =false\"\r\n            (blur)=\"isDropdownOpen = false\"\r\n            class=\"status-select\"\r\n            [(ngModel)]=\"selectedStatus\">\r\n            <option value=\"\">All Status</option>\r\n            <option *ngFor=\"let status of getStatusOptions()\" [value]=\"status\">\r\n              {{ status | titlecase }}\r\n            </option>\r\n          </select>\r\n\r\n          <svg class=\"dropdown-arrow absolute top-1/2 right-2 transform -translate-y-1/2 w-4 h-4\"\r\n               [class.rotated]=\"isDropdownOpen\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n          </svg>\r\n        </div>\r\n\r\n        <div class=\"actions-row\">\r\n          <div class=\"view-controls\">\r\n            <div class=\"view-toggles gap-2\">\r\n              <button\r\n                class=\"view-toggle\"\r\n                [class.active]=\"currentView === 'grid'\"\r\n                (click)=\"onViewChange('grid')\"\r\n                title=\"Grid View\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                        d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"></path>\r\n                </svg>\r\n              </button>\r\n              <button\r\n                class=\"view-toggle !hidden\"\r\n                [class.active]=\"currentView === 'list'\"\r\n                (click)=\"onViewChange('list')\"\r\n                title=\"List View\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                        d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"></path>\r\n                </svg>\r\n              </button>\r\n              <button\r\n                class=\"view-toggle !hidden\"\r\n                [class.active]=\"currentView === 'compact'\"\r\n                (click)=\"onViewChange('compact')\"\r\n                title=\"Compact Grid\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                        d=\"M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z\"></path>\r\n                </svg>\r\n              </button>\r\n              <button\r\n                class=\"view-toggle\"\r\n                [class.active]=\"currentView === 'table'\"\r\n                (click)=\"onViewChange('table')\"\r\n                title=\"Table View\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                        d=\"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H6a2 2 0 00-2 2v8a2 2 0 002 2z\"></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n\r\n\r\n            <button class=\"add-part-btn\" (click)=\"openAddPartModal()\">\r\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"></path>\r\n              </svg>\r\n              Add Part\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Parts Display -->\r\n    <div class=\"parts-display\">\r\n      <!-- Grid View -->\r\n      <div *ngIf=\"currentView === 'grid'\" class=\"parts-grid\">\r\n        <div *ngFor=\"let part of parts\" class=\"part-card\">\r\n          <div class=\"part-header\">\r\n            <div class=\"part-info\">\r\n              <h4 class=\"part-name\">{{ part.name }}</h4>\r\n              <span class=\"part-id\">{{ part.part_number }}</span>\r\n              <span class=\"part-description !line-clamp-2\" *ngIf=\"part.description\">{{ part.description }}</span>\r\n            </div>\r\n            <div class=\"stock-status\">\r\n              <span class=\"status-badge\" [class]=\"getStockStatus(part).class\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                        d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\r\n                </svg>\r\n                {{ getStockStatus(part).status }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"part-details\">\r\n            <div class=\"detail-row\" *ngIf=\"part.unit_cost\">\r\n              <span class=\"detail-label\">Unit Cost:</span>\r\n              <span class=\"detail-value\">${{ part.unit_cost.toLocaleString() }}</span>\r\n            </div>\r\n            <div class=\"detail-row\">\r\n              <span class=\"detail-label\">UOM:</span>\r\n              <span class=\"detail-value\">{{ part.uom }}</span>\r\n            </div>\r\n            <div class=\"detail-row\" *ngIf=\"part.reorder_point\">\r\n              <span class=\"detail-label\">Reorder Point:</span>\r\n              <span class=\"detail-value\">{{ part.reorder_point }}</span>\r\n            </div>\r\n            <div class=\"detail-row\" *ngIf=\"part.abc_class\">\r\n              <span class=\"detail-label\">ABC Class:</span>\r\n              <span class=\"detail-value\">{{ part.abc_class }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"part-actions\">\r\n            <button class=\"action-btn edit\" (click)=\"openEditPartModal(part)\">\r\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                      d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\r\n              </svg>\r\n              Edit\r\n            </button>\r\n            <button class=\"action-btn delete\" (click)=\"openDeleteConfirmationModal(part)\">\r\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                      d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n              </svg>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Table View -->\r\n      <div *ngIf=\"currentView === 'table'\" class=\"parts-table-container\">\r\n        <table class=\"parts-table\">\r\n          <thead>\r\n          <tr class=\"uppercase\">\r\n            <th>Part Number</th>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th>UOM</th>\r\n            <th>Unit Cost</th>\r\n            <th>Reorder Point</th>\r\n            <th>ABC Class</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let part of parts\">\r\n            <td class=\"part-number\">{{ part.part_number }}</td>\r\n            <td class=\"part-name\">{{ part.name }}</td>\r\n            <td class=\"part-description truncate\" title=\"{{ part.description }}\">{{ part.description || '-' }}</td>\r\n            <td class=\"part-uom\">{{ part.uom }}</td>\r\n            <td class=\"part-cost\" *ngIf=\"part.unit_cost\">${{ part.unit_cost.toLocaleString() }}</td>\r\n            <td class=\"part-cost\" *ngIf=\"!part.unit_cost\">-</td>\r\n            <td class=\"part-reorder\">{{ part.reorder_point || '-' }}</td>\r\n            <td class=\"part-abc\">{{ part.abc_class || '-' }}</td>\r\n            <td class=\"part-status\">\r\n                <span class=\"status-badge\" [class]=\"getStockStatus(part).class\">\r\n                  {{ getStockStatus(part).status }}\r\n                </span>\r\n            </td>\r\n            <td class=\"part-actions\">\r\n              <button class=\"action-btn edit\" (click)=\"openEditPartModal(part)\" title=\"Edit\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                        d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\r\n                </svg>\r\n              </button>\r\n              <button class=\"action-btn delete\" (click)=\"openDeleteConfirmationModal(part)\" title=\"Delete\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n                </svg>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- No Results Message -->\r\n      <div *ngIf=\"parts.length === 0\" class=\"no-results\">\r\n        <svg class=\"w-12 h-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n        </svg>\r\n        <h3 class=\"no-results-title\">No Parts Found</h3>\r\n        <p class=\"no-results-description\">Try adjusting your search criteria or create your first part.</p>\r\n        <button class=\"btn btn-primary\" (click)=\"openAddPartModal()\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"></path>\r\n          </svg>\r\n          Add First Part\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Pagination -->\r\n    <div *ngIf=\"totalPages > 1\" class=\"pagination\">\r\n      <button\r\n        class=\"pagination-btn\"\r\n        [disabled]=\"currentPage === 1\"\r\n        (click)=\"onPageChange(currentPage - 1)\">\r\n        <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"></path>\r\n        </svg>\r\n        Previous\r\n      </button>\r\n\r\n      <div class=\"pagination-pages\">\r\n        <button\r\n          *ngFor=\"let page of [].constructor(totalPages); let i = index\"\r\n          class=\"pagination-page\"\r\n          [class.active]=\"currentPage === i + 1\"\r\n          (click)=\"onPageChange(i + 1)\">\r\n          {{ i + 1 }}\r\n        </button>\r\n      </div>\r\n\r\n      <button\r\n        class=\"pagination-btn\"\r\n        [disabled]=\"currentPage === totalPages\"\r\n        (click)=\"onPageChange(currentPage + 1)\">\r\n        Next\r\n        <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Floating Action Button -->\r\n  <button class=\"fab\" (click)=\"openAddPartModal()\" title=\"Add New Part\">\r\n    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"></path>\r\n    </svg>\r\n  </button>\r\n\r\n  <!-- Add Part Modal -->\r\n  <app-add-part-modal\r\n    *ngIf=\"showAddPartModal\"\r\n    [manageLoading]=\"partLoading\"\r\n    (closeModal)=\"closeAddPartModal()\"\r\n    (createPart)=\"onCreatePart($event)\">\r\n  </app-add-part-modal>\r\n\r\n  <!-- Edit Part Modal -->\r\n  <app-edit-part-modal\r\n    *ngIf=\"showEditPartModal && selectedPart\"\r\n    [manageLoading]=\"partLoading\"\r\n    [part]=\"selectedPart\"\r\n    (closeModal)=\"closeEditPartModal()\"\r\n    (updatePart)=\"onUpdatePart($event)\">\r\n  </app-edit-part-modal>\r\n\r\n  <!--Delete Part Modal-->\r\n  <app-delete-confirmation-modal\r\n    [isOpen]=\"showDeleteConfirmationModal\"\r\n    [selectedCount]=\"selectedPart ? 1 : 0\"\r\n    [entitySingular]=\"'Part'\"\r\n    [entityPlural]=\"'Parts'\"\r\n    [warningText]=\"null\"\r\n    (closeModal)=\"closeDeleteModal()\"\r\n    (confirmDelete)=\"onDeletePart(selectedPart?.id)\">\r\n  </app-delete-confirmation-modal>\r\n</div>\r\n"],
  "mappings": "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",
  "names": []
}
