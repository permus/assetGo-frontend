{
  "version": 3,
  "sources": ["src/app/teams/components/team-delete-confirmation-modal/team-delete-confirmation-modal.component.ts", "src/app/teams/components/team-delete-confirmation-modal/team-delete-confirmation-modal.component.html", "src/app/teams/services/team.service.ts", "src/app/teams/components/team-form-modal/team-form-modal.component.ts", "src/app/teams/components/team-form-modal/team-form-modal.component.html", "src/app/teams/team-list/team-list.component.ts", "src/app/teams/team-list/team-list.component.html", "src/app/teams/teams-routing.module.ts", "src/app/teams/teams.module.ts"],
  "sourcesContent": ["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TeamMember } from '../../services/team.service';\r\n\r\n@Component({\r\n  selector: 'app-team-delete-confirmation-modal',\r\n  templateUrl: './team-delete-confirmation-modal.component.html',\r\n  styleUrls: ['./team-delete-confirmation-modal.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule]\r\n})\r\nexport class TeamDeleteConfirmationModalComponent {\r\n  @Input() teamMember: TeamMember | null = null;\r\n  @Output() cancelled = new EventEmitter<void>();\r\n  @Output() confirmed = new EventEmitter<{ teamId: number; reason: string }>();\r\n\r\n  deleteReason = '';\r\n\r\n  onClose(): void {\r\n    this.cancelled.emit();\r\n  }\r\n\r\n  onConfirmDelete(): void {\r\n    if (this.teamMember) {\r\n      this.confirmed.emit({\r\n        teamId: this.teamMember.id,\r\n        reason: this.deleteReason.trim()\r\n      });\r\n    }\r\n  }\r\n\r\n  onBackdropClick(event: Event): void {\r\n    if (event.target === event.currentTarget) {\r\n      this.onClose();\r\n    }\r\n  }\r\n}\r\n", "<div class=\"fixed inset-0 bg-[#00000085] flex items-center justify-center z-50\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"relative mx-auto p-6  w-[500px] rounded-lg bg-white\">\r\n    <div class=\"mt-3\">\r\n      <!-- Header -->\r\n      <div class=\"flex items-center justify-between mb-6\">\r\n        <div class=\"flex items-center\">\r\n          <svg class=\"w-6 h-6 text-red-600 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n          </svg>\r\n          <h3 class=\"text-xl font-semibold text-gray-900\">Remove Team Member</h3>\r\n        </div>\r\n        <button\r\n          (click)=\"onClose()\"\r\n          class=\"text-gray-400 hover:text-gray-600 focus:outline-none\">\r\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Deletion Reason Section -->\r\n      <div class=\"mb-6\">\r\n        <label for=\"deleteReason\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          Deletion Reason (Optional)\r\n        </label>\r\n        <textarea\r\n          id=\"deleteReason\"\r\n          [(ngModel)]=\"deleteReason\"\r\n          rows=\"4\"\r\n          class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500 sm:text-sm\"\r\n          placeholder=\"Enter reason for removing this team member...\"></textarea>\r\n        <p class=\"mt-1 text-xs text-gray-500\">This will be recorded in the audit trail.</p>\r\n      </div>\r\n\r\n      <!-- Confirmation Section -->\r\n      <div class=\"text-center mb-6\">\r\n        <!-- Large Trash Icon -->\r\n        <div class=\"mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-red-100 mb-4\">\r\n          <svg class=\"h-8 w-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n          </svg>\r\n        </div>\r\n\r\n        <!-- Confirmation Question -->\r\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">\r\n          Are you sure you want to remove <strong>\"{{ teamMember?.first_name }} {{ teamMember?.last_name }}\"</strong>?\r\n        </h3>\r\n        \r\n        <!-- Warning Message -->\r\n        <p class=\"text-sm text-gray-600 mb-4\">\r\n          This action cannot be undone. The team member will be permanently removed from the system.\r\n        </p>\r\n\r\n        <!-- Important Warning Box -->\r\n        <div class=\"bg-red-50 border border-red-200 rounded-md p-4 mb-4\">\r\n          <div class=\"flex items-center\">\r\n            <svg class=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\r\n            </svg>\r\n            <span class=\"text-sm font-medium text-red-800\">\r\n              Warning: This action will permanently remove the team member and all associated data.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Actions -->\r\n      <div class=\"flex justify-end space-x-3\">\r\n        <button\r\n          (click)=\"onClose()\"\r\n          class=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors\">\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"onConfirmDelete()\"\r\n          class=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\">\r\n          Remove Member\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AuthService } from '../../core/services/auth.service';\r\n\r\n// Team Member interfaces (users with user_type = 'team')\r\nexport interface TeamMember {\r\n  id: number;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  role_id?: number;\r\n  role?: {\r\n    id: number;\r\n    name: string;\r\n    description?: string;\r\n  };\r\n  hourly_rate?: number;\r\n  user_type: 'team';\r\n  company_id: number;\r\n  created_by: number;\r\n  email_verified_at?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  showMenu?: boolean; // For UI dropdown menu state\r\n}\r\n\r\nexport interface TeamMemberStatistics {\r\n  total_team_members: number;\r\n  active_team_members: number;\r\n  pending_team_members: number;\r\n}\r\n\r\nexport interface AvailableRole {\r\n  id: number;\r\n  name: string;\r\n  description?: string;\r\n}\r\n\r\nexport interface TeamMembersResponse {\r\n  success: boolean;\r\n  data: TeamMember[];\r\n}\r\n\r\nexport interface TeamMemberResponse {\r\n  success: boolean;\r\n  data: TeamMember;\r\n}\r\n\r\nexport interface TeamMemberStatisticsResponse {\r\n  success: boolean;\r\n  data: TeamMemberStatistics;\r\n}\r\n\r\nexport interface AvailableRolesResponse {\r\n  success: boolean;\r\n  data: AvailableRole[];\r\n}\r\n\r\nexport interface CreateTeamMemberRequest {\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  role_id: number;\r\n  hourly_rate?: number;\r\n}\r\n\r\nexport interface UpdateTeamMemberRequest {\r\n  first_name?: string;\r\n  last_name?: string;\r\n  email?: string;\r\n  role_id?: number;\r\n  hourly_rate?: number;\r\n}\r\n\r\nexport interface ResendInvitationRequest {\r\n  id: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TeamService {\r\n  private apiUrl = `${environment.apiUrl}/teams`;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) {}\r\n\r\n  private getAuthHeaders(): { headers: { [header: string]: string } } {\r\n    const token = this.authService.getToken();\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n      }\r\n    };\r\n  }\r\n\r\n  // Get all team members\r\n  getTeamMembers(): Observable<TeamMembersResponse> {\r\n    return this.http.get<TeamMembersResponse>(this.apiUrl, this.getAuthHeaders());\r\n  }\r\n\r\n  // Get a specific team member\r\n  getTeamMember(id: number): Observable<TeamMemberResponse> {\r\n    return this.http.get<TeamMemberResponse>(`${this.apiUrl}/${id}`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Create a new team member (invite)\r\n  createTeamMember(teamMemberData: CreateTeamMemberRequest): Observable<TeamMemberResponse> {\r\n    return this.http.post<TeamMemberResponse>(this.apiUrl, teamMemberData, this.getAuthHeaders());\r\n  }\r\n\r\n  // Update a team member\r\n  updateTeamMember(id: number, teamMemberData: UpdateTeamMemberRequest): Observable<TeamMemberResponse> {\r\n    return this.http.put<TeamMemberResponse>(`${this.apiUrl}/${id}`, teamMemberData, this.getAuthHeaders());\r\n  }\r\n\r\n  // Delete a team member\r\n  deleteTeamMember(id: number): Observable<{ success: boolean; message: string }> {\r\n    return this.http.delete<{ success: boolean; message: string }>(`${this.apiUrl}/${id}`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Resend invitation\r\n  resendInvitation(id: number): Observable<{ success: boolean; message: string }> {\r\n    return this.http.post<{ success: boolean; message: string }>(`${this.apiUrl}/${id}/resend-invitation`, {}, this.getAuthHeaders());\r\n  }\r\n\r\n  // Get team member statistics\r\n  getTeamMemberStatistics(): Observable<TeamMemberStatisticsResponse> {\r\n    return this.http.get<TeamMemberStatisticsResponse>(`${this.apiUrl}/statistics`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Get available roles for team members\r\n  getAvailableRoles(): Observable<AvailableRolesResponse> {\r\n    return this.http.get<AvailableRolesResponse>(`${this.apiUrl}/available-roles`, this.getAuthHeaders());\r\n  }\r\n}\r\n", "import { Component, EventEmitter, Input, OnInit, Output, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { TeamService, TeamMember } from '../../services/team.service';\r\nimport { RoleService, Role } from '../../../roles/services/role.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-team-form-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\r\n  templateUrl: './team-form-modal.component.html',\r\n  styleUrls: ['./team-form-modal.component.scss']\r\n})\r\nexport class TeamFormModalComponent implements OnInit, OnChanges {\r\n  @Input() teamMember: TeamMember | null = null;\r\n  @Input() isEditMode = false;\r\n  @Output() teamMemberSaved = new EventEmitter<TeamMember>();\r\n  @Output() cancelled = new EventEmitter<void>();\r\n\r\n  teamMemberForm: FormGroup;\r\n  loading = false;\r\n  error = '';\r\n  availableRoles: Role[] = [];\r\n  loadingRoles = false;\r\n  rolesError = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private teamService: TeamService,\r\n    private roleService: RoleService\r\n  ) {\r\n    this.teamMemberForm = this.fb.group({\r\n      first_name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]],\r\n      last_name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      role_id: ['', [Validators.required]],\r\n      hourly_rate: [null, [Validators.min(0)]]\r\n    });\r\n    this.loadAvailableRoles();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.teamMember && this.isEditMode) {\r\n      this.loadTeamMember();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['teamMember'] && changes['teamMember'].currentValue && this.isEditMode) {\r\n      // Wait a bit for roles to load if they haven't already\r\n      if (this.availableRoles.length > 0) {\r\n        this.loadTeamMember();\r\n      } else {\r\n        // If roles aren't loaded yet, wait a bit and try again\r\n        setTimeout(() => {\r\n          if (this.availableRoles.length > 0) {\r\n            this.loadTeamMember();\r\n          }\r\n        }, 100);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Method to manually update form when needed\r\n  updateFormWithTeamMember(): void {\r\n    if (this.teamMember && this.isEditMode && this.availableRoles.length > 0) {\r\n      this.loadTeamMember();\r\n    }\r\n  }\r\n\r\n  loadAvailableRoles(): void {\r\n    this.loadingRoles = true;\r\n    this.rolesError = '';\r\n\r\n    this.roleService.getRoles().subscribe({\r\n      next: (response: any) => {\r\n        this.availableRoles = response.data || [];\r\n        this.loadingRoles = false;\r\n        console.log('Available roles loaded:', this.availableRoles);\r\n        \r\n        // If we're in edit mode and have team member data, reload the form\r\n        if (this.isEditMode && this.teamMember) {\r\n          this.loadTeamMember();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading available roles:', error);\r\n        // Fallback to team service available roles\r\n        this.teamService.getAvailableRoles().subscribe({\r\n          next: (response: any) => {\r\n            this.availableRoles = response.data || [];\r\n            this.loadingRoles = false;\r\n            console.log('Available roles loaded (fallback):', this.availableRoles);\r\n            \r\n            // If we're in edit mode and have team member data, reload the form\r\n            if (this.isEditMode && this.teamMember) {\r\n              this.loadTeamMember();\r\n            }\r\n          },\r\n          error: (fallbackError: any) => {\r\n            console.error('Fallback also failed:', fallbackError);\r\n            this.rolesError = 'Failed to load roles. Please try again.';\r\n            this.loadingRoles = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  loadTeamMember(): void {\r\n    if (this.teamMember) {\r\n      console.log('Loading team member data:', this.teamMember);\r\n      \r\n      // Get role_id from either role_id property or role.id\r\n      const roleId = this.teamMember.role_id || this.teamMember.role?.id;\r\n      const hourlyRate = this.teamMember.hourly_rate;\r\n      \r\n      console.log('Role ID:', roleId, 'Type:', typeof roleId);\r\n      console.log('Hourly Rate:', hourlyRate, 'Type:', typeof hourlyRate);\r\n      \r\n      // Convert role_id to number if it's a string\r\n      const roleIdNumber = roleId ? Number(roleId) : '';\r\n      \r\n      this.teamMemberForm.patchValue({\r\n        first_name: this.teamMember.first_name,\r\n        last_name: this.teamMember.last_name,\r\n        email: this.teamMember.email,\r\n        role_id: roleIdNumber,\r\n        hourly_rate: hourlyRate || null\r\n      });\r\n      \r\n      console.log('Form values after patch:', this.teamMemberForm.value);\r\n      console.log('Available roles:', this.availableRoles);\r\n    }\r\n  }\r\n\r\n  // Close dropdown when clicking outside\r\n  onBackdropClick(event: Event): void {\r\n    if (event.target === event.currentTarget) {\r\n      this.onCancel();\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.teamMemberForm.invalid) {\r\n      this.markFormGroupTouched();\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.error = '';\r\n\r\n    const formData = this.teamMemberForm.value;\r\n\r\n    if (this.isEditMode && this.teamMember) {\r\n      this.teamService.updateTeamMember(this.teamMember.id, formData).subscribe({\r\n        next: (response: any) => {\r\n          this.loading = false;\r\n          this.teamMemberSaved.emit(response.data);\r\n        },\r\n        error: (error: any) => {\r\n          this.loading = false;\r\n          this.error = error.error?.message || 'Failed to update team member. Please try again.';\r\n        }\r\n      });\r\n    } else {\r\n      this.teamService.createTeamMember(formData).subscribe({\r\n        next: (response: any) => {\r\n          this.loading = false;\r\n          this.teamMemberSaved.emit(response.data);\r\n        },\r\n        error: (error: any) => {\r\n          this.loading = false;\r\n          this.error = error.error?.message || 'Failed to create team member. Please try again.';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelled.emit();\r\n  }\r\n\r\n  getFieldError(fieldName: string): string {\r\n    const field = this.teamMemberForm.get(fieldName);\r\n    if (field?.invalid && (field?.dirty || field?.touched)) {\r\n      if (field?.errors?.['required']) {\r\n        return `${this.getFieldLabel(fieldName)} is required.`;\r\n      }\r\n      if (field?.errors?.['email']) {\r\n        return 'Please enter a valid email address.';\r\n      }\r\n      if (field?.errors?.['minlength']) {\r\n        return `${this.getFieldLabel(fieldName)} must be at least ${field.errors['minlength'].requiredLength} characters.`;\r\n      }\r\n      if (field?.errors?.['maxlength']) {\r\n        return `${this.getFieldLabel(fieldName)} must not exceed ${field.errors['maxlength'].requiredLength} characters.`;\r\n      }\r\n      if (field?.errors?.['min']) {\r\n        return `${this.getFieldLabel(fieldName)} must be at least ${field.errors['min'].min}.`;\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private getFieldLabel(fieldName: string): string {\r\n    const labels: { [key: string]: string } = {\r\n      first_name: 'First name',\r\n      last_name: 'Last name',\r\n      email: 'Email',\r\n      role_id: 'Team role',\r\n      hourly_rate: 'Hourly rate'\r\n    };\r\n    return labels[fieldName] || fieldName;\r\n  }\r\n\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.teamMemberForm.controls).forEach(key => {\r\n      const control = this.teamMemberForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n}\r\n", "<!-- Modal Backdrop -->\r\n<div class=\"fixed inset-0 bg-[#00000085] flex items-center justify-center z-50\" (click)=\"onBackdropClick($event)\">\r\n  <!-- Modal Content -->\r\n  <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-md mx-4 transform transition-all\">\r\n    <!-- Modal Header -->\r\n    <div class=\"px-6 py-4 border-b border-gray-200\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <h3 class=\"text-lg font-semibold text-gray-900\">\r\n          {{ isEditMode ? 'Edit Team Member' : 'Invite New Team Member' }}\r\n        </h3>\r\n        <button\r\n          (click)=\"onCancel()\"\r\n          class=\"text-gray-400 hover:text-gray-600 transition-colors\">\r\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal Body -->\r\n    <div class=\"px-6 py-4\">\r\n      <form [formGroup]=\"teamMemberForm\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- Error Message -->\r\n        <div *ngIf=\"error\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n          <div class=\"flex\">\r\n            <svg class=\"w-5 h-5 text-red-400 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n            </svg>\r\n            <p class=\"ml-2 text-sm text-red-700\">{{ error }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- First Name -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"first_name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            First Name *\r\n          </label>\r\n          <input\r\n            id=\"first_name\"\r\n            type=\"text\"\r\n            formControlName=\"first_name\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n            placeholder=\"Enter first name\"\r\n            [class.border-red-300]=\"teamMemberForm.get('first_name')?.invalid && (teamMemberForm.get('first_name')?.dirty || teamMemberForm.get('first_name')?.touched)\">\r\n          <p *ngIf=\"getFieldError('first_name')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('first_name') }}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Last Name -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"last_name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Last Name *\r\n          </label>\r\n          <input\r\n            id=\"last_name\"\r\n            type=\"text\"\r\n            formControlName=\"last_name\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n            placeholder=\"Enter last name\"\r\n            [class.border-red-300]=\"teamMemberForm.get('last_name')?.invalid && (teamMemberForm.get('last_name')?.dirty || teamMemberForm.get('last_name')?.touched)\">\r\n          <p *ngIf=\"getFieldError('last_name')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('last_name') }}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Email -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Email *\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            formControlName=\"email\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n            placeholder=\"Enter email address\"\r\n            [class.border-red-300]=\"teamMemberForm.get('email')?.invalid && (teamMemberForm.get('email')?.dirty || teamMemberForm.get('email')?.touched)\">\r\n          <p *ngIf=\"getFieldError('email')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('email') }}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Team Role -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"role_id\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Team Role *\r\n          </label>\r\n          <select\r\n            id=\"role_id\"\r\n            formControlName=\"role_id\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n            [class.border-red-300]=\"teamMemberForm.get('role_id')?.invalid && (teamMemberForm.get('role_id')?.dirty || teamMemberForm.get('role_id')?.touched)\">\r\n            <option value=\"\">Select a role</option>\r\n            <option *ngFor=\"let role of availableRoles\" [value]=\"role.id\">\r\n              {{ role.name }}\r\n            </option>\r\n          </select>\r\n          <p *ngIf=\"getFieldError('role_id')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('role_id') }}\r\n          </p>\r\n          <p *ngIf=\"rolesError\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ rolesError }}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Hourly Rate -->\r\n        <div class=\"mb-6\">\r\n          <label for=\"hourly_rate\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Hourly Rate (Optional)\r\n          </label>\r\n          <input\r\n            id=\"hourly_rate\"\r\n            type=\"number\"\r\n            formControlName=\"hourly_rate\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n            placeholder=\"Enter hourly rate\"\r\n            min=\"0\"\r\n            step=\"0.01\"\r\n            [class.border-red-300]=\"teamMemberForm.get('hourly_rate')?.invalid && (teamMemberForm.get('hourly_rate')?.dirty || teamMemberForm.get('hourly_rate')?.touched)\">\r\n          <p *ngIf=\"getFieldError('hourly_rate')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('hourly_rate') }}\r\n          </p>\r\n          <p class=\"mt-1 text-xs text-gray-500\">\r\n            Optional hourly rate for this team member\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Modal Actions -->\r\n        <div class=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"onCancel()\"\r\n            class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\">\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"teamMemberForm.invalid || loading\"\r\n            class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\">\r\n            <svg *ngIf=\"loading\" class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white inline\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            {{ isEditMode ? 'Update Team Member' : 'Send Invitation' }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n", "import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TeamService, TeamMember, TeamMemberStatistics } from '../services/team.service';\r\nimport { TeamDeleteConfirmationModalComponent } from '../components/team-delete-confirmation-modal/team-delete-confirmation-modal.component';\r\nimport { TeamFormModalComponent } from '../components/team-form-modal/team-form-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-team-list',\r\n  templateUrl: './team-list.component.html',\r\n  styleUrls: ['./team-list.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, TeamDeleteConfirmationModalComponent, TeamFormModalComponent]\r\n})\r\nexport class TeamListComponent implements OnInit {\r\n  teamMembers: TeamMember[] = [];\r\n  filteredTeamMembers: TeamMember[] = [];\r\n  loading = false;\r\n  error = '';\r\n  statistics: TeamMemberStatistics | null = null;\r\n  \r\n  // Search and filtering\r\n  searchTerm = '';\r\n  \r\n  // Sorting\r\n  selectedSort: any = null;\r\n  selectedSortDir: 'asc' | 'desc' = 'asc';\r\n  showSortDropdown = false;\r\n  \r\n  // Modal states\r\n  showDeleteModal = false;\r\n  teamMemberToDelete: TeamMember | null = null;\r\n  showFormModal = false;\r\n  teamMemberToEdit: TeamMember | null = null;\r\n  isEditMode = false;\r\n  \r\n  // Sort options\r\n  sortOptions = [\r\n    { label: 'Name', value: 'name' },\r\n    { label: 'Created Date', value: 'created_at' },\r\n    { label: 'Email', value: 'email' },\r\n    { label: 'Role', value: 'role' }\r\n  ];\r\n\r\n  constructor(\r\n    private teamService: TeamService\r\n  ) {}\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: Event): void {\r\n    const target = event.target as HTMLElement;\r\n    const dropdownButton = target.closest('button');\r\n    const dropdownMenu = target.closest('.dropdown-menu');\r\n    \r\n    // Don't close if clicking on dropdown elements\r\n    if (dropdownButton || dropdownMenu) {\r\n      return;\r\n    }\r\n    \r\n    // Close all dropdowns if clicking outside\r\n    this.teamMembers = this.teamMembers.map(tm => ({\r\n      ...tm,\r\n      showMenu: false\r\n    }));\r\n    this.filteredTeamMembers = this.filteredTeamMembers.map(tm => ({\r\n      ...tm,\r\n      showMenu: false\r\n    }));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadTeamMembers();\r\n    this.loadStatistics();\r\n  }\r\n\r\n  loadTeamMembers(): void {\r\n    this.loading = true;\r\n    this.error = '';\r\n\r\n    this.teamService.getTeamMembers().subscribe({\r\n      next: (response: any) => {\r\n        this.teamMembers = response.data;\r\n        this.filteredTeamMembers = [...this.teamMembers];\r\n        this.loading = false;\r\n      },\r\n      error: (error: any) => {\r\n        this.error = 'Failed to load team members';\r\n        this.loading = false;\r\n        console.error('Error loading team members:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadStatistics(): void {\r\n    this.teamService.getTeamMemberStatistics().subscribe({\r\n      next: (response: any) => {\r\n        this.statistics = response.data;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading team member statistics:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  createTeamMember(): void {\r\n    this.teamMemberToEdit = null;\r\n    this.isEditMode = false;\r\n    this.showFormModal = true;\r\n  }\r\n\r\n  editTeamMember(teamMember: TeamMember): void {\r\n    this.teamMemberToEdit = teamMember;\r\n    this.isEditMode = true;\r\n    this.showFormModal = true;\r\n  }\r\n\r\n  viewTeamMember(teamMember: TeamMember): void {\r\n    // For now, we'll just show the team member details in a modal or navigate to a view page\r\n    console.log('View team member:', teamMember);\r\n  }\r\n\r\n  deleteTeamMember(teamMember: TeamMember): void {\r\n    this.teamMemberToDelete = teamMember;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  closeDeleteModal(): void {\r\n    this.showDeleteModal = false;\r\n    this.teamMemberToDelete = null;\r\n  }\r\n\r\n  confirmDeleteTeamMember(data: { teamId: number, reason: string }): void {\r\n    if (!this.teamMemberToDelete) return;\r\n\r\n    this.teamService.deleteTeamMember(this.teamMemberToDelete.id).subscribe({\r\n      next: (response: any) => {\r\n        this.teamMembers = this.teamMembers.filter(tm => tm.id !== this.teamMemberToDelete!.id);\r\n        this.filteredTeamMembers = this.filteredTeamMembers.filter(tm => tm.id !== this.teamMemberToDelete!.id);\r\n        this.closeDeleteModal();\r\n      },\r\n      error: (error: any) => {\r\n        this.error = 'Failed to delete team member';\r\n        console.error('Error deleting team member:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  closeFormModal(): void {\r\n    this.showFormModal = false;\r\n    this.teamMemberToEdit = null;\r\n    this.isEditMode = false;\r\n  }\r\n\r\n  onTeamMemberSaved(teamMember: TeamMember): void {\r\n    if (this.isEditMode) {\r\n      const index = this.teamMembers.findIndex(tm => tm.id === teamMember.id);\r\n      if (index !== -1) {\r\n        this.teamMembers[index] = teamMember;\r\n        this.filteredTeamMembers = this.filteredTeamMembers.map(tm => \r\n          tm.id === teamMember.id ? teamMember : tm\r\n        );\r\n      }\r\n    } else {\r\n      this.teamMembers.unshift(teamMember);\r\n      this.filteredTeamMembers.unshift(teamMember);\r\n    }\r\n    this.closeFormModal();\r\n  }\r\n\r\n  getActiveTeamMembersCount(): number {\r\n    return this.statistics?.active_team_members || 0;\r\n  }\r\n\r\n  getTotalTeamMembersCount(): number {\r\n    return this.statistics?.total_team_members || 0;\r\n  }\r\n\r\n  onSearchChange(): void {\r\n    this.filterTeamMembers();\r\n  }\r\n\r\n  filterTeamMembers(): void {\r\n    if (!this.searchTerm.trim()) {\r\n      this.filteredTeamMembers = [...this.teamMembers];\r\n    } else {\r\n      this.filteredTeamMembers = this.teamMembers.filter(teamMember =>\r\n        `${teamMember.first_name} ${teamMember.last_name}`.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        teamMember.email.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        (teamMember.role?.name && teamMember.role.name.toLowerCase().includes(this.searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n    this.sortTeamMembers();\r\n  }\r\n\r\n  toggleSortDropdown(): void {\r\n    this.showSortDropdown = !this.showSortDropdown;\r\n  }\r\n\r\n  selectSort(sort: any): void {\r\n    this.selectedSort = sort;\r\n    this.showSortDropdown = false;\r\n    this.sortTeamMembers();\r\n  }\r\n\r\n  toggleSortDir(): void {\r\n    this.selectedSortDir = this.selectedSortDir === 'asc' ? 'desc' : 'asc';\r\n    this.sortTeamMembers();\r\n  }\r\n\r\n  sortTeamMembers(): void {\r\n    if (!this.selectedSort) return;\r\n\r\n    this.filteredTeamMembers.sort((a, b) => {\r\n      let aValue: any;\r\n      let bValue: any;\r\n\r\n      switch (this.selectedSort.value) {\r\n        case 'name':\r\n          aValue = `${a.first_name} ${a.last_name}`.toLowerCase();\r\n          bValue = `${b.first_name} ${b.last_name}`.toLowerCase();\r\n          break;\r\n        case 'email':\r\n          aValue = a.email.toLowerCase();\r\n          bValue = b.email.toLowerCase();\r\n          break;\r\n        case 'created_at':\r\n          aValue = new Date(a.created_at).getTime();\r\n          bValue = new Date(b.created_at).getTime();\r\n          break;\r\n        case 'role':\r\n          aValue = (a.role?.name || '').toLowerCase();\r\n          bValue = (b.role?.name || '').toLowerCase();\r\n          break;\r\n        default:\r\n          aValue = `${a.first_name} ${a.last_name}`.toLowerCase();\r\n          bValue = `${b.first_name} ${b.last_name}`.toLowerCase();\r\n      }\r\n\r\n      if (aValue < bValue) {\r\n        return this.selectedSortDir === 'asc' ? -1 : 1;\r\n      } else if (aValue > bValue) {\r\n        return this.selectedSortDir === 'asc' ? 1 : -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  getTeamMemberFullName(teamMember: TeamMember): string {\r\n    return `${teamMember.first_name} ${teamMember.last_name}`;\r\n  }\r\n\r\n  getTeamMemberInitials(teamMember: TeamMember): string {\r\n    return `${teamMember.first_name.charAt(0)}${teamMember.last_name.charAt(0)}`.toUpperCase();\r\n  }\r\n\r\n  toggleTeamMemberMenu(teamMemberId: number): void {\r\n    this.teamMembers = this.teamMembers.map(tm => ({\r\n      ...tm,\r\n      showMenu: tm.id === teamMemberId ? !tm.showMenu : false\r\n    }));\r\n    this.filteredTeamMembers = this.filteredTeamMembers.map(tm => ({\r\n      ...tm,\r\n      showMenu: tm.id === teamMemberId ? !tm.showMenu : false\r\n    }));\r\n  }\r\n}\r\n", "<div class=\"team-list-page min-h-screen bg-gray-50 p-6\">\r\n  <!-- Page Title and Subtitle + Actions -->\r\n  <div class=\"mb-6 flex flex-col md:flex-row md:items-center md:justify-between\">\r\n    <div>\r\n      <h1 class=\"text-2xl font-bold text-gray-900 mb-1\">Team Members</h1>\r\n      <p class=\"text-gray-600 text-base\">Manage your team members and their roles within your organization</p>\r\n    </div>\r\n    <div class=\"flex items-center space-x-3 mt-4 md:mt-0\">\r\n      <button (click)=\"createTeamMember()\" class=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold px-5 py-2 rounded-lg shadow-sm transition-colors flex items-center cursor-pointer\">\r\n        <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n        </svg>\r\n        Invite Team Member\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Statistics Cards -->\r\n  <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\" *ngIf=\"statistics\">\r\n    <div class=\"bg-white rounded-xl border border-gray-200 p-6 shadow-sm\">\r\n      <div class=\"flex items-center\">\r\n        <div class=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"ml-4\">\r\n          <p class=\"text-sm font-medium text-gray-600\">Total Team Members</p>\r\n          <p class=\"text-2xl font-bold text-gray-900\">{{ statistics.total_team_members }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"bg-white rounded-xl border border-gray-200 p-6 shadow-sm\">\r\n      <div class=\"flex items-center\">\r\n        <div class=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"ml-4\">\r\n          <p class=\"text-sm font-medium text-gray-600\">Active Members</p>\r\n          <p class=\"text-2xl font-bold text-gray-900\">{{ statistics.active_team_members }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"bg-white rounded-xl border border-gray-200 p-6 shadow-sm\">\r\n      <div class=\"flex items-center\">\r\n        <div class=\"w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"ml-4\">\r\n          <p class=\"text-sm font-medium text-gray-600\">Pending Invitations</p>\r\n          <p class=\"text-2xl font-bold text-gray-900\">{{ statistics.pending_team_members }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filters and View Type -->\r\n  <div class=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\r\n    <!-- Left: Search and Filters -->\r\n    <div class=\"flex-1 flex flex-col space-y-3 md:space-y-0 md:flex-row md:items-center md:space-x-3\">\r\n      <!-- Search -->\r\n      <div class=\"relative w-full md:w-80\">\r\n        <svg class=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n        </svg>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search team members by name or email...\"\r\n          class=\"w-full pl-10 pr-4 py-2 border-2 border-blue-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400\"\r\n          [(ngModel)]=\"searchTerm\"\r\n          (input)=\"onSearchChange()\" />\r\n      </div>\r\n\r\n      <!-- Sort Dropdown -->\r\n      <div class=\"relative\" (click)=\"$event.stopPropagation()\">\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"toggleSortDropdown()\"\r\n          class=\"w-full px-4 py-2 text-left border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white transition-all min-w-[180px]\"\r\n          [class.border-blue-500]=\"showSortDropdown\">\r\n          <div class=\"flex items-center justify-between\">\r\n            <span class=\"text-sm\">\r\n              {{ selectedSort ? 'Sort by: ' + selectedSort.label : 'Sort by' }}\r\n            </span>\r\n            <svg class=\"w-4 h-4 text-gray-400 transition-transform duration-200\" \r\n                 [class.rotate-180]=\"showSortDropdown\"\r\n                 fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n            </svg>\r\n          </div>\r\n        </button>\r\n\r\n        <!-- Sort Options Dropdown -->\r\n        <div *ngIf=\"showSortDropdown\" \r\n             class=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg\">\r\n          <div class=\"py-1\">\r\n            <div *ngFor=\"let sort of sortOptions\" \r\n                 (click)=\"selectSort(sort)\"\r\n                 class=\"px-3 py-2 text-sm text-gray-900 hover:bg-blue-50 cursor-pointer transition-colors flex items-center justify-between\"\r\n                 [class.bg-blue-100]=\"selectedSort?.value === sort.value\">\r\n              <span>{{ sort.label }}</span>\r\n              <svg *ngIf=\"selectedSort?.value === sort.value\" class=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Sort Direction Toggle -->\r\n      <button\r\n        (click)=\"toggleSortDir()\"\r\n        class=\"px-3 py-2 border border-gray-300 rounded-lg bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\">\r\n        <svg class=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \r\n                [attr.d]=\"selectedSortDir === 'asc' ? 'M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4' : 'M17 8V4m0 0l4 4m-4-4l-4 4M7 16v4m0 0l-4-4m4 4l4-4'\"></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading\" class=\"flex justify-center items-center py-12\">\r\n    <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error && !loading\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\r\n    <div class=\"flex\">\r\n      <svg class=\"w-5 h-5 text-red-400 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n      </svg>\r\n      <p class=\"ml-2 text-sm text-red-700\">{{ error }}</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Team Members Cards -->\r\n  <div *ngIf=\"!loading\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n    <div *ngFor=\"let teamMember of filteredTeamMembers\" \r\n         class=\"bg-white rounded-xl border border-gray-200 shadow-sm hover:shadow-md transition-shadow overflow-hidden\">\r\n      \r\n      <!-- Card Header (Light Blue Background) -->\r\n      <div class=\"bg-blue-50 px-6 py-4 relative\">\r\n        <div class=\"flex items-center justify-between\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mr-4\">\r\n              <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <span class=\"text-sm font-medium text-blue-600\">\r\n                {{ teamMember.email_verified_at ? 'Active' : 'Pending' }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Options Menu -->\r\n          <div class=\"relative\">\r\n            <button\r\n              (click)=\"toggleTeamMemberMenu(teamMember.id)\"\r\n              class=\"text-gray-400 hover:text-gray-600 p-1.5 rounded-full hover:bg-gray-100 transition-colors focus:outline-none\">\r\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path>\r\n              </svg>\r\n            </button>\r\n            \r\n            <!-- Dropdown Menu -->\r\n            <div *ngIf=\"teamMember.showMenu\" \r\n                 class=\"absolute right-0 mt-1 w-40 bg-white rounded-lg shadow-lg border border-gray-200 z-20\">\r\n              <div class=\"py-1\">\r\n                <!-- Edit Option -->\r\n                <button\r\n                  (click)=\"editTeamMember(teamMember)\"\r\n                  class=\"flex items-center w-full px-3 py-2.5 text-sm text-gray-700 hover:bg-gray-50 transition-colors\">\r\n                  <svg class=\"w-4 h-4 mr-2.5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\r\n                  </svg>\r\n                  <span>Edit Member</span>\r\n                </button>\r\n                \r\n                <!-- Remove Option -->\r\n                <button\r\n                  (click)=\"deleteTeamMember(teamMember)\"\r\n                  class=\"flex items-center w-full px-3 py-2.5 text-sm text-red-600 hover:bg-red-50 transition-colors\">\r\n                  <svg class=\"w-4 h-4 mr-2.5 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n                  </svg>\r\n                  <span>Remove Member</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Card Body (White Background) -->\r\n      <div class=\"px-6 py-4\">\r\n        <!-- Member Name -->\r\n        <h3 class=\"text-xl font-bold text-gray-900 mb-2\">{{ getTeamMemberFullName(teamMember) }}</h3>\r\n        \r\n        <!-- Member Email -->\r\n        <p class=\"text-gray-600 mb-4\">{{ teamMember.email }}</p>\r\n        \r\n        <!-- Role Information -->\r\n        <div class=\"flex items-center text-sm text-gray-500 mb-3\" *ngIf=\"teamMember.role\">\r\n          <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\r\n          </svg>\r\n          <span>{{ teamMember.role.name }}</span>\r\n        </div>\r\n        \r\n        <!-- Separator Line -->\r\n        <hr class=\"my-3 border-gray-200\">\r\n        \r\n        <!-- Hourly Rate -->\r\n        <div class=\"flex items-center text-sm text-gray-500 mb-2\" *ngIf=\"teamMember.hourly_rate\">\r\n          <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\r\n          </svg>\r\n          <span>${{ teamMember.hourly_rate }}/hour</span>\r\n        </div>\r\n        \r\n        <!-- Created Date -->\r\n        <div class=\"flex items-center text-sm text-gray-500\">\r\n          <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\r\n          </svg>\r\n          <span>Created {{ teamMember.created_at | date:'MMM d, y' }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Empty State -->\r\n  <div *ngIf=\"!loading && filteredTeamMembers.length === 0\" class=\"text-center py-12\">\r\n    <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path>\r\n    </svg>\r\n    <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No team members found</h3>\r\n    <p class=\"mt-1 text-sm text-gray-500\">\r\n      {{ searchTerm ? 'Try adjusting your search terms.' : 'Get started by inviting your first team member.' }}\r\n    </p>\r\n    <div class=\"mt-6\">\r\n      <button\r\n        (click)=\"createTeamMember()\"\r\n        class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n        <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n        </svg>\r\n        Invite Team Member\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modals -->\r\n  <app-team-delete-confirmation-modal\r\n    *ngIf=\"showDeleteModal\"\r\n    [teamMember]=\"teamMemberToDelete\"\r\n    (confirmed)=\"confirmDeleteTeamMember($event)\"\r\n    (cancelled)=\"closeDeleteModal()\">\r\n  </app-team-delete-confirmation-modal>\r\n\r\n  <app-team-form-modal\r\n    *ngIf=\"showFormModal\"\r\n    [teamMember]=\"teamMemberToEdit\"\r\n    [isEditMode]=\"isEditMode\"\r\n    (teamMemberSaved)=\"onTeamMemberSaved($event)\"\r\n    (cancelled)=\"closeFormModal()\">\r\n  </app-team-form-modal>\r\n</div>\r\n", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TeamListComponent } from './team-list/team-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TeamListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TeamsRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { TeamsRoutingModule } from './teams-routing.module';\r\nimport { TeamListComponent } from './team-list/team-list.component';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    TeamsRoutingModule,\r\n    TeamListComponent\r\n  ]\r\n})\r\nexport class TeamsModule { }\r\n"],
  "mappings": "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",
  "names": []
}
