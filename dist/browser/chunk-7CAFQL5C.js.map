{
  "version": 3,
  "sources": ["src/app/roles/components/role-delete-confirmation-modal/role-delete-confirmation-modal.component.ts", "src/app/roles/components/role-delete-confirmation-modal/role-delete-confirmation-modal.component.html", "src/app/roles/role-list/role-list.component.ts", "src/app/roles/role-list/role-list.component.html", "src/app/roles/role-form/role-form.component.ts", "src/app/roles/role-form/role-form.component.html", "src/app/roles/roles-routing.module.ts", "src/app/roles/roles.module.ts"],
  "sourcesContent": ["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-role-delete-confirmation-modal',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './role-delete-confirmation-modal.component.html',\n  styleUrl: './role-delete-confirmation-modal.component.scss',\n  animations: [\n    trigger('backdropAnimation', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('150ms ease-out', style({ opacity: 1 }))\n      ]),\n      transition(':leave', [\n        animate('150ms ease-in', style({ opacity: 0 }))\n      ])\n    ]),\n    trigger('modalAnimation', [\n      transition(':enter', [\n        style({ \n          opacity: 0, \n          transform: 'scale(0.7) translateY(-50px)' \n        }),\n        animate('200ms ease-out', style({ \n          opacity: 1, \n          transform: 'scale(1) translateY(0)' \n        }))\n      ]),\n      transition(':leave', [\n        animate('150ms ease-in', style({ \n          opacity: 0, \n          transform: 'scale(0.7) translateY(-50px)' \n        }))\n      ])\n    ])\n  ]\n})\nexport class RoleDeleteConfirmationModalComponent {\n  @Input() isOpen = false;\n  @Input() roleName = '';\n  @Input() roleId: number | null = null;\n  @Input() usersCount = 0;\n  @Output() closeModal = new EventEmitter<void>();\n  @Output() confirmDelete = new EventEmitter<{ roleId: number, reason: string }>();\n\n  loading = false;\n  deletionReason = '';\n\n  onConfirm() {\n    if (!this.roleId) return;\n    \n    this.loading = true;\n    this.confirmDelete.emit({\n      roleId: this.roleId,\n      reason: this.deletionReason\n    });\n    \n    // Stop loading after a short delay to allow the parent component to handle the delete\n    setTimeout(() => {\n      this.loading = false;\n      this.deletionReason = '';\n    }, 2000);\n  }\n\n  onCancel() {\n    if (this.loading) return;\n    this.deletionReason = '';\n    this.closeModal.emit();\n  }\n}\n", "<!-- Role Delete Confirmation Modal -->\n<div *ngIf=\"isOpen\"\n     class=\"fixed inset-0 bg-[#00000085] flex items-center justify-center z-50 p-4\"\n     [@backdropAnimation]>\n  <!-- Modal Container -->\n  <div class=\"bg-white rounded-2xl shadow-xl max-w-md w-full\"\n       [@modalAnimation]>\n    <!-- Modal Header -->\n    <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\n      <div class=\"flex items-center space-x-3\">\n        <div class=\"w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center\">\n          <svg class=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n          </svg>\n        </div>\n        <h2 class=\"text-xl font-semibold text-gray-900\">Delete Role</h2>\n      </div>\n      <button\n        (click)=\"onCancel()\"\n        [disabled]=\"loading\"\n        class=\"p-2 hover:bg-gray-100 rounded-lg transition-colors disabled:opacity-50\">\n        <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n        </svg>\n      </button>\n    </div>\n\n    <!-- Modal Content -->\n    <div class=\"p-6\">\n      <!-- Deletion Reason Input -->\n      <div class=\"mb-6\">\n        <label class=\"block text-sm font-medium text-gray-700 mb-2\">Deletion Reason (Optional)</label>\n        <textarea\n          [(ngModel)]=\"deletionReason\"\n          rows=\"3\"\n          placeholder=\"Enter reason for deleting this role...\"\n          class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent resize-none placeholder-gray-400\"></textarea>\n        <p class=\"text-xs text-gray-500 mt-1\">This will be recorded in the audit trail</p>\n      </div>\n\n      <!-- Warning Icon -->\n      <div class=\"flex justify-center mb-4\">\n        <div class=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center\">\n          <svg class=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n          </svg>\n        </div>\n      </div>\n\n      <!-- Confirmation Message -->\n      <div class=\"text-center mb-6\">\n        <h3 class=\"text-lg font-semibold text-gray-900 mb-2\">Are you sure you want to delete \"{{ roleName }}\"?</h3>\n        <p class=\"text-gray-600\">\n          This action cannot be undone. The role will be permanently removed from the system.\n        </p>\n        \n        <!-- Users Warning if applicable -->\n        <div *ngIf=\"usersCount > 0\" class=\"mt-4 p-3 bg-amber-50 border border-amber-200 rounded-lg\">\n          <p class=\"text-amber-800 text-sm font-medium\">\n            ‚ö†Ô∏è Warning: This role is assigned to {{ usersCount }} user{{ usersCount !== 1 ? 's' : '' }}\n          </p>\n          <p class=\"text-amber-700 text-xs mt-1\">\n            Users with this role will lose their permissions when the role is deleted.\n          </p>\n        </div>\n\n        <!-- General Warning -->\n        <div class=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n          <p class=\"text-red-800 text-sm font-medium\">\n            üö® This action is permanent and cannot be undone\n          </p>\n        </div>\n      </div>\n\n      <!-- Action Buttons -->\n      <div class=\"flex items-center justify-end space-x-3\">\n        <button\n          (click)=\"onCancel()\"\n          [disabled]=\"loading\"\n          class=\"px-6 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors disabled:opacity-50\">\n          Cancel\n        </button>\n\n        <button\n          (click)=\"onConfirm()\"\n          [disabled]=\"loading\"\n          class=\"px-6 py-2 bg-red-600 text-white font-medium rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition-all disabled:opacity-50 disabled:cursor-not-allowed\">\n          <span *ngIf=\"!loading\">Delete Role</span>\n          <span *ngIf=\"loading\" class=\"flex items-center space-x-2\">\n            <svg class=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            <span>Deleting...</span>\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n", "import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RoleService, Role } from '../services/role.service';\nimport { RoleDeleteConfirmationModalComponent } from '../components/role-delete-confirmation-modal/role-delete-confirmation-modal.component';\n\n@Component({\n  selector: 'app-role-list',\n  templateUrl: './role-list.component.html',\n  styleUrls: ['./role-list.component.scss'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, RoleDeleteConfirmationModalComponent]\n})\nexport class RoleListComponent implements OnInit {\n  roles: Role[] = [];\n  filteredRoles: Role[] = [];\n  loading = false;\n  error = '';\n  \n  // Search and filtering\n  searchTerm = '';\n  \n  // Sorting\n  selectedSort: any = null;\n  selectedSortDir: 'asc' | 'desc' = 'asc';\n  showSortDropdown = false;\n  \n  // View type\n  viewType: 'grid' | 'list' = 'grid';\n  \n  // Delete modal\n  showDeleteModal = false;\n  roleToDelete: Role | null = null;\n  \n  // Sort options\n  sortOptions = [\n    { label: 'Name', value: 'name' },\n    { label: 'Created Date', value: 'created_at' },\n    { label: 'Users Count', value: 'users_count' },\n    { label: 'Permissions', value: 'permissions' }\n  ];\n\n  constructor(\n    private roleService: RoleService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loadRoles();\n  }\n\n  loadRoles(): void {\n    this.loading = true;\n    this.error = '';\n\n    this.roleService.getRoles().subscribe({\n      next: (response: any) => {\n        this.roles = response.data;\n        this.filteredRoles = [...this.roles];\n        this.loading = false;\n      },\n      error: (error: any) => {\n        this.error = 'Failed to load roles';\n        this.loading = false;\n        console.error('Error loading roles:', error);\n      }\n    });\n  }\n\n  createRole(): void {\n    this.router.navigate(['/roles/create']);\n  }\n\n  editRole(role: Role): void {\n    this.router.navigate(['/roles/edit', role.id]);\n  }\n\n  deleteRole(role: Role): void {\n    this.roleToDelete = role;\n    this.showDeleteModal = true;\n  }\n\n  closeDeleteModal(): void {\n    this.showDeleteModal = false;\n    this.roleToDelete = null;\n  }\n\n  confirmDeleteRole(data: { roleId: number, reason: string }): void {\n    this.roleService.deleteRole(data.roleId).subscribe({\n      next: () => {\n        this.loadRoles();\n        this.closeDeleteModal();\n        // You could add a success notification here\n      },\n      error: (error: any) => {\n        console.error('Error deleting role:', error);\n        // You could add an error notification here instead of alert\n        alert('Failed to delete role');\n      }\n    });\n  }\n\n  getPermissionSummary(role: Role): string {\n    if (!role.permissions) return 'No permissions';\n    \n    const permissions = role.permissions.permissions;\n    const modules = Object.keys(permissions);\n    const totalPermissions = modules.reduce((total, module) => {\n      return total + Object.values(permissions[module]).filter(Boolean).length;\n    }, 0);\n    \n    return `${totalPermissions} permissions across ${modules.length} modules`;\n  }\n\n  // New methods for the enhanced UI\n  getActiveRolesCount(): number {\n    return this.roles.length; // All roles are considered active for now\n  }\n\n  getTotalUsersCount(): number {\n    return this.roles.reduce((total, role) => total + (role.users_count || 0), 0);\n  }\n\n  getTotalPermissionsCount(): number {\n    return this.roles.reduce((total, role) => {\n      if (!role.permissions) return total;\n      const permissions = role.permissions.permissions;\n      const modules = Object.keys(permissions);\n      const rolePermissions = modules.reduce((moduleTotal, module) => {\n        return moduleTotal + Object.values(permissions[module]).filter(Boolean).length;\n      }, 0);\n      return total + rolePermissions;\n    }, 0);\n  }\n\n  getPermissionCount(role: Role): number {\n    if (!role.permissions) return 0;\n    const permissions = role.permissions.permissions;\n    const modules = Object.keys(permissions);\n    return modules.reduce((total, module) => {\n      return total + Object.values(permissions[module]).filter(Boolean).length;\n    }, 0);\n  }\n\n\n\n  onSearchChange(): void {\n    this.filterRoles();\n  }\n\n  filterRoles(): void {\n    if (!this.searchTerm.trim()) {\n      this.filteredRoles = [...this.roles];\n    } else {\n      this.filteredRoles = this.roles.filter(role =>\n        role.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n        (role.description && role.description.toLowerCase().includes(this.searchTerm.toLowerCase()))\n      );\n    }\n    this.sortRoles();\n  }\n\n  toggleSortDropdown(): void {\n    this.showSortDropdown = !this.showSortDropdown;\n  }\n\n  selectSort(sort: any): void {\n    this.selectedSort = sort;\n    this.sortRoles();\n  }\n\n  toggleSortDir(): void {\n    this.selectedSortDir = this.selectedSortDir === 'asc' ? 'desc' : 'asc';\n    this.sortRoles();\n  }\n\n  sortRoles(): void {\n    if (!this.selectedSort) return;\n\n    this.filteredRoles.sort((a, b) => {\n      let aValue: any;\n      let bValue: any;\n\n      switch (this.selectedSort.value) {\n        case 'name':\n          aValue = a.name.toLowerCase();\n          bValue = b.name.toLowerCase();\n          break;\n        case 'created_at':\n          aValue = new Date(a.created_at).getTime();\n          bValue = new Date(b.created_at).getTime();\n          break;\n        case 'users_count':\n          aValue = a.users_count || 0;\n          bValue = b.users_count || 0;\n          break;\n        case 'permissions':\n          aValue = this.getPermissionCount(a);\n          bValue = this.getPermissionCount(b);\n          break;\n        default:\n          aValue = a.name.toLowerCase();\n          bValue = b.name.toLowerCase();\n      }\n\n      if (this.selectedSortDir === 'asc') {\n        return aValue > bValue ? 1 : -1;\n      } else {\n        return aValue < bValue ? 1 : -1;\n      }\n    });\n  }\n\n  toggleRoleMenu(roleId: number): void {\n    this.roles.forEach(role => {\n      role.showMenu = role.id === roleId ? !role.showMenu : false;\n    });\n  }\n} ", "<div class=\"role-list-page min-h-screen bg-gray-50 p-6\">\r\n  <!-- Page Title and Subtitle + Actions -->\r\n  <div class=\"mb-6 flex flex-col md:flex-row md:items-center md:justify-between\">\r\n    <div>\r\n      <h1 class=\"text-2xl font-bold text-gray-900 mb-1\">Role Management Hub</h1>\r\n      <p class=\"text-gray-600 text-base\">Advanced role management with granular permissions and user access control</p>\r\n    </div>\r\n    <div class=\"flex items-center space-x-3 mt-4 md:mt-0\">\r\n      <button (click)=\"createRole()\" class=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold px-5 py-2 rounded-lg shadow-sm transition-colors flex items-center cursor-pointer\">\r\n        <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n        </svg>\r\n        Create Role\r\n      </button>\r\n      <div class=\"relative\" (click)=\"$event.stopPropagation()\">\r\n        <button class=\"w-10 h-10 flex items-center justify-center rounded-lg hover:bg-gray-100 transition-colors cursor-pointer\">\r\n          <svg class=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <circle cx=\"12\" cy=\"5\" r=\"2\" />\r\n            <circle cx=\"12\" cy=\"12\" r=\"2\" />\r\n            <circle cx=\"12\" cy=\"19\" r=\"2\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Summary Cards -->\r\n  <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\r\n    <!-- Total Roles -->\r\n    <div class=\"rounded-xl bg-blue-50 border border-blue-100 p-6 flex flex-col justify-between shadow-sm transition-all hover:shadow-md\">\r\n      <div class=\"flex items-center justify-between mb-2\">\r\n        <span class=\"text-base font-medium text-gray-700\">Total Roles</span>\r\n        <span class=\"w-10 h-10 bg-blue-100 rounded-xl flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <div class=\"text-3xl font-bold text-gray-900\">{{ roles.length }}</div>\r\n      <a href=\"#\" class=\"text-sm text-blue-600 font-medium mt-1\">Roles in system</a>\r\n    </div>\r\n\r\n    <!-- Active Roles -->\r\n    <div class=\"rounded-xl bg-green-50 border border-green-100 p-6 flex flex-col justify-between shadow-sm transition-all hover:shadow-md\">\r\n      <div class=\"flex items-center justify-between mb-2\">\r\n        <span class=\"text-base font-medium text-gray-700\">Active Roles</span>\r\n        <span class=\"w-10 h-10 bg-green-100 rounded-xl flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"8\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\r\n            <circle cx=\"12\" cy=\"12\" r=\"4\" fill=\"currentColor\" class=\"text-green-400\" />\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <div class=\"text-3xl font-bold text-gray-900\">{{ getActiveRolesCount() }}</div>\r\n      <a href=\"#\" class=\"text-sm text-green-600 font-medium mt-1\">Currently active</a>\r\n    </div>\r\n\r\n    <!-- Total Users -->\r\n    <div class=\"rounded-xl bg-purple-50 border border-purple-100 p-6 flex flex-col justify-between shadow-sm transition-all hover:shadow-md\">\r\n      <div class=\"flex items-center justify-between mb-2\">\r\n        <span class=\"text-base font-medium text-gray-700\">Total Users</span>\r\n        <span class=\"w-10 h-10 bg-purple-100 rounded-xl flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-purple-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"></path>\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <div class=\"text-3xl font-bold text-gray-900\">{{ getTotalUsersCount() }}</div>\r\n      <a href=\"#\" class=\"text-sm text-purple-600 font-medium mt-1\">Users assigned</a>\r\n    </div>\r\n\r\n    <!-- Permissions -->\r\n    <div class=\"rounded-xl bg-orange-50 border border-orange-100 p-6 flex flex-col justify-between shadow-sm transition-all hover:shadow-md\">\r\n      <div class=\"flex items-center justify-between mb-2\">\r\n        <span class=\"text-base font-medium text-gray-700\">Permissions</span>\r\n        <span class=\"w-10 h-10 bg-orange-100 rounded-xl flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-orange-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <div class=\"text-3xl font-bold text-gray-900\">{{ getTotalPermissionsCount() }}</div>\r\n      <a href=\"#\" class=\"text-sm text-orange-600 font-medium mt-1\">Total permissions</a>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filters and Controls -->\r\n  <div class=\"bg-white rounded-xl border border-gray-200 p-6 mb-6\">\r\n    <div class=\"flex flex-col md:flex-row md:items-center md:justify-between\">\r\n      <!-- Left: Search and Filters -->\r\n      <div class=\"flex flex-col sm:flex-row items-start sm:items-center space-y-3 sm:space-y-0 sm:space-x-4\">\r\n        <!-- Search -->\r\n        <div class=\"relative\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search roles...\"\r\n            class=\"w-full sm:w-64 px-4 py-2 pl-10 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            [(ngModel)]=\"searchTerm\"\r\n            (input)=\"onSearchChange()\">\r\n          <svg class=\"absolute left-3 top-2.5 w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n          </svg>\r\n        </div>\r\n\r\n        <!-- Sort By Dropdown -->\r\n        <div class=\"relative\" (click)=\"$event.stopPropagation()\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"toggleSortDropdown()\"\r\n            class=\"w-full px-4 py-2 text-left border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white transition-all min-w-[180px]\"\r\n            [class.border-blue-500]=\"showSortDropdown\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <span *ngIf=\"!selectedSort\" class=\"text-gray-400\">Sort By</span>\r\n              <span *ngIf=\"selectedSort\">{{ selectedSort.label }}</span>\r\n              <svg class=\"w-4 h-4 text-gray-400 transition-transform ml-2\" [class.rotate-180]=\"showSortDropdown\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n              </svg>\r\n            </div>\r\n          </button>\r\n          <div\r\n            *ngIf=\"showSortDropdown\"\r\n            class=\"absolute z-10 mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-72 overflow-y-auto min-w-[180px] w-full\">\r\n            <div class=\"px-4 py-2 text-xs text-gray-400 font-semibold uppercase tracking-wider\">Sort By</div>\r\n            <div\r\n              *ngFor=\"let sort of sortOptions\"\r\n              (click)=\"selectSort(sort); showSortDropdown = false\"\r\n              class=\"px-4 py-2 cursor-pointer hover:bg-blue-50\"\r\n              [ngClass]=\"{'bg-blue-100 font-semibold': selectedSort?.value === sort.value}\">\r\n              {{ sort.label }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Sort Direction Button -->\r\n        <div class=\"relative\">\r\n          <button (click)=\"toggleSortDir()\" class=\"px-4 py-2 bg-gray-100 rounded-lg text-gray-700 flex items-center space-x-2 min-w-[70px] cursor-pointer\"\r\n            [class.bg-blue-100]=\"selectedSortDir === 'asc'\" [class.text-blue-700]=\"selectedSortDir === 'asc'\">\r\n            <svg *ngIf=\"selectedSortDir === 'desc'\" class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 17l-4 4m0 0l-4-4m4 4V3\"></path>\r\n            </svg>\r\n            <svg *ngIf=\"selectedSortDir === 'asc'\" class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7l4-4m0 0l4 4m-4-4v18\"></path>\r\n            </svg>\r\n            <span>{{ selectedSortDir === 'asc' ? 'A-Z' : 'Z-A' }}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Right: View Type Toggle -->\r\n      <div class=\"flex items-center space-x-2 mt-4 md:mt-0\">\n        <button (click)=\"viewType = 'grid'\" [class.bg-blue-100]=\"viewType === 'grid'\" [class.text-blue-700]=\"viewType === 'grid'\" class=\"w-10 h-10 flex items-center justify-center rounded-lg border border-gray-200 hover:bg-blue-50 transition-colors cursor-pointer\">\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <rect x=\"4\" y=\"4\" width=\"7\" height=\"7\" rx=\"2\" />\n            <rect x=\"13\" y=\"4\" width=\"7\" height=\"7\" rx=\"2\" />\n            <rect x=\"4\" y=\"13\" width=\"7\" height=\"7\" rx=\"2\" />\n            <rect x=\"13\" y=\"13\" width=\"7\" height=\"7\" rx=\"2\" />\n          </svg>\n        </button>\n        <button (click)=\"viewType = 'list'\" [class.bg-blue-100]=\"viewType === 'list'\" [class.text-blue-700]=\"viewType === 'list'\" class=\"w-10 h-10 flex items-center justify-center rounded-lg border border-gray-200 hover:bg-blue-50 transition-colors cursor-pointer\">\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <rect x=\"4\" y=\"6\" width=\"16\" height=\"4\" rx=\"2\" />\n            <rect x=\"4\" y=\"14\" width=\"16\" height=\"4\" rx=\"2\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Loading State -->\n  <div *ngIf=\"loading\" class=\"flex items-center justify-center py-20\">\n    <div class=\"text-center\">\n      <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-100 rounded-full mb-4\">\n        <svg class=\"animate-spin w-8 h-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n      </div>\n      <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Loading Roles</h3>\n      <p class=\"text-sm text-gray-500\">Please wait while we fetch your roles...</p>\n    </div>\n  </div>\n\n  <!-- Error State -->\n  <div *ngIf=\"error && !loading\" class=\"flex items-center justify-center py-20\">\n    <div class=\"text-center\">\n      <div class=\"inline-flex items-center justify-center w-16 h-16 bg-red-100 rounded-full mb-4\">\n        <svg class=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\n        </svg>\n      </div>\n      <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Error Loading Roles</h3>\n      <p class=\"text-sm text-gray-500 mb-4\">{{error}}</p>\n      <button\n        (click)=\"loadRoles()\"\n        class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\n        Retry\n      </button>\n    </div>\n  </div>\n\n  <!-- Empty State -->\n  <div *ngIf=\"!loading && !error && roles.length === 0\" class=\"text-center py-20\">\n    <div class=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n      <svg class=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n      </svg>\n    </div>\n    <h3 class=\"text-lg font-medium text-gray-900 mb-2\">No Roles Found</h3>\n    <p class=\"text-gray-600 mb-4\">Get started by creating your first role.</p>\n    <button\n      (click)=\"createRole()\"\n      class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\n      Create First Role\n    </button>\n  </div>\n\n  <!-- Grid View Cards -->\n  <div *ngIf=\"viewType === 'grid' && !loading && !error && roles.length > 0\" class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mt-2\">\n    <div *ngFor=\"let role of filteredRoles\" class=\"rounded-2xl border border-blue-200 bg-white shadow-sm flex flex-col transition-all hover:shadow-md overflow-hidden\">\n      <!-- Card Header -->\n      <div class=\"relative bg-[#e0edff] h-32 flex flex-col items-center justify-center\">\n        <div class=\"absolute right-4 top-4 flex items-center space-x-2\">\n          <span class=\"bg-blue-100 text-blue-700 text-xs font-semibold px-3 py-1 rounded-full\">Active</span>\n          <div class=\"relative\" (click)=\"$event.stopPropagation()\">\n            <button\n              (click)=\"toggleRoleMenu(role.id)\"\n              class=\"w-8 h-8 flex items-center justify-center rounded-full hover:bg-gray-100 transition-colors cursor-pointer\">\n              <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <circle cx=\"12\" cy=\"6\" r=\"1.5\" />\n                <circle cx=\"12\" cy=\"12\" r=\"1.5\" />\n                <circle cx=\"12\" cy=\"18\" r=\"1.5\" />\n              </svg>\n            </button>\n\n            <!-- Dropdown Menu -->\n            <div *ngIf=\"role.showMenu\" class=\"absolute right-0 top-full mt-1 w-48 bg-white rounded-lg shadow-lg border border-gray-200 py-1 z-50\">\n              <button\n                (click)=\"editRole(role)\"\n                class=\"w-full flex items-center space-x-3 px-3 py-2 text-left hover:bg-gray-50 transition-colors\">\n                <svg class=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\n                </svg>\n                <span class=\"text-sm text-gray-700\">Edit Role</span>\n              </button>\n\n              <button\n                (click)=\"deleteRole(role)\"\n                class=\"w-full flex items-center space-x-3 px-3 py-2 text-left hover:bg-red-50 transition-colors\">\n                <svg class=\"w-4 h-4 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n                </svg>\n                <span class=\"text-sm text-red-600\">Delete Role</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <svg class=\"w-16 h-16 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n        </svg>\n      </div>\n\n      <!-- Card Body -->\n      <div class=\"flex-1 flex flex-col justify-between p-6 pt-4\">\n        <div>\n          <div class=\"font-semibold text-lg text-gray-900 mb-1 cursor-pointer hover:text-blue-600 transition-colors\" (click)=\"editRole(role)\">\n            {{ role.name }}\n          </div>\n          <div class=\"text-sm text-gray-500 mb-2\">{{ role.description || 'No description' }}</div>\n          <div class=\"flex items-center text-xs text-gray-400 mb-2\">\n            <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"></path>\n            </svg>\n            <span>{{ role.users_count || 0 }} users assigned</span>\n          </div>\n          <hr class=\"my-3 border-gray-200\">\n          <div class=\"flex items-center text-sm text-gray-700 mb-1\">\n            <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\n            </svg>\n            <span>{{ getPermissionSummary(role) }}</span>\n          </div>\n          <div class=\"flex items-center text-sm text-gray-700 mb-1\" *ngIf=\"role.created_at\">\n            <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n            </svg>\n            <span>Created <b>{{ role.created_at | date:'MMM d, y' }}</b></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- List View -->\n  <div *ngIf=\"viewType === 'list' && !loading && !error && roles.length > 0\" class=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n    <!-- Table Header -->\n    <div class=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\n      <div class=\"grid grid-cols-12 gap-4 text-xs font-medium text-gray-500 uppercase tracking-wider\">\n        <div class=\"col-span-3\">Role</div>\n        <div class=\"col-span-3\">Description</div>\n        <div class=\"col-span-2\">Permissions</div>\n        <div class=\"col-span-1\">Users</div>\n        <div class=\"col-span-2\">Created</div>\n        <div class=\"col-span-1\">Actions</div>\n      </div>\n    </div>\n\n    <!-- Table Body -->\n    <div class=\"divide-y divide-gray-200\">\n      <div *ngFor=\"let role of filteredRoles\"\n           class=\"px-6 py-4 hover:bg-gray-50 transition-colors\">\n        <div class=\"grid grid-cols-12 gap-4 items-center\">\n          <div class=\"col-span-3\">\n            <div class=\"text-sm font-medium text-gray-900\">{{ role.name }}</div>\n          </div>\n          <div class=\"col-span-3\">\n            <div class=\"text-sm text-gray-900\">{{ role.description || 'No description' }}</div>\n          </div>\n          <div class=\"col-span-2\">\n            <div class=\"text-sm text-gray-900\">{{ getPermissionSummary(role) }}</div>\n          </div>\n          <div class=\"col-span-1\">\n            <div class=\"text-sm text-gray-900\">{{ role.users_count || 0 }}</div>\n          </div>\n          <div class=\"col-span-2\">\n            <div class=\"text-sm text-gray-900\">{{ role.created_at | date:'short' }}</div>\n          </div>\n          <div class=\"col-span-1 text-right\">\n            <button\n              (click)=\"editRole(role)\"\n              class=\"text-blue-600 hover:text-blue-900 mr-3\">\n              Edit\n            </button>\n            <button\n              (click)=\"deleteRole(role)\"\n              class=\"text-red-600 hover:text-red-900\">\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Delete Confirmation Modal -->\n<app-role-delete-confirmation-modal\n  [isOpen]=\"showDeleteModal\"\n  [roleName]=\"roleToDelete?.name || ''\"\n  [roleId]=\"roleToDelete?.id || null\"\n  [usersCount]=\"roleToDelete?.users_count || 0\"\n  (closeModal)=\"closeDeleteModal()\"\n  (confirmDelete)=\"confirmDeleteRole($event)\">\n</app-role-delete-confirmation-modal>", "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RoleService, Role, AvailablePermissions } from '../services/role.service';\n\n@Component({\n  selector: 'app-role-form',\n  templateUrl: './role-form.component.html',\n  styleUrls: ['./role-form.component.scss'],\n  standalone: false\n})\nexport class RoleFormComponent implements OnInit {\n  roleForm: FormGroup;\n  availablePermissions: AvailablePermissions = {};\n  loading = false;\n  saving = false;\n  error = '';\n  isEditMode = false;\n  roleId?: number;\n  Math = Math; // Make Math available in template\n  private roleData: any = null; // Store role data until permissions are loaded\n\n  constructor(\n    private fb: FormBuilder,\n    private roleService: RoleService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.roleForm = this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(255)]],\n      description: [''],\n      permissions: this.fb.group({})\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadAvailablePermissions();\n    \n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.isEditMode = true;\n      this.roleId = +id;\n      this.loadRole(this.roleId);\n    }\n  }\n\n  loadAvailablePermissions(): void {\n    this.roleService.getAvailablePermissions().subscribe({\n      next: (response: any) => {\n        this.availablePermissions = response.data;\n        this.initializePermissionForm();\n        \n        // If we have stored role data, populate it now that form controls exist\n        if (this.roleData) {\n          this.populateRolePermissions(this.roleData);\n          this.roleData = null; // Clear stored data\n        }\n      },\n      error: (error: any) => {\n        this.error = 'Failed to load available permissions';\n        console.error('Error loading permissions:', error);\n      }\n    });\n  }\n\n  loadRole(id: number): void {\n    this.loading = true;\n    this.roleService.getRole(id).subscribe({\n      next: (response: any) => {\n        const role = response.data;\n        this.roleForm.patchValue({\n          name: role.name,\n          description: role.description\n        });\n        \n        // Store role data for later population when form controls are ready\n        if (role.permissions && role.permissions.permissions) {\n          if (Object.keys(this.availablePermissions).length > 0) {\n            // Form controls already exist, populate immediately\n            this.populateRolePermissions(role);\n          } else {\n            // Store for later when available permissions are loaded\n            this.roleData = role;\n          }\n        }\n        \n        this.loading = false;\n      },\n      error: (error: any) => {\n        this.error = 'Failed to load role';\n        this.loading = false;\n        console.error('Error loading role:', error);\n      }\n    });\n  }\n\n  initializePermissionForm(): void {\n    const permissionGroup = this.roleForm.get('permissions') as FormGroup;\n    \n    Object.keys(this.availablePermissions).forEach(module => {\n      const moduleGroup = this.fb.group({\n        can_view: [false],\n        can_create: [false],\n        can_edit: [false],\n        can_delete: [false],\n        can_export: [false]\n      });\n      permissionGroup.addControl(module, moduleGroup);\n    });\n  }\n\n  onSubmit(): void {\n    if (this.roleForm.valid) {\n      this.saving = true;\n      this.error = '';\n\n      const formData = this.roleForm.value;\n      \n      if (this.isEditMode && this.roleId) {\n        this.roleService.updateRole(this.roleId, formData).subscribe({\n          next: () => {\n            this.router.navigate(['/roles']);\n          },\n          error: (error: any) => {\n            this.error = 'Failed to update role';\n            this.saving = false;\n            console.error('Error updating role:', error);\n          }\n        });\n      } else {\n        this.roleService.createRole(formData).subscribe({\n          next: () => {\n            this.router.navigate(['/roles']);\n          },\n          error: (error: any) => {\n            this.error = 'Failed to create role';\n            this.saving = false;\n            console.error('Error creating role:', error);\n          }\n        });\n      }\n    }\n  }\n\n  cancel(): void {\n    this.router.navigate(['/roles']);\n  }\n\n  getModuleDisplayName(module: string): string {\n    return module.split('_').map(word => \n      word.charAt(0).toUpperCase() + word.slice(1)\n    ).join(' ');\n  }\n\n  toggleAllPermissions(module: string, value: boolean): void {\n    const moduleGroup = this.roleForm.get(`permissions.${module}`) as FormGroup;\n    Object.keys(moduleGroup.controls).forEach(control => {\n      moduleGroup.get(control)?.setValue(value);\n    });\n  }\n\n  onViewPermissionChange(module: string, event: any): void {\n    const isChecked = event.target.checked;\n    \n    // If View is unchecked, uncheck all other permissions for this module\n    if (!isChecked) {\n      const moduleGroup = this.roleForm.get(`permissions.${module}`) as FormGroup;\n      moduleGroup.get('can_create')?.setValue(false);\n      moduleGroup.get('can_edit')?.setValue(false);\n      moduleGroup.get('can_delete')?.setValue(false);\n      moduleGroup.get('can_export')?.setValue(false);\n    }\n  }\n\n  private populateRolePermissions(role: any): void {\n    if (role.permissions && role.permissions.permissions) {\n      const permissionsData = role.permissions.permissions;\n      const permissionGroup = this.roleForm.get('permissions') as FormGroup;\n      \n      // Iterate through each module and set the permission values\n      Object.keys(permissionsData).forEach(module => {\n        const moduleGroup = permissionGroup.get(module) as FormGroup;\n        if (moduleGroup) {\n          const modulePermissions = permissionsData[module];\n          moduleGroup.patchValue({\n            can_view: modulePermissions.can_view || false,\n            can_create: modulePermissions.can_create || false,\n            can_edit: modulePermissions.can_edit || false,\n            can_delete: modulePermissions.can_delete || false,\n            can_export: modulePermissions.can_export || false\n          });\n        }\n      });\n    }\n  }\n} ", "<div class=\"min-h-screen bg-gray-50 p-6\">\n  <div class=\"role-create-page\">\n    <!-- Header -->\n    <div class=\"mb-8\">\n      <div class=\"flex items-center space-x-4 mb-4\">\n        <button\n          type=\"button\"\n          (click)=\"cancel()\"\n          class=\"flex items-center space-x-2 text-gray-600 hover:text-gray-800 transition-colors\">\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"></path>\n          </svg>\n          <span class=\"font-medium\">Back to Roles</span>\n        </button>\n      </div>\n      <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">\n        {{ isEditMode ? 'Edit Role' : 'Create New Role' }}\n      </h1>\n      <p class=\"text-gray-600\">\n        {{ isEditMode ? 'Update role details and permissions for your organization' : 'Define a new role and assign specific permissions to control user access' }}\n      </p>\n    </div>\n\n    <!-- Loading State -->\n    <div *ngIf=\"loading\" class=\"flex justify-center items-center py-12\">\n      <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n    </div>\n\n    <!-- Error State -->\n    <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n      <div class=\"flex\">\n        <svg class=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n        <span class=\"text-red-800\">{{ error }}</span>\n      </div>\n    </div>\n\n    <!-- Form -->\n    <form *ngIf=\"!loading\" [formGroup]=\"roleForm\" (ngSubmit)=\"onSubmit()\">\n      <!-- Basic Information -->\n      <div class=\"section-card\">\n        <div class=\"flex items-center space-x-3 mb-6\">\n          <div class=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n            <svg class=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n            </svg>\n          </div>\n          <h2 class=\"section-title\">Basic Information</h2>\n        </div>\n        \n        <div class=\"mb-6\">\n          <!-- Role Name -->\n          <div>\n            <label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n              Role Name <span class=\"text-red-500\">*</span>\n            </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              formControlName=\"name\"\n              class=\"input\"\n              [class.border-red-300]=\"roleForm.get('name')?.invalid && roleForm.get('name')?.touched\"\n              placeholder=\"e.g., Asset Manager, Maintenance Supervisor\">\n            <div *ngIf=\"roleForm.get('name')?.invalid && roleForm.get('name')?.touched\" class=\"text-red-600 text-sm mt-1\">\n              <svg class=\"w-4 h-4 inline mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\n              </svg>\n              <span *ngIf=\"roleForm.get('name')?.errors?.['required']\">Role name is required</span>\n              <span *ngIf=\"roleForm.get('name')?.errors?.['maxlength']\">Role name cannot exceed 255 characters</span>\n            </div>\n            <div class=\"text-xs text-gray-500 mt-1\">Maximum 255 characters</div>\n          </div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label for=\"description\" class=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\n          <textarea\n            id=\"description\"\n            formControlName=\"description\"\n            class=\"input resize-none\"\n            rows=\"3\"\n            placeholder=\"Brief description of the role and its responsibilities...\"\n            maxlength=\"500\"></textarea>\n          <div class=\"text-xs text-gray-500 mt-1\">Maximum 500 characters</div>\n        </div>\n      </div>\n\n      <!-- Permissions Matrix -->\n      <div class=\"section-card\">\n        <div class=\"flex items-center space-x-3 mb-6\">\n          <div class=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">\n            <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\n            </svg>\n          </div>\n          <h2 class=\"section-title\">Role Permissions</h2>\n        </div>\n        <p class=\"text-gray-600 mb-6\">Define what actions this role can perform in each module of the system</p>\n\n      <div class=\"overflow-x-auto\">\n        <table class=\"min-w-full divide-y divide-gray-200\">\n          <thead class=\"bg-gray-50\">\n            <tr>\n              <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Module</th>\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                <button\n                  type=\"button\"\n                  (click)=\"toggleAllPermissions('all', true)\"\n                  class=\"text-blue-600 hover:text-blue-800\">\n                  Select All\n                </button>\n              </th>\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">View</th>\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Create</th>\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Edit</th>\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Delete</th>\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Export</th>\n            </tr>\n          </thead>\n          <tbody class=\"bg-white divide-y divide-gray-200\" formGroupName=\"permissions\">\n            <tr *ngFor=\"let module of availablePermissions | keyvalue\" [formGroupName]=\"module.key\">\n              <td class=\"px-4 py-4 whitespace-nowrap\">\n                <div class=\"text-sm font-medium text-gray-900\">{{ getModuleDisplayName(module.key) }}</div>\n              </td>\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\n                <button\n                  type=\"button\"\n                  (click)=\"toggleAllPermissions(module.key, true)\"\n                  class=\"text-blue-600 hover:text-blue-800 text-sm\">\n                  All\n                </button>\n              </td>\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\n                <input\n                  type=\"checkbox\"\n                  formControlName=\"can_view\"\n                  (change)=\"onViewPermissionChange(module.key, $event)\"\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\n              </td>\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\n                <input\n                  type=\"checkbox\"\n                  formControlName=\"can_create\"\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\n              </td>\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\n                <input\n                  type=\"checkbox\"\n                  formControlName=\"can_edit\"\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\n              </td>\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\n                <input\n                  type=\"checkbox\"\n                  formControlName=\"can_delete\"\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\n              </td>\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\n                <input\n                  type=\"checkbox\"\n                  formControlName=\"can_export\"\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        </div>\n      </div>\n\n      <!-- Submit Buttons -->\n      <div class=\"section-card\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center space-x-2 text-gray-600\">\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n            <span class=\"text-sm\">Review all information before saving</span>\n          </div>\n          <div class=\"flex space-x-3\">\n            <button\n              type=\"button\"\n              (click)=\"cancel()\"\n              class=\"px-6 py-3 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors font-medium\">\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              [disabled]=\"saving || roleForm.invalid\"\n              class=\"bg-blue-600 text-white px-8 py-3 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 font-medium shadow-sm\">\n              <span *ngIf=\"saving\" class=\"inline-flex items-center\">\n                <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                  <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                {{ isEditMode ? 'Updating Role...' : 'Creating Role...' }}\n              </span>\n              <span *ngIf=\"!saving\">\n                {{ isEditMode ? 'Update Role' : 'Create Role' }}\n              </span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div> ", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RoleListComponent } from './role-list/role-list.component';\r\nimport { RoleFormComponent } from './role-form/role-form.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RoleListComponent\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: RoleFormComponent\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: RoleFormComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RolesRoutingModule { } ", "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { RolesRoutingModule } from './roles-routing.module';\nimport { RoleListComponent } from './role-list/role-list.component';\nimport { RoleFormComponent } from './role-form/role-form.component';\n\n@NgModule({\n  declarations: [\n    RoleFormComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    RolesRoutingModule,\n    RoleListComponent\n  ]\n})\nexport class RolesModule { }"],
  "mappings": "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",
  "names": []
}
