{
  "version": 3,
  "sources": ["src/app/roles/services/role.service.ts", "src/app/roles/role-list/role-list.component.ts", "src/app/roles/role-list/role-list.component.html", "src/app/roles/role-form/role-form.component.ts", "src/app/roles/role-form/role-form.component.html", "src/app/roles/roles-routing.module.ts", "src/app/roles/roles.module.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AuthService } from '../../core/services/auth.service';\r\n\r\n// Role interfaces\r\nexport interface Role {\r\n  id: number;\r\n  name: string;\r\n  description?: string;\r\n  company_id: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n  permissions?: Permission;\r\n  users_count?: number;\r\n  showMenu?: boolean; // For UI dropdown menu state\r\n}\r\n\r\nexport interface Permission {\r\n  id: number;\r\n  role_id: number;\r\n  permissions: {\r\n    [module: string]: {\r\n      can_view: boolean;\r\n      can_create: boolean;\r\n      can_edit: boolean;\r\n      can_delete: boolean;\r\n      can_export: boolean;\r\n    };\r\n  };\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface AvailablePermissions {\r\n  [module: string]: {\r\n    can_view: boolean;\r\n    can_create: boolean;\r\n    can_edit: boolean;\r\n    can_delete: boolean;\r\n    can_export: boolean;\r\n  };\r\n}\r\n\r\nexport interface RolesResponse {\r\n  success: boolean;\r\n  data: Role[];\r\n}\r\n\r\nexport interface RoleResponse {\r\n  success: boolean;\r\n  data: Role;\r\n}\r\n\r\nexport interface AvailablePermissionsResponse {\r\n  success: boolean;\r\n  data: AvailablePermissions;\r\n}\r\n\r\nexport interface CreateRoleRequest {\r\n  name: string;\r\n  description?: string;\r\n  permissions: {\r\n    [module: string]: {\r\n      can_view: boolean;\r\n      can_create: boolean;\r\n      can_edit: boolean;\r\n      can_delete: boolean;\r\n      can_export: boolean;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface UpdateRoleRequest {\r\n  name?: string;\r\n  description?: string;\r\n  permissions?: {\r\n    [module: string]: {\r\n      can_view: boolean;\r\n      can_create: boolean;\r\n      can_edit: boolean;\r\n      can_delete: boolean;\r\n      can_export: boolean;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface AssignRoleRequest {\r\n  user_id: number;\r\n  role_id: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n  private apiUrl = `${environment.apiUrl}/roles`;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) {}\r\n\r\n  private getAuthHeaders(): { headers: { [header: string]: string } } {\r\n    const token = this.authService.getToken();\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n      }\r\n    };\r\n  }\r\n\r\n  // Get all roles\r\n  getRoles(): Observable<RolesResponse> {\r\n    return this.http.get<RolesResponse>(this.apiUrl, this.getAuthHeaders());\r\n  }\r\n\r\n  // Get a specific role\r\n  getRole(id: number): Observable<RoleResponse> {\r\n    return this.http.get<RoleResponse>(`${this.apiUrl}/${id}`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Create a new role\r\n  createRole(roleData: CreateRoleRequest): Observable<RoleResponse> {\r\n    return this.http.post<RoleResponse>(this.apiUrl, roleData, this.getAuthHeaders());\r\n  }\r\n\r\n  // Update a role\r\n  updateRole(id: number, roleData: UpdateRoleRequest): Observable<RoleResponse> {\r\n    return this.http.put<RoleResponse>(`${this.apiUrl}/${id}`, roleData, this.getAuthHeaders());\r\n  }\r\n\r\n  // Delete a role\r\n  deleteRole(id: number): Observable<{ success: boolean; message: string }> {\r\n    return this.http.delete<{ success: boolean; message: string }>(`${this.apiUrl}/${id}`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Get available permissions\r\n  getAvailablePermissions(): Observable<AvailablePermissionsResponse> {\r\n    return this.http.get<AvailablePermissionsResponse>(`${this.apiUrl}/available-permissions`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Assign role to user\r\n  assignRoleToUser(data: AssignRoleRequest): Observable<{ success: boolean; message: string }> {\r\n    return this.http.post<{ success: boolean; message: string }>(`${this.apiUrl}/assign-to-user`, data, this.getAuthHeaders());\r\n  }\r\n\r\n  // Remove role from user\r\n  removeRoleFromUser(data: AssignRoleRequest): Observable<{ success: boolean; message: string }> {\r\n    return this.http.post<{ success: boolean; message: string }>(`${this.apiUrl}/remove-from-user`, data, this.getAuthHeaders());\r\n  }\r\n} ", "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RoleService, Role } from '../services/role.service';\r\n\r\n@Component({\r\n  selector: 'app-role-list',\r\n  templateUrl: './role-list.component.html',\r\n  styleUrls: ['./role-list.component.scss'],\r\n  standalone: false\r\n})\r\nexport class RoleListComponent implements OnInit {\r\n  roles: Role[] = [];\r\n  filteredRoles: Role[] = [];\r\n  loading = false;\r\n  error = '';\r\n  \r\n  // Search and filtering\r\n  searchTerm = '';\r\n  \r\n  // Sorting\r\n  selectedSort: any = null;\r\n  selectedSortDir: 'asc' | 'desc' = 'asc';\r\n  showSortDropdown = false;\r\n  \r\n  // View type\r\n  viewType: 'grid' | 'list' = 'grid';\r\n  \r\n  // Sort options\r\n  sortOptions = [\r\n    { label: 'Name', value: 'name' },\r\n    { label: 'Created Date', value: 'created_at' },\r\n    { label: 'Users Count', value: 'users_count' },\r\n    { label: 'Permissions', value: 'permissions' }\r\n  ];\r\n\r\n  constructor(\r\n    private roleService: RoleService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadRoles();\r\n  }\r\n\r\n  loadRoles(): void {\r\n    this.loading = true;\r\n    this.error = '';\r\n\r\n    this.roleService.getRoles().subscribe({\r\n      next: (response: any) => {\r\n        this.roles = response.data;\r\n        this.filteredRoles = [...this.roles];\r\n        this.loading = false;\r\n      },\r\n      error: (error: any) => {\r\n        this.error = 'Failed to load roles';\r\n        this.loading = false;\r\n        console.error('Error loading roles:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  createRole(): void {\r\n    this.router.navigate(['/roles/create']);\r\n  }\r\n\r\n  editRole(role: Role): void {\r\n    this.router.navigate(['/roles/edit', role.id]);\r\n  }\r\n\r\n  deleteRole(role: Role): void {\r\n    if (confirm(`Are you sure you want to delete the role \"${role.name}\"?`)) {\r\n      this.roleService.deleteRole(role.id).subscribe({\r\n        next: () => {\r\n          this.loadRoles();\r\n        },\r\n        error: (error: any) => {\r\n          console.error('Error deleting role:', error);\r\n          alert('Failed to delete role');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getPermissionSummary(role: Role): string {\r\n    if (!role.permissions) return 'No permissions';\r\n    \r\n    const permissions = role.permissions.permissions;\r\n    const modules = Object.keys(permissions);\r\n    const totalPermissions = modules.reduce((total, module) => {\r\n      return total + Object.values(permissions[module]).filter(Boolean).length;\r\n    }, 0);\r\n    \r\n    return `${totalPermissions} permissions across ${modules.length} modules`;\r\n  }\r\n\r\n  // New methods for the enhanced UI\r\n  getActiveRolesCount(): number {\r\n    return this.roles.length; // All roles are considered active for now\r\n  }\r\n\r\n  getTotalUsersCount(): number {\r\n    return this.roles.reduce((total, role) => total + (role.users_count || 0), 0);\r\n  }\r\n\r\n  getTotalPermissionsCount(): number {\r\n    return this.roles.reduce((total, role) => {\r\n      if (!role.permissions) return total;\r\n      const permissions = role.permissions.permissions;\r\n      const modules = Object.keys(permissions);\r\n      const rolePermissions = modules.reduce((moduleTotal, module) => {\r\n        return moduleTotal + Object.values(permissions[module]).filter(Boolean).length;\r\n      }, 0);\r\n      return total + rolePermissions;\r\n    }, 0);\r\n  }\r\n\r\n  getPermissionScore(role: Role): number {\r\n    if (!role.permissions) return 0;\r\n    \r\n    const permissions = role.permissions.permissions;\r\n    const modules = Object.keys(permissions);\r\n    if (modules.length === 0) return 0;\r\n    \r\n    const totalPermissions = modules.reduce((total, module) => {\r\n      return total + Object.values(permissions[module]).filter(Boolean).length;\r\n    }, 0);\r\n    \r\n    const maxPossiblePermissions = modules.length * 5; // 5 permissions per module\r\n    return Math.round((totalPermissions / maxPossiblePermissions) * 100);\r\n  }\r\n\r\n  onSearchChange(): void {\r\n    this.filterRoles();\r\n  }\r\n\r\n  filterRoles(): void {\r\n    if (!this.searchTerm.trim()) {\r\n      this.filteredRoles = [...this.roles];\r\n    } else {\r\n      this.filteredRoles = this.roles.filter(role =>\r\n        role.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        (role.description && role.description.toLowerCase().includes(this.searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n    this.sortRoles();\r\n  }\r\n\r\n  toggleSortDropdown(): void {\r\n    this.showSortDropdown = !this.showSortDropdown;\r\n  }\r\n\r\n  selectSort(sort: any): void {\r\n    this.selectedSort = sort;\r\n    this.sortRoles();\r\n  }\r\n\r\n  toggleSortDir(): void {\r\n    this.selectedSortDir = this.selectedSortDir === 'asc' ? 'desc' : 'asc';\r\n    this.sortRoles();\r\n  }\r\n\r\n  sortRoles(): void {\r\n    if (!this.selectedSort) return;\r\n\r\n    this.filteredRoles.sort((a, b) => {\r\n      let aValue: any;\r\n      let bValue: any;\r\n\r\n      switch (this.selectedSort.value) {\r\n        case 'name':\r\n          aValue = a.name.toLowerCase();\r\n          bValue = b.name.toLowerCase();\r\n          break;\r\n        case 'created_at':\r\n          aValue = new Date(a.created_at).getTime();\r\n          bValue = new Date(b.created_at).getTime();\r\n          break;\r\n        case 'users_count':\r\n          aValue = a.users_count || 0;\r\n          bValue = b.users_count || 0;\r\n          break;\r\n        case 'permissions':\r\n          aValue = this.getPermissionScore(a);\r\n          bValue = this.getPermissionScore(b);\r\n          break;\r\n        default:\r\n          aValue = a.name.toLowerCase();\r\n          bValue = b.name.toLowerCase();\r\n      }\r\n\r\n      if (this.selectedSortDir === 'asc') {\r\n        return aValue > bValue ? 1 : -1;\r\n      } else {\r\n        return aValue < bValue ? 1 : -1;\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleRoleMenu(roleId: number): void {\r\n    this.roles.forEach(role => {\r\n      role.showMenu = role.id === roleId ? !role.showMenu : false;\r\n    });\r\n  }\r\n} ", "<div class=\"role-list-page min-h-screen bg-gray-50 p-6\">\r\n  <!-- Page Title and Subtitle + Actions -->\r\n  <div class=\"mb-6 flex flex-col md:flex-row md:items-center md:justify-between\">\r\n    <div>\r\n      <h1 class=\"text-2xl font-bold text-gray-900 mb-1\">Role Management Hub</h1>\r\n      <p class=\"text-gray-600 text-base\">Advanced role management with granular permissions and user access control</p>\r\n    </div>\r\n    <div class=\"flex items-center space-x-3 mt-4 md:mt-0\">\r\n      <button (click)=\"createRole()\" class=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold px-5 py-2 rounded-lg shadow-sm transition-colors flex items-center cursor-pointer\">\r\n        <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n        </svg>\r\n        Create Role\r\n      </button>\r\n      <div class=\"relative\" (click)=\"$event.stopPropagation()\">\r\n        <button class=\"w-10 h-10 flex items-center justify-center rounded-lg hover:bg-gray-100 transition-colors cursor-pointer\">\r\n          <svg class=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <circle cx=\"12\" cy=\"5\" r=\"2\" />\r\n            <circle cx=\"12\" cy=\"12\" r=\"2\" />\r\n            <circle cx=\"12\" cy=\"19\" r=\"2\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Summary Cards -->\r\n  <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\r\n    <!-- Total Roles -->\r\n    <div class=\"rounded-xl bg-blue-50 border border-blue-100 p-6 flex flex-col justify-between shadow-sm transition-all hover:shadow-md\">\r\n      <div class=\"flex items-center justify-between mb-2\">\r\n        <span class=\"text-base font-medium text-gray-700\">Total Roles</span>\r\n        <span class=\"w-10 h-10 bg-blue-100 rounded-xl flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <div class=\"text-3xl font-bold text-gray-900\">{{ roles.length }}</div>\r\n      <a href=\"#\" class=\"text-sm text-blue-600 font-medium mt-1\">Roles in system</a>\r\n    </div>\r\n\r\n    <!-- Active Roles -->\r\n    <div class=\"rounded-xl bg-green-50 border border-green-100 p-6 flex flex-col justify-between shadow-sm transition-all hover:shadow-md\">\r\n      <div class=\"flex items-center justify-between mb-2\">\r\n        <span class=\"text-base font-medium text-gray-700\">Active Roles</span>\r\n        <span class=\"w-10 h-10 bg-green-100 rounded-xl flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"8\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\r\n            <circle cx=\"12\" cy=\"12\" r=\"4\" fill=\"currentColor\" class=\"text-green-400\" />\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <div class=\"text-3xl font-bold text-gray-900\">{{ getActiveRolesCount() }}</div>\r\n      <a href=\"#\" class=\"text-sm text-green-600 font-medium mt-1\">Currently active</a>\r\n    </div>\r\n\r\n    <!-- Total Users -->\r\n    <div class=\"rounded-xl bg-purple-50 border border-purple-100 p-6 flex flex-col justify-between shadow-sm transition-all hover:shadow-md\">\r\n      <div class=\"flex items-center justify-between mb-2\">\r\n        <span class=\"text-base font-medium text-gray-700\">Total Users</span>\r\n        <span class=\"w-10 h-10 bg-purple-100 rounded-xl flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-purple-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"></path>\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <div class=\"text-3xl font-bold text-gray-900\">{{ getTotalUsersCount() }}</div>\r\n      <a href=\"#\" class=\"text-sm text-purple-600 font-medium mt-1\">Users assigned</a>\r\n    </div>\r\n\r\n    <!-- Permissions -->\r\n    <div class=\"rounded-xl bg-orange-50 border border-orange-100 p-6 flex flex-col justify-between shadow-sm transition-all hover:shadow-md\">\r\n      <div class=\"flex items-center justify-between mb-2\">\r\n        <span class=\"text-base font-medium text-gray-700\">Permissions</span>\r\n        <span class=\"w-10 h-10 bg-orange-100 rounded-xl flex items-center justify-center\">\r\n          <svg class=\"w-6 h-6 text-orange-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\r\n          </svg>\r\n        </span>\r\n      </div>\r\n      <div class=\"text-3xl font-bold text-gray-900\">{{ getTotalPermissionsCount() }}</div>\r\n      <a href=\"#\" class=\"text-sm text-orange-600 font-medium mt-1\">Total permissions</a>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filters and Controls -->\r\n  <div class=\"bg-white rounded-xl border border-gray-200 p-6 mb-6\">\r\n    <div class=\"flex flex-col md:flex-row md:items-center md:justify-between\">\r\n      <!-- Left: Search and Filters -->\r\n      <div class=\"flex flex-col sm:flex-row items-start sm:items-center space-y-3 sm:space-y-0 sm:space-x-4\">\r\n        <!-- Search -->\r\n        <div class=\"relative\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search roles...\"\r\n            class=\"w-full sm:w-64 px-4 py-2 pl-10 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            [(ngModel)]=\"searchTerm\"\r\n            (input)=\"onSearchChange()\">\r\n          <svg class=\"absolute left-3 top-2.5 w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n          </svg>\r\n        </div>\r\n\r\n        <!-- Sort By Dropdown -->\r\n        <div class=\"relative\" (click)=\"$event.stopPropagation()\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"toggleSortDropdown()\"\r\n            class=\"w-full px-4 py-2 text-left border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white transition-all min-w-[180px]\"\r\n            [class.border-blue-500]=\"showSortDropdown\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <span *ngIf=\"!selectedSort\" class=\"text-gray-400\">Sort By</span>\r\n              <span *ngIf=\"selectedSort\">{{ selectedSort.label }}</span>\r\n              <svg class=\"w-4 h-4 text-gray-400 transition-transform ml-2\" [class.rotate-180]=\"showSortDropdown\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n              </svg>\r\n            </div>\r\n          </button>\r\n          <div\r\n            *ngIf=\"showSortDropdown\"\r\n            class=\"absolute z-10 mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-72 overflow-y-auto min-w-[180px] w-full\">\r\n            <div class=\"px-4 py-2 text-xs text-gray-400 font-semibold uppercase tracking-wider\">Sort By</div>\r\n            <div\r\n              *ngFor=\"let sort of sortOptions\"\r\n              (click)=\"selectSort(sort); showSortDropdown = false\"\r\n              class=\"px-4 py-2 cursor-pointer hover:bg-blue-50\"\r\n              [ngClass]=\"{'bg-blue-100 font-semibold': selectedSort?.value === sort.value}\">\r\n              {{ sort.label }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Sort Direction Button -->\r\n        <div class=\"relative\">\r\n          <button (click)=\"toggleSortDir()\" class=\"px-4 py-2 bg-gray-100 rounded-lg text-gray-700 flex items-center space-x-2 min-w-[70px] cursor-pointer\"\r\n            [class.bg-blue-100]=\"selectedSortDir === 'asc'\" [class.text-blue-700]=\"selectedSortDir === 'asc'\">\r\n            <svg *ngIf=\"selectedSortDir === 'desc'\" class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 17l-4 4m0 0l-4-4m4 4V3\"></path>\r\n            </svg>\r\n            <svg *ngIf=\"selectedSortDir === 'asc'\" class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7l4-4m0 0l4 4m-4-4v18\"></path>\r\n            </svg>\r\n            <span>{{ selectedSortDir === 'asc' ? 'A-Z' : 'Z-A' }}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Right: View Type Toggle -->\r\n      <div class=\"flex items-center space-x-2 mt-4 md:mt-0\">\r\n        <button (click)=\"viewType = 'grid'\" [class.bg-blue-100]=\"viewType === 'grid'\" [class.text-blue-700]=\"viewType === 'grid'\" class=\"w-10 h-10 flex items-center justify-center rounded-lg border border-gray-200 hover:bg-blue-50 transition-colors cursor-pointer\">\r\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <rect x=\"4\" y=\"4\" width=\"7\" height=\"7\" rx=\"2\" />\r\n            <rect x=\"13\" y=\"4\" width=\"7\" height=\"7\" rx=\"2\" />\r\n            <rect x=\"4\" y=\"13\" width=\"7\" height=\"7\" rx=\"2\" />\r\n            <rect x=\"13\" y=\"13\" width=\"7\" height=\"7\" rx=\"2\" />\r\n          </svg>\r\n        </button>\r\n        <button (click)=\"viewType = 'list'\" [class.bg-blue-100]=\"viewType === 'list'\" [class.text-blue-700]=\"viewType === 'list'\" class=\"w-10 h-10 flex items-center justify-center rounded-lg border border-gray-200 hover:bg-blue-50 transition-colors cursor-pointer\">\r\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <rect x=\"4\" y=\"6\" width=\"16\" height=\"4\" rx=\"2\" />\r\n            <rect x=\"4\" y=\"14\" width=\"16\" height=\"4\" rx=\"2\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading\" class=\"flex items-center justify-center py-20\">\r\n    <div class=\"text-center\">\r\n      <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-100 rounded-full mb-4\">\r\n        <svg class=\"animate-spin w-8 h-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n        </svg>\r\n      </div>\r\n      <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Loading Roles</h3>\r\n      <p class=\"text-sm text-gray-500\">Please wait while we fetch your roles...</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error && !loading\" class=\"flex items-center justify-center py-20\">\r\n    <div class=\"text-center\">\r\n      <div class=\"inline-flex items-center justify-center w-16 h-16 bg-red-100 rounded-full mb-4\">\r\n        <svg class=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\r\n        </svg>\r\n      </div>\r\n      <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Error Loading Roles</h3>\r\n      <p class=\"text-sm text-gray-500 mb-4\">{{error}}</p>\r\n      <button\r\n        (click)=\"loadRoles()\"\r\n        class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\r\n        Retry\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Empty State -->\r\n  <div *ngIf=\"!loading && !error && roles.length === 0\" class=\"text-center py-20\">\r\n    <div class=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n      <svg class=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\r\n      </svg>\r\n    </div>\r\n    <h3 class=\"text-lg font-medium text-gray-900 mb-2\">No Roles Found</h3>\r\n    <p class=\"text-gray-600 mb-4\">Get started by creating your first role.</p>\r\n    <button\r\n      (click)=\"createRole()\"\r\n      class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\r\n      Create First Role\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Grid View Cards -->\r\n  <div *ngIf=\"viewType === 'grid' && !loading && !error && roles.length > 0\" class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mt-2\">\r\n    <div *ngFor=\"let role of filteredRoles\" class=\"rounded-2xl border border-blue-200 bg-white shadow-sm flex flex-col transition-all hover:shadow-md overflow-hidden\">\r\n      <!-- Card Header -->\r\n      <div class=\"relative bg-[#e0edff] h-32 flex flex-col items-center justify-center\">\r\n        <div class=\"absolute right-4 top-4 flex items-center space-x-2\">\r\n          <span class=\"bg-blue-100 text-blue-700 text-xs font-semibold px-3 py-1 rounded-full\">Active</span>\r\n          <div class=\"relative\" (click)=\"$event.stopPropagation()\">\r\n            <button\r\n              (click)=\"toggleRoleMenu(role.id)\"\r\n              class=\"w-8 h-8 flex items-center justify-center rounded-full hover:bg-gray-100 transition-colors cursor-pointer\">\r\n              <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <circle cx=\"12\" cy=\"6\" r=\"1.5\" />\r\n                <circle cx=\"12\" cy=\"12\" r=\"1.5\" />\r\n                <circle cx=\"12\" cy=\"18\" r=\"1.5\" />\r\n              </svg>\r\n            </button>\r\n\r\n            <!-- Dropdown Menu -->\r\n            <div *ngIf=\"role.showMenu\" class=\"absolute right-0 top-full mt-1 w-48 bg-white rounded-lg shadow-lg border border-gray-200 py-1 z-50\">\r\n              <button\r\n                (click)=\"editRole(role)\"\r\n                class=\"w-full flex items-center space-x-3 px-3 py-2 text-left hover:bg-gray-50 transition-colors\">\r\n                <svg class=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\r\n                </svg>\r\n                <span class=\"text-sm text-gray-700\">Edit Role</span>\r\n              </button>\r\n\r\n              <button\r\n                (click)=\"deleteRole(role)\"\r\n                class=\"w-full flex items-center space-x-3 px-3 py-2 text-left hover:bg-red-50 transition-colors\">\r\n                <svg class=\"w-4 h-4 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n                </svg>\r\n                <span class=\"text-sm text-red-600\">Delete Role</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <svg class=\"w-16 h-16 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\r\n        </svg>\r\n      </div>\r\n\r\n      <!-- Card Body -->\r\n      <div class=\"flex-1 flex flex-col justify-between p-6 pt-4\">\r\n        <div>\r\n          <div class=\"font-semibold text-lg text-gray-900 mb-1 cursor-pointer hover:text-blue-600 transition-colors\" (click)=\"editRole(role)\">\r\n            {{ role.name }}\r\n          </div>\r\n          <div class=\"text-sm text-gray-500 mb-2\">{{ role.description || 'No description' }}</div>\r\n          <div class=\"flex items-center text-xs text-gray-400 mb-2\">\r\n            <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"></path>\r\n            </svg>\r\n            <span>{{ role.users_count || 0 }} users assigned</span>\r\n          </div>\r\n          <hr class=\"my-3 border-gray-200\">\r\n          <div class=\"flex items-center text-sm text-gray-700 mb-1\">\r\n            <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\r\n            </svg>\r\n            <span>{{ getPermissionSummary(role) }}</span>\r\n          </div>\r\n          <div class=\"flex items-center text-sm text-gray-700 mb-1\" *ngIf=\"role.created_at\">\r\n            <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n            </svg>\r\n            <span>Created <b>{{ role.created_at | date:'MMM d, y' }}</b></span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Permission Score Bar -->\r\n        <div class=\"mt-4\">\r\n          <div class=\"flex justify-between items-center mb-1\">\r\n            <span class=\"text-xs text-gray-500\">Permission Score</span>\r\n            <span class=\"text-xs font-semibold text-gray-700\">{{ getPermissionScore(role) }}%</span>\r\n          </div>\r\n          <div class=\"w-full h-2 bg-gray-200 rounded-full\">\r\n            <div class=\"h-2 rounded-full bg-blue-500\" [style.width.%]=\"getPermissionScore(role)\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- List View -->\r\n  <div *ngIf=\"viewType === 'list' && !loading && !error && roles.length > 0\" class=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\r\n    <!-- Table Header -->\r\n    <div class=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\r\n      <div class=\"grid grid-cols-12 gap-4 text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n        <div class=\"col-span-3\">Role</div>\r\n        <div class=\"col-span-3\">Description</div>\r\n        <div class=\"col-span-2\">Permissions</div>\r\n        <div class=\"col-span-1\">Users</div>\r\n        <div class=\"col-span-2\">Created</div>\r\n        <div class=\"col-span-1\">Actions</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Table Body -->\r\n    <div class=\"divide-y divide-gray-200\">\r\n      <div *ngFor=\"let role of filteredRoles\"\r\n           class=\"px-6 py-4 hover:bg-gray-50 transition-colors\">\r\n        <div class=\"grid grid-cols-12 gap-4 items-center\">\r\n          <div class=\"col-span-3\">\r\n            <div class=\"text-sm font-medium text-gray-900\">{{ role.name }}</div>\r\n          </div>\r\n          <div class=\"col-span-3\">\r\n            <div class=\"text-sm text-gray-900\">{{ role.description || 'No description' }}</div>\r\n          </div>\r\n          <div class=\"col-span-2\">\r\n            <div class=\"text-sm text-gray-900\">{{ getPermissionSummary(role) }}</div>\r\n          </div>\r\n          <div class=\"col-span-1\">\r\n            <div class=\"text-sm text-gray-900\">{{ role.users_count || 0 }}</div>\r\n          </div>\r\n          <div class=\"col-span-2\">\r\n            <div class=\"text-sm text-gray-900\">{{ role.created_at | date:'short' }}</div>\r\n          </div>\r\n          <div class=\"col-span-1 text-right\">\r\n            <button\r\n              (click)=\"editRole(role)\"\r\n              class=\"text-blue-600 hover:text-blue-900 mr-3\">\r\n              Edit\r\n            </button>\r\n            <button\r\n              (click)=\"deleteRole(role)\"\r\n              class=\"text-red-600 hover:text-red-900\">\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> ", "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RoleService, Role, AvailablePermissions } from '../services/role.service';\r\n\r\n@Component({\r\n  selector: 'app-role-form',\r\n  templateUrl: './role-form.component.html',\r\n  styleUrls: ['./role-form.component.scss'],\r\n  standalone: false\r\n})\r\nexport class RoleFormComponent implements OnInit {\r\n  roleForm: FormGroup;\r\n  availablePermissions: AvailablePermissions = {};\r\n  loading = false;\r\n  saving = false;\r\n  error = '';\r\n  isEditMode = false;\r\n  roleId?: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private roleService: RoleService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.roleForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.maxLength(255)]],\r\n      description: [''],\r\n      permissions: this.fb.group({})\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadAvailablePermissions();\r\n    \r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    if (id) {\r\n      this.isEditMode = true;\r\n      this.roleId = +id;\r\n      this.loadRole(this.roleId);\r\n    }\r\n  }\r\n\r\n  loadAvailablePermissions(): void {\r\n    this.roleService.getAvailablePermissions().subscribe({\r\n      next: (response: any) => {\r\n        this.availablePermissions = response.data;\r\n        this.initializePermissionForm();\r\n      },\r\n      error: (error: any) => {\r\n        this.error = 'Failed to load available permissions';\r\n        console.error('Error loading permissions:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadRole(id: number): void {\r\n    this.loading = true;\r\n    this.roleService.getRole(id).subscribe({\r\n      next: (response: any) => {\r\n        const role = response.data;\r\n        this.roleForm.patchValue({\r\n          name: role.name,\r\n          description: role.description\r\n        });\r\n        \r\n        if (role.permissions) {\r\n          this.roleForm.patchValue({\r\n            permissions: role.permissions.permissions\r\n          });\r\n        }\r\n        \r\n        this.loading = false;\r\n      },\r\n      error: (error: any) => {\r\n        this.error = 'Failed to load role';\r\n        this.loading = false;\r\n        console.error('Error loading role:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  initializePermissionForm(): void {\r\n    const permissionGroup = this.roleForm.get('permissions') as FormGroup;\r\n    \r\n    Object.keys(this.availablePermissions).forEach(module => {\r\n      const moduleGroup = this.fb.group({\r\n        can_view: [false],\r\n        can_create: [false],\r\n        can_edit: [false],\r\n        can_delete: [false],\r\n        can_export: [false]\r\n      });\r\n      permissionGroup.addControl(module, moduleGroup);\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.roleForm.valid) {\r\n      this.saving = true;\r\n      this.error = '';\r\n\r\n      const formData = this.roleForm.value;\r\n      \r\n      if (this.isEditMode && this.roleId) {\r\n        this.roleService.updateRole(this.roleId, formData).subscribe({\r\n          next: () => {\r\n            this.router.navigate(['/roles']);\r\n          },\r\n          error: (error: any) => {\r\n            this.error = 'Failed to update role';\r\n            this.saving = false;\r\n            console.error('Error updating role:', error);\r\n          }\r\n        });\r\n      } else {\r\n        this.roleService.createRole(formData).subscribe({\r\n          next: () => {\r\n            this.router.navigate(['/roles']);\r\n          },\r\n          error: (error: any) => {\r\n            this.error = 'Failed to create role';\r\n            this.saving = false;\r\n            console.error('Error creating role:', error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate(['/roles']);\r\n  }\r\n\r\n  getModuleDisplayName(module: string): string {\r\n    return module.split('_').map(word => \r\n      word.charAt(0).toUpperCase() + word.slice(1)\r\n    ).join(' ');\r\n  }\r\n\r\n  toggleAllPermissions(module: string, value: boolean): void {\r\n    const moduleGroup = this.roleForm.get(`permissions.${module}`) as FormGroup;\r\n    Object.keys(moduleGroup.controls).forEach(control => {\r\n      moduleGroup.get(control)?.setValue(value);\r\n    });\r\n  }\r\n} ", "<div class=\"p-6\">\r\n  <!-- Header -->\r\n  <div class=\"mb-6\">\r\n    <h1 class=\"text-2xl font-bold text-gray-900\">\r\n      {{ isEditMode ? 'Edit Role' : 'Create New Role' }}\r\n    </h1>\r\n    <p class=\"text-gray-600\">\r\n      {{ isEditMode ? 'Update role details and permissions' : 'Define a new role and assign permissions' }}\r\n    </p>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading\" class=\"flex justify-center items-center py-12\">\r\n    <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\r\n    <div class=\"flex\">\r\n      <svg class=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n      </svg>\r\n      <span class=\"text-red-800\">{{ error }}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Form -->\r\n  <form *ngIf=\"!loading\" [formGroup]=\"roleForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-6\">\r\n    <!-- Basic Information -->\r\n    <div class=\"bg-white rounded-lg shadow p-6\">\r\n      <h2 class=\"text-lg font-medium text-gray-900 mb-4\">Basic Information</h2>\r\n      \r\n      <div class=\"grid grid-cols-1 gap-6\">\r\n        <!-- Role Name -->\r\n        <div>\r\n          <label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Role Name *\r\n          </label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            formControlName=\"name\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Enter role name\">\r\n          <div *ngIf=\"roleForm.get('name')?.invalid && roleForm.get('name')?.touched\" class=\"text-red-600 text-sm mt-1\">\r\n            <span *ngIf=\"roleForm.get('name')?.errors?.['required']\">Role name is required</span>\r\n            <span *ngIf=\"roleForm.get('name')?.errors?.['maxlength']\">Role name cannot exceed 255 characters</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Description -->\r\n        <div>\r\n          <label for=\"description\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Description\r\n          </label>\r\n          <textarea\r\n            id=\"description\"\r\n            formControlName=\"description\"\r\n            rows=\"3\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Enter role description (optional)\"></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Permissions Matrix -->\r\n    <div class=\"bg-white rounded-lg shadow p-6\">\r\n      <h2 class=\"text-lg font-medium text-gray-900 mb-4\">Permissions</h2>\r\n      <p class=\"text-gray-600 mb-6\">Select the permissions this role should have for each module</p>\r\n\r\n      <div class=\"overflow-x-auto\">\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Module</th>\r\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                <button\r\n                  type=\"button\"\r\n                  (click)=\"toggleAllPermissions('all', true)\"\r\n                  class=\"text-blue-600 hover:text-blue-800\">\r\n                  Select All\r\n                </button>\r\n              </th>\r\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">View</th>\r\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Create</th>\r\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Edit</th>\r\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Delete</th>\r\n              <th class=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Export</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\" formGroupName=\"permissions\">\r\n            <tr *ngFor=\"let module of availablePermissions | keyvalue\" [formGroupName]=\"module.key\">\r\n              <td class=\"px-4 py-4 whitespace-nowrap\">\r\n                <div class=\"text-sm font-medium text-gray-900\">{{ getModuleDisplayName(module.key) }}</div>\r\n              </td>\r\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  (click)=\"toggleAllPermissions(module.key, true)\"\r\n                  class=\"text-blue-600 hover:text-blue-800 text-sm\">\r\n                  All\r\n                </button>\r\n              </td>\r\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  formControlName=\"can_view\"\r\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\r\n              </td>\r\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  formControlName=\"can_create\"\r\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\r\n              </td>\r\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  formControlName=\"can_edit\"\r\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\r\n              </td>\r\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  formControlName=\"can_delete\"\r\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\r\n              </td>\r\n              <td class=\"px-4 py-4 whitespace-nowrap text-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  formControlName=\"can_export\"\r\n                  class=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Submit Buttons -->\r\n    <div class=\"flex justify-end space-x-3\">\r\n      <button\r\n        type=\"button\"\r\n        (click)=\"cancel()\"\r\n        class=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\">\r\n        Cancel\r\n      </button>\r\n      <button\r\n        type=\"submit\"\r\n        [disabled]=\"saving || roleForm.invalid\"\r\n        class=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\">\r\n        <span *ngIf=\"saving\" class=\"inline-flex items-center\">\r\n          <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n          {{ isEditMode ? 'Updating...' : 'Creating...' }}\r\n        </span>\r\n        <span *ngIf=\"!saving\">\r\n          {{ isEditMode ? 'Update Role' : 'Create Role' }}\r\n        </span>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div> ", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RoleListComponent } from './role-list/role-list.component';\r\nimport { RoleFormComponent } from './role-form/role-form.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RoleListComponent\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: RoleFormComponent\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: RoleFormComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RolesRoutingModule { } ", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { RolesRoutingModule } from './roles-routing.module';\r\nimport { RoleListComponent } from './role-list/role-list.component';\r\nimport { RoleFormComponent } from './role-form/role-form.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RoleListComponent,\r\n    RoleFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    RolesRoutingModule\r\n  ]\r\n})\r\nexport class RolesModule { } "],
  "mappings": "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",
  "names": []
}
