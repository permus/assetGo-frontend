{
  "version": 3,
  "sources": ["src/app/teams/components/team-delete-confirmation-modal/team-delete-confirmation-modal.component.ts", "src/app/teams/components/team-delete-confirmation-modal/team-delete-confirmation-modal.component.html", "src/app/teams/services/team.service.ts", "src/app/teams/components/team-form-modal/team-form-modal.component.ts", "src/app/teams/components/team-form-modal/team-form-modal.component.html", "src/app/teams/team-list/team-list.component.ts", "src/app/teams/team-list/team-list.component.html", "src/app/teams/teams-routing.module.ts", "src/app/teams/teams.module.ts"],
  "sourcesContent": ["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TeamMember } from '../../services/team.service';\n\n@Component({\n  selector: 'app-team-delete-confirmation-modal',\n  templateUrl: './team-delete-confirmation-modal.component.html',\n  styleUrls: ['./team-delete-confirmation-modal.component.scss'],\n  standalone: true,\n  imports: [CommonModule, FormsModule]\n})\nexport class TeamDeleteConfirmationModalComponent {\n  @Input() teamMember: TeamMember | null = null;\n  @Output() cancelled = new EventEmitter<void>();\n  @Output() confirmed = new EventEmitter<{ teamId: number; reason: string }>();\n\n  deleteReason = '';\n\n  onClose(): void {\n    this.cancelled.emit();\n  }\n\n  onConfirmDelete(): void {\n    if (this.teamMember) {\n      this.confirmed.emit({\n        teamId: this.teamMember.id,\n        reason: this.deleteReason.trim()\n      });\n    }\n  }\n\n  onBackdropClick(event: Event): void {\n    if (event.target === event.currentTarget) {\n      this.onClose();\n    }\n  }\n}\n", "<div class=\"fixed inset-0 bg-[#00000085] flex items-center justify-center z-50\" (click)=\"onBackdropClick($event)\">\n  <div class=\"relative mx-auto p-6  w-[500px] rounded-lg bg-white\">\n    <div class=\"mt-3\">\n      <!-- Header -->\n      <div class=\"flex items-center justify-between mb-6\">\n        <div class=\"flex items-center\">\n          <svg class=\"w-6 h-6 text-red-600 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n          </svg>\n          <h3 class=\"text-xl font-semibold text-gray-900\">Remove Team Member</h3>\n        </div>\n        <button\n          (click)=\"onClose()\"\n          class=\"text-gray-400 hover:text-gray-600 focus:outline-none\">\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n          </svg>\n        </button>\n      </div>\n\n      <!-- Deletion Reason Section -->\n      <div class=\"mb-6\">\n        <label for=\"deleteReason\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n          Deletion Reason (Optional)\n        </label>\n        <textarea\n          id=\"deleteReason\"\n          [(ngModel)]=\"deleteReason\"\n          rows=\"4\"\n          class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n          placeholder=\"Enter reason for removing this team member...\"></textarea>\n        <p class=\"mt-1 text-xs text-gray-500\">This will be recorded in the audit trail.</p>\n      </div>\n\n      <!-- Confirmation Section -->\n      <div class=\"text-center mb-6\">\n        <!-- Large Trash Icon -->\n        <div class=\"mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-red-100 mb-4\">\n          <svg class=\"h-8 w-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n          </svg>\n        </div>\n\n        <!-- Confirmation Question -->\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">\n          Are you sure you want to remove <strong>\"{{ teamMember?.first_name }} {{ teamMember?.last_name }}\"</strong>?\n        </h3>\n        \n        <!-- Warning Message -->\n        <p class=\"text-sm text-gray-600 mb-4\">\n          This action cannot be undone. The team member will be permanently removed from the system.\n        </p>\n\n        <!-- Important Warning Box -->\n        <div class=\"bg-red-50 border border-red-200 rounded-md p-4 mb-4\">\n          <div class=\"flex items-center\">\n            <svg class=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n            </svg>\n            <span class=\"text-sm font-medium text-red-800\">\n              Warning: This action will permanently remove the team member and all associated data.\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Actions -->\n      <div class=\"flex justify-end space-x-3\">\n        <button\n          (click)=\"onClose()\"\n          class=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors\">\n          Cancel\n        </button>\n        <button\n          (click)=\"onConfirmDelete()\"\n          class=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\">\n          Remove Member\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n", "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from '../../core/services/auth.service';\n\n// Team Member interfaces (users with user_type = 'team')\nexport interface TeamMember {\n  id: number;\n  first_name: string;\n  last_name: string;\n  email: string;\n  role_id?: number;\n  role?: {\n    id: number;\n    name: string;\n    description?: string;\n  };\n  hourly_rate?: number;\n  user_type: 'team';\n  company_id: number;\n  created_by: number;\n  email_verified_at?: string;\n  created_at: string;\n  updated_at: string;\n  showMenu?: boolean; // For UI dropdown menu state\n}\n\nexport interface TeamMemberStatistics {\n  total_team_members: number;\n  active_team_members: number;\n  pending_team_members: number;\n}\n\nexport interface AvailableRole {\n  id: number;\n  name: string;\n  description?: string;\n}\n\nexport interface TeamMembersResponse {\n  success: boolean;\n  data: TeamMember[];\n}\n\nexport interface TeamMemberResponse {\n  success: boolean;\n  data: TeamMember;\n}\n\nexport interface TeamMemberStatisticsResponse {\n  success: boolean;\n  data: TeamMemberStatistics;\n}\n\nexport interface AvailableRolesResponse {\n  success: boolean;\n  data: AvailableRole[];\n}\n\nexport interface CreateTeamMemberRequest {\n  first_name: string;\n  last_name: string;\n  email: string;\n  role_id: number;\n  hourly_rate?: number;\n}\n\nexport interface UpdateTeamMemberRequest {\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n  role_id?: number;\n  hourly_rate?: number;\n}\n\nexport interface ResendInvitationRequest {\n  id: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n  private apiUrl = `${environment.apiUrl}/teams`;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  private getAuthHeaders(): { headers: { [header: string]: string } } {\n    const token = this.authService.getToken();\n    return {\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token ? { 'Authorization': `Bearer ${token}` } : {})\n      }\n    };\n  }\n\n  // Get all team members\n  getTeamMembers(): Observable<TeamMembersResponse> {\n    return this.http.get<TeamMembersResponse>(this.apiUrl, this.getAuthHeaders());\n  }\n\n  // Get a specific team member\n  getTeamMember(id: number): Observable<TeamMemberResponse> {\n    return this.http.get<TeamMemberResponse>(`${this.apiUrl}/${id}`, this.getAuthHeaders());\n  }\n\n  // Create a new team member (invite)\n  createTeamMember(teamMemberData: CreateTeamMemberRequest): Observable<TeamMemberResponse> {\n    return this.http.post<TeamMemberResponse>(this.apiUrl, teamMemberData, this.getAuthHeaders());\n  }\n\n  // Update a team member\n  updateTeamMember(id: number, teamMemberData: UpdateTeamMemberRequest): Observable<TeamMemberResponse> {\n    return this.http.put<TeamMemberResponse>(`${this.apiUrl}/${id}`, teamMemberData, this.getAuthHeaders());\n  }\n\n  // Delete a team member\n  deleteTeamMember(id: number): Observable<{ success: boolean; message: string }> {\n    return this.http.delete<{ success: boolean; message: string }>(`${this.apiUrl}/${id}`, this.getAuthHeaders());\n  }\n\n  // Resend invitation\n  resendInvitation(id: number): Observable<{ success: boolean; message: string }> {\n    return this.http.post<{ success: boolean; message: string }>(`${this.apiUrl}/${id}/resend-invitation`, {}, this.getAuthHeaders());\n  }\n\n  // Get team member statistics\n  getTeamMemberStatistics(): Observable<TeamMemberStatisticsResponse> {\n    return this.http.get<TeamMemberStatisticsResponse>(`${this.apiUrl}/statistics`, this.getAuthHeaders());\n  }\n\n  // Get available roles for team members\n  getAvailableRoles(): Observable<AvailableRolesResponse> {\n    return this.http.get<AvailableRolesResponse>(`${this.apiUrl}/available-roles`, this.getAuthHeaders());\n  }\n}\n", "import { Component, EventEmitter, Input, OnInit, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { TeamService, TeamMember } from '../../services/team.service';\nimport { RoleService, Role } from '../../../roles/services/role.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-team-form-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\n  templateUrl: './team-form-modal.component.html',\n  styleUrls: ['./team-form-modal.component.scss']\n})\nexport class TeamFormModalComponent implements OnInit, OnChanges {\n  @Input() teamMember: TeamMember | null = null;\n  @Input() isEditMode = false;\n  @Output() teamMemberSaved = new EventEmitter<TeamMember>();\n  @Output() cancelled = new EventEmitter<void>();\n\n  teamMemberForm: FormGroup;\n  loading = false;\n  error = '';\n  availableRoles: Role[] = [];\n  loadingRoles = false;\n  rolesError = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private teamService: TeamService,\n    private roleService: RoleService\n  ) {\n    this.teamMemberForm = this.fb.group({\n      first_name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]],\n      last_name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]],\n      email: ['', [Validators.required, Validators.email]],\n      role_id: ['', [Validators.required]],\n      hourly_rate: [null, [Validators.min(0)]]\n    });\n    this.loadAvailableRoles();\n  }\n\n  ngOnInit(): void {\n    if (this.teamMember && this.isEditMode) {\n      this.loadTeamMember();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['teamMember'] && changes['teamMember'].currentValue && this.isEditMode) {\n      // Wait a bit for roles to load if they haven't already\n      if (this.availableRoles.length > 0) {\n        this.loadTeamMember();\n      } else {\n        // If roles aren't loaded yet, wait a bit and try again\n        setTimeout(() => {\n          if (this.availableRoles.length > 0) {\n            this.loadTeamMember();\n          }\n        }, 100);\n      }\n    }\n  }\n\n  // Method to manually update form when needed\n  updateFormWithTeamMember(): void {\n    if (this.teamMember && this.isEditMode && this.availableRoles.length > 0) {\n      this.loadTeamMember();\n    }\n  }\n\n  loadAvailableRoles(): void {\n    this.loadingRoles = true;\n    this.rolesError = '';\n\n    this.roleService.getRoles().subscribe({\n      next: (response: any) => {\n        this.availableRoles = response.data || [];\n        this.loadingRoles = false;\n        console.log('Available roles loaded:', this.availableRoles);\n        \n        // If we're in edit mode and have team member data, reload the form\n        if (this.isEditMode && this.teamMember) {\n          this.loadTeamMember();\n        }\n      },\n      error: (error: any) => {\n        console.error('Error loading available roles:', error);\n        // Fallback to team service available roles\n        this.teamService.getAvailableRoles().subscribe({\n          next: (response: any) => {\n            this.availableRoles = response.data || [];\n            this.loadingRoles = false;\n            console.log('Available roles loaded (fallback):', this.availableRoles);\n            \n            // If we're in edit mode and have team member data, reload the form\n            if (this.isEditMode && this.teamMember) {\n              this.loadTeamMember();\n            }\n          },\n          error: (fallbackError: any) => {\n            console.error('Fallback also failed:', fallbackError);\n            this.rolesError = 'Failed to load roles. Please try again.';\n            this.loadingRoles = false;\n          }\n        });\n      }\n    });\n  }\n\n  loadTeamMember(): void {\n    if (this.teamMember) {\n      console.log('Loading team member data:', this.teamMember);\n      \n      // Get role_id from either role_id property or role.id\n      const roleId = this.teamMember.role_id || this.teamMember.role?.id;\n      const hourlyRate = this.teamMember.hourly_rate;\n      \n      console.log('Role ID:', roleId, 'Type:', typeof roleId);\n      console.log('Hourly Rate:', hourlyRate, 'Type:', typeof hourlyRate);\n      \n      // Convert role_id to number if it's a string\n      const roleIdNumber = roleId ? Number(roleId) : '';\n      \n      this.teamMemberForm.patchValue({\n        first_name: this.teamMember.first_name,\n        last_name: this.teamMember.last_name,\n        email: this.teamMember.email,\n        role_id: roleIdNumber,\n        hourly_rate: hourlyRate || null\n      });\n      \n      console.log('Form values after patch:', this.teamMemberForm.value);\n      console.log('Available roles:', this.availableRoles);\n    }\n  }\n\n  // Close dropdown when clicking outside\n  onBackdropClick(event: Event): void {\n    if (event.target === event.currentTarget) {\n      this.onCancel();\n    }\n  }\n\n  onSubmit(): void {\n    if (this.teamMemberForm.invalid) {\n      this.markFormGroupTouched();\n      return;\n    }\n\n    this.loading = true;\n    this.error = '';\n\n    const formData = this.teamMemberForm.value;\n\n    if (this.isEditMode && this.teamMember) {\n      this.teamService.updateTeamMember(this.teamMember.id, formData).subscribe({\n        next: (response: any) => {\n          this.loading = false;\n          this.teamMemberSaved.emit(response.data);\n        },\n        error: (error: any) => {\n          this.loading = false;\n          this.error = error.error?.message || 'Failed to update team member. Please try again.';\n        }\n      });\n    } else {\n      this.teamService.createTeamMember(formData).subscribe({\n        next: (response: any) => {\n          this.loading = false;\n          this.teamMemberSaved.emit(response.data);\n        },\n        error: (error: any) => {\n          this.loading = false;\n          this.error = error.error?.message || 'Failed to create team member. Please try again.';\n        }\n      });\n    }\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n\n  getFieldError(fieldName: string): string {\n    const field = this.teamMemberForm.get(fieldName);\n    if (field?.invalid && (field?.dirty || field?.touched)) {\n      if (field?.errors?.['required']) {\n        return `${this.getFieldLabel(fieldName)} is required.`;\n      }\n      if (field?.errors?.['email']) {\n        return 'Please enter a valid email address.';\n      }\n      if (field?.errors?.['minlength']) {\n        return `${this.getFieldLabel(fieldName)} must be at least ${field.errors['minlength'].requiredLength} characters.`;\n      }\n      if (field?.errors?.['maxlength']) {\n        return `${this.getFieldLabel(fieldName)} must not exceed ${field.errors['maxlength'].requiredLength} characters.`;\n      }\n      if (field?.errors?.['min']) {\n        return `${this.getFieldLabel(fieldName)} must be at least ${field.errors['min'].min}.`;\n      }\n    }\n    return '';\n  }\n\n  private getFieldLabel(fieldName: string): string {\n    const labels: { [key: string]: string } = {\n      first_name: 'First name',\n      last_name: 'Last name',\n      email: 'Email',\n      role_id: 'Team role',\n      hourly_rate: 'Hourly rate'\n    };\n    return labels[fieldName] || fieldName;\n  }\n\n  private markFormGroupTouched(): void {\n    Object.keys(this.teamMemberForm.controls).forEach(key => {\n      const control = this.teamMemberForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n}\n", "<!-- Modal Backdrop -->\n<div class=\"fixed inset-0 bg-[#00000085] flex items-center justify-center z-50\" (click)=\"onBackdropClick($event)\">\n  <!-- Modal Content -->\n  <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-md mx-4 transform transition-all\">\n    <!-- Modal Header -->\n    <div class=\"px-6 py-4 border-b border-gray-200\">\n      <div class=\"flex items-center justify-between\">\n        <h3 class=\"text-lg font-semibold text-gray-900\">\n          {{ isEditMode ? 'Edit Team Member' : 'Invite New Team Member' }}\n        </h3>\n        <button\n          (click)=\"onCancel()\"\n          class=\"text-gray-400 hover:text-gray-600 transition-colors\">\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n          </svg>\n        </button>\n      </div>\n    </div>\n\n    <!-- Modal Body -->\n    <div class=\"px-6 py-4\">\n      <form [formGroup]=\"teamMemberForm\" (ngSubmit)=\"onSubmit()\">\n        <!-- Error Message -->\n        <div *ngIf=\"error\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n          <div class=\"flex\">\n            <svg class=\"w-5 h-5 text-red-400 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n            <p class=\"ml-2 text-sm text-red-700\">{{ error }}</p>\n          </div>\n        </div>\n\n        <!-- First Name -->\n        <div class=\"mb-4\">\n          <label for=\"first_name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            First Name *\n          </label>\n          <input\n            id=\"first_name\"\n            type=\"text\"\n            formControlName=\"first_name\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n            placeholder=\"Enter first name\"\n            [class.border-red-300]=\"teamMemberForm.get('first_name')?.invalid && (teamMemberForm.get('first_name')?.dirty || teamMemberForm.get('first_name')?.touched)\">\n          <p *ngIf=\"getFieldError('first_name')\" class=\"mt-1 text-sm text-red-600\">\n            {{ getFieldError('first_name') }}\n          </p>\n        </div>\n\n        <!-- Last Name -->\n        <div class=\"mb-4\">\n          <label for=\"last_name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Last Name *\n          </label>\n          <input\n            id=\"last_name\"\n            type=\"text\"\n            formControlName=\"last_name\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n            placeholder=\"Enter last name\"\n            [class.border-red-300]=\"teamMemberForm.get('last_name')?.invalid && (teamMemberForm.get('last_name')?.dirty || teamMemberForm.get('last_name')?.touched)\">\n          <p *ngIf=\"getFieldError('last_name')\" class=\"mt-1 text-sm text-red-600\">\n            {{ getFieldError('last_name') }}\n          </p>\n        </div>\n\n        <!-- Email -->\n        <div class=\"mb-4\">\n          <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Email *\n          </label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            formControlName=\"email\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n            placeholder=\"Enter email address\"\n            [class.border-red-300]=\"teamMemberForm.get('email')?.invalid && (teamMemberForm.get('email')?.dirty || teamMemberForm.get('email')?.touched)\">\n          <p *ngIf=\"getFieldError('email')\" class=\"mt-1 text-sm text-red-600\">\n            {{ getFieldError('email') }}\n          </p>\n        </div>\n\n        <!-- Team Role -->\n        <div class=\"mb-4\">\n          <label for=\"role_id\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Team Role *\n          </label>\n          <select\n            id=\"role_id\"\n            formControlName=\"role_id\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n            [class.border-red-300]=\"teamMemberForm.get('role_id')?.invalid && (teamMemberForm.get('role_id')?.dirty || teamMemberForm.get('role_id')?.touched)\">\n            <option value=\"\">Select a role</option>\n            <option *ngFor=\"let role of availableRoles\" [value]=\"role.id\">\n              {{ role.name }}\n            </option>\n          </select>\n          <p *ngIf=\"getFieldError('role_id')\" class=\"mt-1 text-sm text-red-600\">\n            {{ getFieldError('role_id') }}\n          </p>\n          <p *ngIf=\"rolesError\" class=\"mt-1 text-sm text-red-600\">\n            {{ rolesError }}\n          </p>\n        </div>\n\n        <!-- Hourly Rate -->\n        <div class=\"mb-6\">\n          <label for=\"hourly_rate\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Hourly Rate (Optional)\n          </label>\n          <input\n            id=\"hourly_rate\"\n            type=\"number\"\n            formControlName=\"hourly_rate\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n            placeholder=\"Enter hourly rate\"\n            min=\"0\"\n            step=\"0.01\"\n            [class.border-red-300]=\"teamMemberForm.get('hourly_rate')?.invalid && (teamMemberForm.get('hourly_rate')?.dirty || teamMemberForm.get('hourly_rate')?.touched)\">\n          <p *ngIf=\"getFieldError('hourly_rate')\" class=\"mt-1 text-sm text-red-600\">\n            {{ getFieldError('hourly_rate') }}\n          </p>\n          <p class=\"mt-1 text-xs text-gray-500\">\n            Optional hourly rate for this team member\n          </p>\n        </div>\n\n        <!-- Modal Actions -->\n        <div class=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n          <button\n            type=\"button\"\n            (click)=\"onCancel()\"\n            class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\">\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            [disabled]=\"teamMemberForm.invalid || loading\"\n            class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\">\n            <svg *ngIf=\"loading\" class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white inline\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            {{ isEditMode ? 'Update Team Member' : 'Send Invitation' }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n", "import { Component, OnInit, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TeamService, TeamMember, TeamMemberStatistics } from '../services/team.service';\nimport { TeamDeleteConfirmationModalComponent } from '../components/team-delete-confirmation-modal/team-delete-confirmation-modal.component';\nimport { TeamFormModalComponent } from '../components/team-form-modal/team-form-modal.component';\n\n@Component({\n  selector: 'app-team-list',\n  templateUrl: './team-list.component.html',\n  styleUrls: ['./team-list.component.scss'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, TeamDeleteConfirmationModalComponent, TeamFormModalComponent]\n})\nexport class TeamListComponent implements OnInit {\n  teamMembers: TeamMember[] = [];\n  filteredTeamMembers: TeamMember[] = [];\n  loading = false;\n  error = '';\n  statistics: TeamMemberStatistics | null = null;\n  \n  // Search and filtering\n  searchTerm = '';\n  \n  // Sorting\n  selectedSort: any = null;\n  selectedSortDir: 'asc' | 'desc' = 'asc';\n  showSortDropdown = false;\n  \n  // Modal states\n  showDeleteModal = false;\n  teamMemberToDelete: TeamMember | null = null;\n  showFormModal = false;\n  teamMemberToEdit: TeamMember | null = null;\n  isEditMode = false;\n  \n  // Sort options\n  sortOptions = [\n    { label: 'Name', value: 'name' },\n    { label: 'Created Date', value: 'created_at' },\n    { label: 'Email', value: 'email' },\n    { label: 'Role', value: 'role' }\n  ];\n\n  constructor(\n    private teamService: TeamService\n  ) {}\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: Event): void {\n    const target = event.target as HTMLElement;\n    const dropdownButton = target.closest('button');\n    const dropdownMenu = target.closest('.dropdown-menu');\n    \n    // Don't close if clicking on dropdown elements\n    if (dropdownButton || dropdownMenu) {\n      return;\n    }\n    \n    // Close all dropdowns if clicking outside\n    this.teamMembers = this.teamMembers.map(tm => ({\n      ...tm,\n      showMenu: false\n    }));\n    this.filteredTeamMembers = this.filteredTeamMembers.map(tm => ({\n      ...tm,\n      showMenu: false\n    }));\n  }\n\n  ngOnInit(): void {\n    this.loadTeamMembers();\n    this.loadStatistics();\n  }\n\n  loadTeamMembers(): void {\n    this.loading = true;\n    this.error = '';\n\n    this.teamService.getTeamMembers().subscribe({\n      next: (response: any) => {\n        this.teamMembers = response.data;\n        this.filteredTeamMembers = [...this.teamMembers];\n        this.loading = false;\n      },\n      error: (error: any) => {\n        this.error = 'Failed to load team members';\n        this.loading = false;\n        console.error('Error loading team members:', error);\n      }\n    });\n  }\n\n  loadStatistics(): void {\n    this.teamService.getTeamMemberStatistics().subscribe({\n      next: (response: any) => {\n        this.statistics = response.data;\n      },\n      error: (error: any) => {\n        console.error('Error loading team member statistics:', error);\n      }\n    });\n  }\n\n  createTeamMember(): void {\n    this.teamMemberToEdit = null;\n    this.isEditMode = false;\n    this.showFormModal = true;\n  }\n\n  editTeamMember(teamMember: TeamMember): void {\n    this.teamMemberToEdit = teamMember;\n    this.isEditMode = true;\n    this.showFormModal = true;\n  }\n\n  viewTeamMember(teamMember: TeamMember): void {\n    // For now, we'll just show the team member details in a modal or navigate to a view page\n    console.log('View team member:', teamMember);\n  }\n\n  deleteTeamMember(teamMember: TeamMember): void {\n    this.teamMemberToDelete = teamMember;\n    this.showDeleteModal = true;\n  }\n\n  closeDeleteModal(): void {\n    this.showDeleteModal = false;\n    this.teamMemberToDelete = null;\n  }\n\n  confirmDeleteTeamMember(data: { teamId: number, reason: string }): void {\n    if (!this.teamMemberToDelete) return;\n\n    this.teamService.deleteTeamMember(this.teamMemberToDelete.id).subscribe({\n      next: (response: any) => {\n        this.teamMembers = this.teamMembers.filter(tm => tm.id !== this.teamMemberToDelete!.id);\n        this.filteredTeamMembers = this.filteredTeamMembers.filter(tm => tm.id !== this.teamMemberToDelete!.id);\n        this.closeDeleteModal();\n      },\n      error: (error: any) => {\n        this.error = 'Failed to delete team member';\n        console.error('Error deleting team member:', error);\n      }\n    });\n  }\n\n  closeFormModal(): void {\n    this.showFormModal = false;\n    this.teamMemberToEdit = null;\n    this.isEditMode = false;\n  }\n\n  onTeamMemberSaved(teamMember: TeamMember): void {\n    if (this.isEditMode) {\n      const index = this.teamMembers.findIndex(tm => tm.id === teamMember.id);\n      if (index !== -1) {\n        this.teamMembers[index] = teamMember;\n        this.filteredTeamMembers = this.filteredTeamMembers.map(tm => \n          tm.id === teamMember.id ? teamMember : tm\n        );\n      }\n    } else {\n      this.teamMembers.unshift(teamMember);\n      this.filteredTeamMembers.unshift(teamMember);\n    }\n    this.closeFormModal();\n  }\n\n  getActiveTeamMembersCount(): number {\n    return this.statistics?.active_team_members || 0;\n  }\n\n  getTotalTeamMembersCount(): number {\n    return this.statistics?.total_team_members || 0;\n  }\n\n  onSearchChange(): void {\n    this.filterTeamMembers();\n  }\n\n  filterTeamMembers(): void {\n    if (!this.searchTerm.trim()) {\n      this.filteredTeamMembers = [...this.teamMembers];\n    } else {\n      this.filteredTeamMembers = this.teamMembers.filter(teamMember =>\n        `${teamMember.first_name} ${teamMember.last_name}`.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n        teamMember.email.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n        (teamMember.role?.name && teamMember.role.name.toLowerCase().includes(this.searchTerm.toLowerCase()))\n      );\n    }\n    this.sortTeamMembers();\n  }\n\n  toggleSortDropdown(): void {\n    this.showSortDropdown = !this.showSortDropdown;\n  }\n\n  selectSort(sort: any): void {\n    this.selectedSort = sort;\n    this.showSortDropdown = false;\n    this.sortTeamMembers();\n  }\n\n  toggleSortDir(): void {\n    this.selectedSortDir = this.selectedSortDir === 'asc' ? 'desc' : 'asc';\n    this.sortTeamMembers();\n  }\n\n  sortTeamMembers(): void {\n    if (!this.selectedSort) return;\n\n    this.filteredTeamMembers.sort((a, b) => {\n      let aValue: any;\n      let bValue: any;\n\n      switch (this.selectedSort.value) {\n        case 'name':\n          aValue = `${a.first_name} ${a.last_name}`.toLowerCase();\n          bValue = `${b.first_name} ${b.last_name}`.toLowerCase();\n          break;\n        case 'email':\n          aValue = a.email.toLowerCase();\n          bValue = b.email.toLowerCase();\n          break;\n        case 'created_at':\n          aValue = new Date(a.created_at).getTime();\n          bValue = new Date(b.created_at).getTime();\n          break;\n        case 'role':\n          aValue = (a.role?.name || '').toLowerCase();\n          bValue = (b.role?.name || '').toLowerCase();\n          break;\n        default:\n          aValue = `${a.first_name} ${a.last_name}`.toLowerCase();\n          bValue = `${b.first_name} ${b.last_name}`.toLowerCase();\n      }\n\n      if (aValue < bValue) {\n        return this.selectedSortDir === 'asc' ? -1 : 1;\n      } else if (aValue > bValue) {\n        return this.selectedSortDir === 'asc' ? 1 : -1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  getTeamMemberFullName(teamMember: TeamMember): string {\n    return `${teamMember.first_name} ${teamMember.last_name}`;\n  }\n\n  getTeamMemberInitials(teamMember: TeamMember): string {\n    return `${teamMember.first_name.charAt(0)}${teamMember.last_name.charAt(0)}`.toUpperCase();\n  }\n\n  toggleTeamMemberMenu(teamMemberId: number): void {\n    this.teamMembers = this.teamMembers.map(tm => ({\n      ...tm,\n      showMenu: tm.id === teamMemberId ? !tm.showMenu : false\n    }));\n    this.filteredTeamMembers = this.filteredTeamMembers.map(tm => ({\n      ...tm,\n      showMenu: tm.id === teamMemberId ? !tm.showMenu : false\n    }));\n  }\n}\n", "<div class=\"team-list-page min-h-screen bg-gray-50 p-6\">\n  <!-- Page Title and Subtitle + Actions -->\n  <div class=\"mb-6 flex flex-col md:flex-row md:items-center md:justify-between\">\n    <div>\n      <h1 class=\"text-2xl font-bold text-gray-900 mb-1\">Team Members</h1>\n      <p class=\"text-gray-600 text-base\">Manage your team members and their roles within your organization</p>\n    </div>\n    <div class=\"flex items-center space-x-3 mt-4 md:mt-0\">\n      <button (click)=\"createTeamMember()\" class=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold px-5 py-2 rounded-lg shadow-sm transition-colors flex items-center cursor-pointer\">\n        <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\n        </svg>\n        Invite Team Member\n      </button>\n    </div>\n  </div>\n\n  <!-- Statistics Cards -->\n  <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\" *ngIf=\"statistics\">\n    <div class=\"bg-white rounded-xl border border-gray-200 p-6 shadow-sm\">\n      <div class=\"flex items-center\">\n        <div class=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n          <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n          </svg>\n        </div>\n        <div class=\"ml-4\">\n          <p class=\"text-sm font-medium text-gray-600\">Total Team Members</p>\n          <p class=\"text-2xl font-bold text-gray-900\">{{ statistics.total_team_members }}</p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"bg-white rounded-xl border border-gray-200 p-6 shadow-sm\">\n      <div class=\"flex items-center\">\n        <div class=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\n          <svg class=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </div>\n        <div class=\"ml-4\">\n          <p class=\"text-sm font-medium text-gray-600\">Active Members</p>\n          <p class=\"text-2xl font-bold text-gray-900\">{{ statistics.active_team_members }}</p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"bg-white rounded-xl border border-gray-200 p-6 shadow-sm\">\n      <div class=\"flex items-center\">\n        <div class=\"w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center\">\n          <svg class=\"w-6 h-6 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </div>\n        <div class=\"ml-4\">\n          <p class=\"text-sm font-medium text-gray-600\">Pending Invitations</p>\n          <p class=\"text-2xl font-bold text-gray-900\">{{ statistics.pending_team_members }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Filters and View Type -->\n  <div class=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\n    <!-- Left: Search and Filters -->\n    <div class=\"flex-1 flex flex-col space-y-3 md:space-y-0 md:flex-row md:items-center md:space-x-3\">\n      <!-- Search -->\n      <div class=\"relative w-full md:w-80\">\n        <svg class=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n        </svg>\n        <input\n          type=\"text\"\n          placeholder=\"Search team members by name or email...\"\n          class=\"w-full pl-10 pr-4 py-2 border-2 border-blue-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400\"\n          [(ngModel)]=\"searchTerm\"\n          (input)=\"onSearchChange()\" />\n      </div>\n\n      <!-- Sort Dropdown -->\n      <div class=\"relative\" (click)=\"$event.stopPropagation()\">\n        <button\n          type=\"button\"\n          (click)=\"toggleSortDropdown()\"\n          class=\"w-full px-4 py-2 text-left border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white transition-all min-w-[180px]\"\n          [class.border-blue-500]=\"showSortDropdown\">\n          <div class=\"flex items-center justify-between\">\n            <span class=\"text-sm\">\n              {{ selectedSort ? 'Sort by: ' + selectedSort.label : 'Sort by' }}\n            </span>\n            <svg class=\"w-4 h-4 text-gray-400 transition-transform duration-200\" \n                 [class.rotate-180]=\"showSortDropdown\"\n                 fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n            </svg>\n          </div>\n        </button>\n\n        <!-- Sort Options Dropdown -->\n        <div *ngIf=\"showSortDropdown\" \n             class=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg\">\n          <div class=\"py-1\">\n            <div *ngFor=\"let sort of sortOptions\" \n                 (click)=\"selectSort(sort)\"\n                 class=\"px-3 py-2 text-sm text-gray-900 hover:bg-blue-50 cursor-pointer transition-colors flex items-center justify-between\"\n                 [class.bg-blue-100]=\"selectedSort?.value === sort.value\">\n              <span>{{ sort.label }}</span>\n              <svg *ngIf=\"selectedSort?.value === sort.value\" class=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Sort Direction Toggle -->\n      <button\n        (click)=\"toggleSortDir()\"\n        class=\"px-3 py-2 border border-gray-300 rounded-lg bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\">\n        <svg class=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                [attr.d]=\"selectedSortDir === 'asc' ? 'M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4' : 'M17 8V4m0 0l4 4m-4-4l-4 4M7 16v4m0 0l-4-4m4 4l4-4'\"></path>\n        </svg>\n      </button>\n    </div>\n  </div>\n\n  <!-- Loading State -->\n  <div *ngIf=\"loading\" class=\"flex justify-center items-center py-12\">\n    <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n  </div>\n\n  <!-- Error State -->\n  <div *ngIf=\"error && !loading\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n    <div class=\"flex\">\n      <svg class=\"w-5 h-5 text-red-400 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <p class=\"ml-2 text-sm text-red-700\">{{ error }}</p>\n    </div>\n  </div>\n\n  <!-- Team Members Cards -->\n  <div *ngIf=\"!loading\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n    <div *ngFor=\"let teamMember of filteredTeamMembers\" \n         class=\"bg-white rounded-xl border border-gray-200 shadow-sm hover:shadow-md transition-shadow overflow-hidden\">\n      \n      <!-- Card Header (Light Blue Background) -->\n      <div class=\"bg-blue-50 px-6 py-4 relative\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center\">\n            <div class=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mr-4\">\n              <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n              </svg>\n            </div>\n            <div>\n              <span class=\"text-sm font-medium text-blue-600\">\n                {{ teamMember.email_verified_at ? 'Active' : 'Pending' }}\n              </span>\n            </div>\n          </div>\n          \n          <!-- Options Menu -->\n          <div class=\"relative\">\n            <button\n              (click)=\"toggleTeamMemberMenu(teamMember.id)\"\n              class=\"text-gray-400 hover:text-gray-600 p-1.5 rounded-full hover:bg-gray-100 transition-colors focus:outline-none\">\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path>\n              </svg>\n            </button>\n            \n            <!-- Dropdown Menu -->\n            <div *ngIf=\"teamMember.showMenu\" \n                 class=\"absolute right-0 mt-1 w-40 bg-white rounded-lg shadow-lg border border-gray-200 z-20\">\n              <div class=\"py-1\">\n                <!-- Edit Option -->\n                <button\n                  (click)=\"editTeamMember(teamMember)\"\n                  class=\"flex items-center w-full px-3 py-2.5 text-sm text-gray-700 hover:bg-gray-50 transition-colors\">\n                  <svg class=\"w-4 h-4 mr-2.5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\n                  </svg>\n                  <span>Edit Member</span>\n                </button>\n                \n                <!-- Remove Option -->\n                <button\n                  (click)=\"deleteTeamMember(teamMember)\"\n                  class=\"flex items-center w-full px-3 py-2.5 text-sm text-red-600 hover:bg-red-50 transition-colors\">\n                  <svg class=\"w-4 h-4 mr-2.5 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n                  </svg>\n                  <span>Remove Member</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Card Body (White Background) -->\n      <div class=\"px-6 py-4\">\n        <!-- Member Name -->\n        <h3 class=\"text-xl font-bold text-gray-900 mb-2\">{{ getTeamMemberFullName(teamMember) }}</h3>\n        \n        <!-- Member Email -->\n        <p class=\"text-gray-600 mb-4\">{{ teamMember.email }}</p>\n        \n        <!-- Role Information -->\n        <div class=\"flex items-center text-sm text-gray-500 mb-3\" *ngIf=\"teamMember.role\">\n          <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\n          </svg>\n          <span>{{ teamMember.role.name }}</span>\n        </div>\n        \n        <!-- Separator Line -->\n        <hr class=\"my-3 border-gray-200\">\n        \n        <!-- Hourly Rate -->\n        <div class=\"flex items-center text-sm text-gray-500 mb-2\" *ngIf=\"teamMember.hourly_rate\">\n          <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\n          </svg>\n          <span>${{ teamMember.hourly_rate }}/hour</span>\n        </div>\n        \n        <!-- Created Date -->\n        <div class=\"flex items-center text-sm text-gray-500\">\n          <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\n          </svg>\n          <span>Created {{ teamMember.created_at | date:'MMM d, y' }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Empty State -->\n  <div *ngIf=\"!loading && filteredTeamMembers.length === 0\" class=\"text-center py-12\">\n    <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n    </svg>\n    <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No team members found</h3>\n    <p class=\"mt-1 text-sm text-gray-500\">\n      {{ searchTerm ? 'Try adjusting your search terms.' : 'Get started by inviting your first team member.' }}\n    </p>\n    <div class=\"mt-6\">\n      <button\n        (click)=\"createTeamMember()\"\n        class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n        <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\n        </svg>\n        Invite Team Member\n      </button>\n    </div>\n  </div>\n\n  <!-- Modals -->\n  <app-team-delete-confirmation-modal\n    *ngIf=\"showDeleteModal\"\n    [teamMember]=\"teamMemberToDelete\"\n    (confirmed)=\"confirmDeleteTeamMember($event)\"\n    (cancelled)=\"closeDeleteModal()\">\n  </app-team-delete-confirmation-modal>\n\n  <app-team-form-modal\n    *ngIf=\"showFormModal\"\n    [teamMember]=\"teamMemberToEdit\"\n    [isEditMode]=\"isEditMode\"\n    (teamMemberSaved)=\"onTeamMemberSaved($event)\"\n    (cancelled)=\"closeFormModal()\">\n  </app-team-form-modal>\n</div>\n", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TeamListComponent } from './team-list/team-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TeamListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TeamsRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { TeamsRoutingModule } from './teams-routing.module';\r\nimport { TeamListComponent } from './team-list/team-list.component';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    TeamsRoutingModule,\r\n    TeamListComponent\r\n  ]\r\n})\r\nexport class TeamsModule { }\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYM,IAAO,uCAAP,MAAO,sCAAoC;EACtC,aAAgC;EAC/B,YAAY,IAAI,aAAY;EAC5B,YAAY,IAAI,aAAY;EAEtC,eAAe;EAEf,UAAO;AACL,SAAK,UAAU,KAAI;EACrB;EAEA,kBAAe;AACb,QAAI,KAAK,YAAY;AACnB,WAAK,UAAU,KAAK;QAClB,QAAQ,KAAK,WAAW;QACxB,QAAQ,KAAK,aAAa,KAAI;OAC/B;IACH;EACF;EAEA,gBAAgB,OAAY;AAC1B,QAAI,MAAM,WAAW,MAAM,eAAe;AACxC,WAAK,QAAO;IACd;EACF;;qCAxBW,uCAAoC;EAAA;yEAApC,uCAAoC,WAAA,CAAA,CAAA,oCAAA,CAAA,GAAA,QAAA,EAAA,YAAA,aAAA,GAAA,SAAA,EAAA,WAAA,aAAA,WAAA,YAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,SAAA,WAAA,kBAAA,QAAA,gBAAA,kBAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,WAAA,OAAA,aAAA,cAAA,UAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,gBAAA,mBAAA,MAAA,GAAA,CAAA,GAAA,QAAA,cAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,OAAA,OAAA,gBAAA,MAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,8HAAA,GAAA,CAAA,GAAA,WAAA,iBAAA,eAAA,GAAA,CAAA,GAAA,iBAAA,uBAAA,sBAAA,GAAA,OAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,OAAA,KAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,sBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,gBAAA,GAAA,SAAA,WAAA,eAAA,iBAAA,MAAA,GAAA,CAAA,MAAA,gBAAA,QAAA,KAAA,eAAA,iDAAA,GAAA,SAAA,UAAA,QAAA,QAAA,UAAA,mBAAA,cAAA,aAAA,wBAAA,sBAAA,gBAAA,sBAAA,wBAAA,cAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,GAAA,QAAA,WAAA,eAAA,GAAA,CAAA,GAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,QAAA,gBAAA,kBAAA,QAAA,QAAA,gBAAA,cAAA,MAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,OAAA,OAAA,cAAA,GAAA,CAAA,GAAA,WAAA,eAAA,iBAAA,MAAA,GAAA,CAAA,GAAA,WAAA,iBAAA,MAAA,GAAA,CAAA,GAAA,aAAA,UAAA,kBAAA,cAAA,OAAA,MAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,OAAA,OAAA,gBAAA,MAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,2IAAA,GAAA,CAAA,GAAA,WAAA,eAAA,cAAA,GAAA,CAAA,GAAA,QAAA,eAAA,WAAA,GAAA,CAAA,GAAA,eAAA,kBAAA,QAAA,QAAA,WAAA,eAAA,iBAAA,YAAA,UAAA,mBAAA,cAAA,oBAAA,sBAAA,gBAAA,uBAAA,uBAAA,qBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,kBAAA,QAAA,QAAA,WAAA,eAAA,cAAA,cAAA,UAAA,sBAAA,cAAA,oBAAA,sBAAA,gBAAA,uBAAA,sBAAA,qBAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,8CAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;ACZjD,MAAA,yBAAA,GAAA,OAAA,CAAA;AAAgF,MAAA,qBAAA,SAAA,SAAA,mEAAA,QAAA;AAAA,eAAS,IAAA,gBAAA,MAAA;MAAuB,CAAA;AAC9G,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAiE,GAAA,OAAA,CAAA,EAC7C,GAAA,OAAA,CAAA,EAEoC,GAAA,OAAA,CAAA;;AAEhD,MAAA,yBAAA,GAAA,OAAA,CAAA;AACE,MAAA,oBAAA,GAAA,QAAA,CAAA;AACF,MAAA,uBAAA;;AACA,MAAA,yBAAA,GAAA,MAAA,CAAA;AAAgD,MAAA,iBAAA,GAAA,oBAAA;AAAkB,MAAA,uBAAA,EAAK;AAEzE,MAAA,yBAAA,GAAA,UAAA,CAAA;AACE,MAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,eAAS,IAAA,QAAA;MAAS,CAAA;;AAElB,MAAA,yBAAA,IAAA,OAAA,CAAA;AACE,MAAA,oBAAA,IAAA,QAAA,EAAA;AACF,MAAA,uBAAA,EAAM,EACC;;AAIX,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAEd,MAAA,iBAAA,IAAA,8BAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,IAAA,YAAA,EAAA;AAEE,MAAA,2BAAA,iBAAA,SAAA,iFAAA,QAAA;AAAA,QAAA,6BAAA,IAAA,cAAA,MAAA,MAAA,IAAA,eAAA;AAAA,eAAA;MAAA,CAAA;AAG4D,MAAA,uBAAA;AAC9D,MAAA,yBAAA,IAAA,KAAA,EAAA;AAAsC,MAAA,iBAAA,IAAA,2CAAA;AAAyC,MAAA,uBAAA,EAAI;AAIrF,MAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,OAAA,EAAA;;AAG1B,MAAA,yBAAA,IAAA,OAAA,EAAA;AACE,MAAA,oBAAA,IAAA,QAAA,CAAA;AACF,MAAA,uBAAA,EAAM;;AAIR,MAAA,yBAAA,IAAA,MAAA,EAAA;AACE,MAAA,iBAAA,IAAA,mCAAA;AAAgC,MAAA,yBAAA,IAAA,QAAA;AAAQ,MAAA,iBAAA,EAAA;AAA0D,MAAA,uBAAA;AAAS,MAAA,iBAAA,IAAA,IAAA;AAC7G,MAAA,uBAAA;AAGA,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,iBAAA,IAAA,8FAAA;AACF,MAAA,uBAAA;AAGA,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAiE,IAAA,OAAA,CAAA;;AAE7D,MAAA,yBAAA,IAAA,OAAA,EAAA;AACE,MAAA,oBAAA,IAAA,QAAA,EAAA;AACF,MAAA,uBAAA;;AACA,MAAA,yBAAA,IAAA,QAAA,EAAA;AACE,MAAA,iBAAA,IAAA,yFAAA;AACF,MAAA,uBAAA,EAAO,EACH,EACF;AAIR,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAwC,IAAA,UAAA,EAAA;AAEpC,MAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,eAAS,IAAA,QAAA;MAAS,CAAA;AAElB,MAAA,iBAAA,IAAA,UAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,IAAA,UAAA,EAAA;AACE,MAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,eAAS,IAAA,gBAAA;MAAiB,CAAA;AAE1B,MAAA,iBAAA,IAAA,iBAAA;AACF,MAAA,uBAAA,EAAS,EACL,EACF,EACF;;;AArDE,MAAA,oBAAA,EAAA;AAAA,MAAA,2BAAA,WAAA,IAAA,YAAA;AAkBwC,MAAA,oBAAA,EAAA;AAAA,MAAA,6BAAA,KAAA,IAAA,cAAA,OAAA,OAAA,IAAA,WAAA,YAAA,KAAA,IAAA,cAAA,OAAA,OAAA,IAAA,WAAA,WAAA,GAAA;;oBDnCtC,cAAc,aAAW,sBAAA,iBAAA,OAAA,GAAA,QAAA,CAAA,ucAAA,EAAA,CAAA;;;sEAExB,sCAAoC,CAAA;UAPhD;uBACW,sCAAoC,YAGlC,MAAI,SACP,CAAC,cAAc,WAAW,GAAC,UAAA,uzIAAA,QAAA,CAAA,weAAA,EAAA,CAAA;cAG3B,YAAU,CAAA;UAAlB;MACS,WAAS,CAAA;UAAlB;MACS,WAAS,CAAA;UAAlB;;;;6EAHU,sCAAoC,EAAA,WAAA,wCAAA,UAAA,uGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEuE3C,IAAO,cAAP,MAAO,aAAW;EAGF;EAA0B;EAFtC,SAAS,GAAG,YAAY,MAAM;EAEtC,YAAoB,MAA0B,aAAwB;AAAlD,SAAA,OAAA;AAA0B,SAAA,cAAA;EAA2B;EAEjE,iBAAc;AACpB,UAAM,QAAQ,KAAK,YAAY,SAAQ;AACvC,WAAO;MACL,SAAS;QACP,gBAAgB;SACZ,QAAQ,EAAE,iBAAiB,UAAU,KAAK,GAAE,IAAK,CAAA;;EAG3D;;EAGA,iBAAc;AACZ,WAAO,KAAK,KAAK,IAAyB,KAAK,QAAQ,KAAK,eAAc,CAAE;EAC9E;;EAGA,cAAc,IAAU;AACtB,WAAO,KAAK,KAAK,IAAwB,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,KAAK,eAAc,CAAE;EACxF;;EAGA,iBAAiB,gBAAuC;AACtD,WAAO,KAAK,KAAK,KAAyB,KAAK,QAAQ,gBAAgB,KAAK,eAAc,CAAE;EAC9F;;EAGA,iBAAiB,IAAY,gBAAuC;AAClE,WAAO,KAAK,KAAK,IAAwB,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,gBAAgB,KAAK,eAAc,CAAE;EACxG;;EAGA,iBAAiB,IAAU;AACzB,WAAO,KAAK,KAAK,OAA8C,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,KAAK,eAAc,CAAE;EAC9G;;EAGA,iBAAiB,IAAU;AACzB,WAAO,KAAK,KAAK,KAA4C,GAAG,KAAK,MAAM,IAAI,EAAE,sBAAsB,CAAA,GAAI,KAAK,eAAc,CAAE;EAClI;;EAGA,0BAAuB;AACrB,WAAO,KAAK,KAAK,IAAkC,GAAG,KAAK,MAAM,eAAe,KAAK,eAAc,CAAE;EACvG;;EAGA,oBAAiB;AACf,WAAO,KAAK,KAAK,IAA4B,GAAG,KAAK,MAAM,oBAAoB,KAAK,eAAc,CAAE;EACtG;;qCArDW,cAAW,mBAAA,UAAA,GAAA,mBAAA,WAAA,CAAA;EAAA;4EAAX,cAAW,SAAX,aAAW,WAAA,YAFV,OAAM,CAAA;;;sEAEP,aAAW,CAAA;UAHvB;WAAW;MACV,YAAY;KACb;;;;;;;AE1DO,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+E,GAAA,OAAA,EAAA;;AAE3E,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAqC,IAAA,iBAAA,CAAA;AAAW,IAAA,uBAAA,EAAI,EAChD;;;;AADiC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAgBvC,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,YAAA,GAAA,GAAA;;;;;AAgBF,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,WAAA,GAAA,GAAA;;;;;AAgBF,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,OAAA,GAAA,GAAA;;;;;AAeA,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAF4C,IAAA,qBAAA,SAAA,QAAA,EAAA;AAC1C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,MAAA,GAAA;;;;;AAGJ,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,SAAA,GAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,YAAA,GAAA;;;;;AAkBF,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,cAAA,aAAA,GAAA,GAAA;;;;;;AAmBA,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,UAAA,EAAA,EAAkG,GAAA,QAAA,EAAA;AAEpG,IAAA,uBAAA;;;ADlIN,IAAO,yBAAP,MAAO,wBAAsB;EAcvB;EACA;EACA;EAfD,aAAgC;EAChC,aAAa;EACZ,kBAAkB,IAAI,aAAY;EAClC,YAAY,IAAI,aAAY;EAEtC;EACA,UAAU;EACV,QAAQ;EACR,iBAAyB,CAAA;EACzB,eAAe;EACf,aAAa;EAEb,YACU,IACA,aACA,aAAwB;AAFxB,SAAA,KAAA;AACA,SAAA,cAAA;AACA,SAAA,cAAA;AAER,SAAK,iBAAiB,KAAK,GAAG,MAAM;MAClC,YAAY,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,CAAC,GAAG,WAAW,UAAU,GAAG,CAAC,CAAC;MAC1F,WAAW,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,CAAC,GAAG,WAAW,UAAU,GAAG,CAAC,CAAC;MACzF,OAAO,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,KAAK,CAAC;MACnD,SAAS,CAAC,IAAI,CAAC,WAAW,QAAQ,CAAC;MACnC,aAAa,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC;KACxC;AACD,SAAK,mBAAkB;EACzB;EAEA,WAAQ;AACN,QAAI,KAAK,cAAc,KAAK,YAAY;AACtC,WAAK,eAAc;IACrB;EACF;EAEA,YAAY,SAAsB;AAChC,QAAI,QAAQ,YAAY,KAAK,QAAQ,YAAY,EAAE,gBAAgB,KAAK,YAAY;AAElF,UAAI,KAAK,eAAe,SAAS,GAAG;AAClC,aAAK,eAAc;MACrB,OAAO;AAEL,mBAAW,MAAK;AACd,cAAI,KAAK,eAAe,SAAS,GAAG;AAClC,iBAAK,eAAc;UACrB;QACF,GAAG,GAAG;MACR;IACF;EACF;;EAGA,2BAAwB;AACtB,QAAI,KAAK,cAAc,KAAK,cAAc,KAAK,eAAe,SAAS,GAAG;AACxE,WAAK,eAAc;IACrB;EACF;EAEA,qBAAkB;AAChB,SAAK,eAAe;AACpB,SAAK,aAAa;AAElB,SAAK,YAAY,SAAQ,EAAG,UAAU;MACpC,MAAM,CAAC,aAAiB;AACtB,aAAK,iBAAiB,SAAS,QAAQ,CAAA;AACvC,aAAK,eAAe;AACpB,gBAAQ,IAAI,2BAA2B,KAAK,cAAc;AAG1D,YAAI,KAAK,cAAc,KAAK,YAAY;AACtC,eAAK,eAAc;QACrB;MACF;MACA,OAAO,CAAC,UAAc;AACpB,gBAAQ,MAAM,kCAAkC,KAAK;AAErD,aAAK,YAAY,kBAAiB,EAAG,UAAU;UAC7C,MAAM,CAAC,aAAiB;AACtB,iBAAK,iBAAiB,SAAS,QAAQ,CAAA;AACvC,iBAAK,eAAe;AACpB,oBAAQ,IAAI,sCAAsC,KAAK,cAAc;AAGrE,gBAAI,KAAK,cAAc,KAAK,YAAY;AACtC,mBAAK,eAAc;YACrB;UACF;UACA,OAAO,CAAC,kBAAsB;AAC5B,oBAAQ,MAAM,yBAAyB,aAAa;AACpD,iBAAK,aAAa;AAClB,iBAAK,eAAe;UACtB;SACD;MACH;KACD;EACH;EAEA,iBAAc;AACZ,QAAI,KAAK,YAAY;AACnB,cAAQ,IAAI,6BAA6B,KAAK,UAAU;AAGxD,YAAM,SAAS,KAAK,WAAW,WAAW,KAAK,WAAW,MAAM;AAChE,YAAM,aAAa,KAAK,WAAW;AAEnC,cAAQ,IAAI,YAAY,QAAQ,SAAS,OAAO,MAAM;AACtD,cAAQ,IAAI,gBAAgB,YAAY,SAAS,OAAO,UAAU;AAGlE,YAAM,eAAe,SAAS,OAAO,MAAM,IAAI;AAE/C,WAAK,eAAe,WAAW;QAC7B,YAAY,KAAK,WAAW;QAC5B,WAAW,KAAK,WAAW;QAC3B,OAAO,KAAK,WAAW;QACvB,SAAS;QACT,aAAa,cAAc;OAC5B;AAED,cAAQ,IAAI,4BAA4B,KAAK,eAAe,KAAK;AACjE,cAAQ,IAAI,oBAAoB,KAAK,cAAc;IACrD;EACF;;EAGA,gBAAgB,OAAY;AAC1B,QAAI,MAAM,WAAW,MAAM,eAAe;AACxC,WAAK,SAAQ;IACf;EACF;EAEA,WAAQ;AACN,QAAI,KAAK,eAAe,SAAS;AAC/B,WAAK,qBAAoB;AACzB;IACF;AAEA,SAAK,UAAU;AACf,SAAK,QAAQ;AAEb,UAAM,WAAW,KAAK,eAAe;AAErC,QAAI,KAAK,cAAc,KAAK,YAAY;AACtC,WAAK,YAAY,iBAAiB,KAAK,WAAW,IAAI,QAAQ,EAAE,UAAU;QACxE,MAAM,CAAC,aAAiB;AACtB,eAAK,UAAU;AACf,eAAK,gBAAgB,KAAK,SAAS,IAAI;QACzC;QACA,OAAO,CAAC,UAAc;AACpB,eAAK,UAAU;AACf,eAAK,QAAQ,MAAM,OAAO,WAAW;QACvC;OACD;IACH,OAAO;AACL,WAAK,YAAY,iBAAiB,QAAQ,EAAE,UAAU;QACpD,MAAM,CAAC,aAAiB;AACtB,eAAK,UAAU;AACf,eAAK,gBAAgB,KAAK,SAAS,IAAI;QACzC;QACA,OAAO,CAAC,UAAc;AACpB,eAAK,UAAU;AACf,eAAK,QAAQ,MAAM,OAAO,WAAW;QACvC;OACD;IACH;EACF;EAEA,WAAQ;AACN,SAAK,UAAU,KAAI;EACrB;EAEA,cAAc,WAAiB;AAC7B,UAAM,QAAQ,KAAK,eAAe,IAAI,SAAS;AAC/C,QAAI,OAAO,YAAY,OAAO,SAAS,OAAO,UAAU;AACtD,UAAI,OAAO,SAAS,UAAU,GAAG;AAC/B,eAAO,GAAG,KAAK,cAAc,SAAS,CAAC;MACzC;AACA,UAAI,OAAO,SAAS,OAAO,GAAG;AAC5B,eAAO;MACT;AACA,UAAI,OAAO,SAAS,WAAW,GAAG;AAChC,eAAO,GAAG,KAAK,cAAc,SAAS,CAAC,qBAAqB,MAAM,OAAO,WAAW,EAAE,cAAc;MACtG;AACA,UAAI,OAAO,SAAS,WAAW,GAAG;AAChC,eAAO,GAAG,KAAK,cAAc,SAAS,CAAC,oBAAoB,MAAM,OAAO,WAAW,EAAE,cAAc;MACrG;AACA,UAAI,OAAO,SAAS,KAAK,GAAG;AAC1B,eAAO,GAAG,KAAK,cAAc,SAAS,CAAC,qBAAqB,MAAM,OAAO,KAAK,EAAE,GAAG;MACrF;IACF;AACA,WAAO;EACT;EAEQ,cAAc,WAAiB;AACrC,UAAM,SAAoC;MACxC,YAAY;MACZ,WAAW;MACX,OAAO;MACP,SAAS;MACT,aAAa;;AAEf,WAAO,OAAO,SAAS,KAAK;EAC9B;EAEQ,uBAAoB;AAC1B,WAAO,KAAK,KAAK,eAAe,QAAQ,EAAE,QAAQ,SAAM;AACtD,YAAM,UAAU,KAAK,eAAe,IAAI,GAAG;AAC3C,eAAS,cAAa;IACxB,CAAC;EACH;;qCAhNW,yBAAsB,4BAAA,WAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,WAAA,CAAA;EAAA;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,qBAAA,CAAA,GAAA,QAAA,EAAA,YAAA,cAAA,YAAA,aAAA,GAAA,SAAA,EAAA,iBAAA,mBAAA,WAAA,YAAA,GAAA,UAAA,CAAA,8BAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,SAAA,WAAA,kBAAA,QAAA,gBAAA,kBAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,cAAA,cAAA,UAAA,YAAA,QAAA,aAAA,gBAAA,GAAA,CAAA,GAAA,QAAA,QAAA,YAAA,iBAAA,GAAA,CAAA,GAAA,QAAA,gBAAA,iBAAA,GAAA,CAAA,GAAA,WAAA,iBAAA,eAAA,GAAA,CAAA,GAAA,iBAAA,uBAAA,qBAAA,GAAA,OAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,OAAA,KAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,sBAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,GAAA,YAAA,WAAA,GAAA,CAAA,SAAA,uDAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,cAAA,GAAA,SAAA,WAAA,eAAA,iBAAA,MAAA,GAAA,CAAA,MAAA,cAAA,QAAA,QAAA,mBAAA,cAAA,eAAA,oBAAA,GAAA,UAAA,QAAA,QAAA,UAAA,mBAAA,cAAA,sBAAA,gBAAA,uBAAA,4BAAA,mBAAA,GAAA,CAAA,SAAA,6BAAA,GAAA,MAAA,GAAA,CAAA,OAAA,aAAA,GAAA,SAAA,WAAA,eAAA,iBAAA,MAAA,GAAA,CAAA,MAAA,aAAA,QAAA,QAAA,mBAAA,aAAA,eAAA,mBAAA,GAAA,UAAA,QAAA,QAAA,UAAA,mBAAA,cAAA,sBAAA,gBAAA,uBAAA,4BAAA,mBAAA,GAAA,CAAA,OAAA,SAAA,GAAA,SAAA,WAAA,eAAA,iBAAA,MAAA,GAAA,CAAA,MAAA,SAAA,QAAA,SAAA,mBAAA,SAAA,eAAA,uBAAA,GAAA,UAAA,QAAA,QAAA,UAAA,mBAAA,cAAA,sBAAA,gBAAA,uBAAA,4BAAA,mBAAA,GAAA,CAAA,OAAA,WAAA,GAAA,SAAA,WAAA,eAAA,iBAAA,MAAA,GAAA,CAAA,MAAA,WAAA,mBAAA,WAAA,GAAA,UAAA,QAAA,QAAA,UAAA,mBAAA,cAAA,sBAAA,gBAAA,uBAAA,4BAAA,mBAAA,GAAA,CAAA,SAAA,EAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,OAAA,eAAA,GAAA,SAAA,WAAA,eAAA,iBAAA,MAAA,GAAA,CAAA,MAAA,eAAA,QAAA,UAAA,mBAAA,eAAA,eAAA,qBAAA,OAAA,KAAA,QAAA,QAAA,GAAA,UAAA,QAAA,QAAA,UAAA,mBAAA,cAAA,sBAAA,gBAAA,uBAAA,4BAAA,mBAAA,GAAA,CAAA,GAAA,QAAA,WAAA,eAAA,GAAA,CAAA,GAAA,QAAA,eAAA,aAAA,QAAA,YAAA,iBAAA,GAAA,CAAA,QAAA,UAAA,GAAA,QAAA,QAAA,WAAA,eAAA,iBAAA,YAAA,UAAA,mBAAA,cAAA,oBAAA,sBAAA,gBAAA,uBAAA,uBAAA,qBAAA,GAAA,OAAA,GAAA,CAAA,QAAA,UAAA,GAAA,QAAA,QAAA,WAAA,eAAA,cAAA,eAAA,UAAA,sBAAA,cAAA,qBAAA,sBAAA,gBAAA,uBAAA,uBAAA,qBAAA,uBAAA,+BAAA,GAAA,UAAA,GAAA,CAAA,SAAA,qDAAA,QAAA,QAAA,WAAA,aAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,OAAA,aAAA,UAAA,kBAAA,YAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,OAAA,OAAA,gBAAA,QAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,mDAAA,GAAA,CAAA,GAAA,QAAA,WAAA,cAAA,GAAA,CAAA,GAAA,QAAA,WAAA,cAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,QAAA,QAAA,WAAA,aAAA,GAAA,gBAAA,SAAA,QAAA,OAAA,OAAA,cAAA,QAAA,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,KAAA,MAAA,UAAA,gBAAA,gBAAA,KAAA,GAAA,YAAA,GAAA,CAAA,QAAA,gBAAA,KAAA,mHAAA,GAAA,YAAA,CAAA,GAAA,UAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;ACbnC,MAAA,yBAAA,GAAA,OAAA,CAAA;AAAgF,MAAA,qBAAA,SAAA,SAAA,qDAAA,QAAA;AAAA,eAAS,IAAA,gBAAA,MAAA;MAAuB,CAAA;AAE9G,MAAA,yBAAA,GAAA,OAAA,CAAA,EAA0F,GAAA,OAAA,CAAA,EAExC,GAAA,OAAA,CAAA,EACC,GAAA,MAAA,CAAA;AAE3C,MAAA,iBAAA,CAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,GAAA,UAAA,CAAA;AACE,MAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,eAAS,IAAA,SAAA;MAAU,CAAA;;AAEnB,MAAA,yBAAA,GAAA,OAAA,CAAA;AACE,MAAA,oBAAA,GAAA,QAAA,CAAA;AACF,MAAA,uBAAA,EAAM,EACC,EACL;;AAIR,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,IAAA,QAAA,CAAA;AACc,MAAA,qBAAA,YAAA,SAAA,4DAAA;AAAA,eAAY,IAAA,SAAA;MAAU,CAAA;AAEvD,MAAA,qBAAA,IAAA,wCAAA,GAAA,GAAA,OAAA,EAAA;AAUA,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAEd,MAAA,iBAAA,IAAA,gBAAA;AACF,MAAA,uBAAA;AACA,MAAA,oBAAA,IAAA,SAAA,EAAA;AAOA,MAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,KAAA,EAAA;AAGF,MAAA,uBAAA;AAGA,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAEd,MAAA,iBAAA,IAAA,eAAA;AACF,MAAA,uBAAA;AACA,MAAA,oBAAA,IAAA,SAAA,EAAA;AAOA,MAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,KAAA,EAAA;AAGF,MAAA,uBAAA;AAGA,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAEd,MAAA,iBAAA,IAAA,WAAA;AACF,MAAA,uBAAA;AACA,MAAA,oBAAA,IAAA,SAAA,EAAA;AAOA,MAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,KAAA,EAAA;AAGF,MAAA,uBAAA;AAGA,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAEd,MAAA,iBAAA,IAAA,eAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,IAAA,UAAA,EAAA,EAIsJ,IAAA,UAAA,EAAA;AACnI,MAAA,iBAAA,IAAA,eAAA;AAAa,MAAA,uBAAA;AAC9B,MAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,UAAA,EAAA;AAGF,MAAA,uBAAA;AACA,MAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,KAAA,EAAA,EAAsE,IAAA,sCAAA,GAAA,GAAA,KAAA,EAAA;AAMxE,MAAA,uBAAA;AAGA,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,SAAA,EAAA;AAEd,MAAA,iBAAA,IAAA,0BAAA;AACF,MAAA,uBAAA;AACA,MAAA,oBAAA,IAAA,SAAA,EAAA;AASA,MAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,KAAA,EAAA;AAGA,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,iBAAA,IAAA,6CAAA;AACF,MAAA,uBAAA,EAAI;AAIN,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAsE,IAAA,UAAA,EAAA;AAGlE,MAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,eAAS,IAAA,SAAA;MAAU,CAAA;AAEnB,MAAA,iBAAA,IAAA,UAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,IAAA,UAAA,EAAA;AAIE,MAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,OAAA,EAAA;AAIA,MAAA,iBAAA,EAAA;AACF,MAAA,uBAAA,EAAS,EACL,EACD,EACH,EACF;;;;;;;;AA9IE,MAAA,oBAAA,CAAA;AAAA,MAAA,6BAAA,KAAA,IAAA,aAAA,qBAAA,0BAAA,GAAA;AAcE,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,aAAA,IAAA,cAAA;AAEE,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAoBF,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,oBAAA,UAAA,IAAA,eAAA,IAAA,YAAA,MAAA,OAAA,OAAA,QAAA,eAAA,UAAA,IAAA,eAAA,IAAA,YAAA,MAAA,OAAA,OAAA,QAAA,YAAA,UAAA,IAAA,eAAA,IAAA,YAAA,MAAA,OAAA,OAAA,QAAA,SAAA;AACE,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,cAAA,YAAA,CAAA;AAgBF,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,oBAAA,UAAA,IAAA,eAAA,IAAA,WAAA,MAAA,OAAA,OAAA,QAAA,eAAA,UAAA,IAAA,eAAA,IAAA,WAAA,MAAA,OAAA,OAAA,QAAA,YAAA,UAAA,IAAA,eAAA,IAAA,WAAA,MAAA,OAAA,OAAA,QAAA,SAAA;AACE,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,cAAA,WAAA,CAAA;AAgBF,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,oBAAA,UAAA,IAAA,eAAA,IAAA,OAAA,MAAA,OAAA,OAAA,QAAA,eAAA,UAAA,IAAA,eAAA,IAAA,OAAA,MAAA,OAAA,OAAA,QAAA,YAAA,UAAA,IAAA,eAAA,IAAA,OAAA,MAAA,OAAA,OAAA,QAAA,SAAA;AACE,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,cAAA,OAAA,CAAA;AAcF,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,oBAAA,UAAA,IAAA,eAAA,IAAA,SAAA,MAAA,OAAA,OAAA,QAAA,eAAA,UAAA,IAAA,eAAA,IAAA,SAAA,MAAA,OAAA,OAAA,QAAA,YAAA,UAAA,IAAA,eAAA,IAAA,SAAA,MAAA,OAAA,OAAA,QAAA,SAAA;AAEyB,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,WAAA,IAAA,cAAA;AAIvB,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,cAAA,SAAA,CAAA;AAGA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,UAAA;AAkBF,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,oBAAA,WAAA,IAAA,eAAA,IAAA,aAAA,MAAA,OAAA,OAAA,SAAA,eAAA,WAAA,IAAA,eAAA,IAAA,aAAA,MAAA,OAAA,OAAA,SAAA,YAAA,WAAA,IAAA,eAAA,IAAA,aAAA,MAAA,OAAA,OAAA,SAAA,SAAA;AACE,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,cAAA,aAAA,CAAA;AAkBF,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,YAAA,IAAA,eAAA,WAAA,IAAA,OAAA;AAEM,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,OAAA;AAIN,MAAA,oBAAA;AAAA,MAAA,6BAAA,KAAA,IAAA,aAAA,uBAAA,mBAAA,GAAA;;oBDvIA,cAAY,SAAA,MAAE,qBAAmB,oBAAA,gBAAA,8BAAA,sBAAA,qBAAA,4BAAA,iBAAA,sBAAA,cAAA,oBAAA,iBAAE,WAAW,GAAA,QAAA,CAAA,uuCAAA,EAAA,CAAA;;;sEAI7C,wBAAsB,CAAA;UAPlC;uBACW,uBAAqB,YACnB,MAAI,SACP,CAAC,cAAc,qBAAqB,WAAW,GAAC,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,QAAA,CAAA,2iCAAA,EAAA,CAAA;qFAKhD,YAAU,CAAA;UAAlB;MACQ,YAAU,CAAA;UAAlB;MACS,iBAAe,CAAA;UAAxB;MACS,WAAS,CAAA;UAAlB;;;;6EAJU,wBAAsB,EAAA,WAAA,0BAAA,UAAA,yEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGIjC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2E,GAAA,OAAA,EAAA,EACH,GAAA,OAAA,EAAA,EACrC,GAAA,OAAA,EAAA;;AAE3B,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;AAER,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkB,GAAA,KAAA,EAAA;AAC6B,IAAA,iBAAA,GAAA,oBAAA;AAAkB,IAAA,uBAAA;AAC/D,IAAA,yBAAA,GAAA,KAAA,EAAA;AAA4C,IAAA,iBAAA,EAAA;AAAmC,IAAA,uBAAA,EAAI,EAC/E,EACF;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsE,IAAA,OAAA,EAAA,EACrC,IAAA,OAAA,EAAA;;AAE3B,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,KAAA,EAAA;AAC6B,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AAC3D,IAAA,yBAAA,IAAA,KAAA,EAAA;AAA4C,IAAA,iBAAA,EAAA;AAAoC,IAAA,uBAAA,EAAI,EAChF,EACF;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsE,IAAA,OAAA,EAAA,EACrC,IAAA,OAAA,EAAA;;AAE3B,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;AAER,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,KAAA,EAAA;AAC6B,IAAA,iBAAA,IAAA,qBAAA;AAAmB,IAAA,uBAAA;AAChE,IAAA,yBAAA,IAAA,KAAA,EAAA;AAA4C,IAAA,iBAAA,EAAA;AAAqC,IAAA,uBAAA,EAAI,EACjF,EACF,EACF;;;;AA/B4C,IAAA,oBAAA,EAAA;AAAA,IAAA,4BAAA,OAAA,WAAA,kBAAA;AAcA,IAAA,oBAAA,EAAA;AAAA,IAAA,4BAAA,OAAA,WAAA,mBAAA;AAcA,IAAA,oBAAA,EAAA;AAAA,IAAA,4BAAA,OAAA,WAAA,oBAAA;;;;;;AAmDxC,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;;;;;AAPF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACK,IAAA,qBAAA,SAAA,SAAA,+DAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,OAAA,CAAgB;IAAA,CAAA;AAG5B,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA;AACtB,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;;;;;AALK,IAAA,sBAAA,gBAAA,OAAA,gBAAA,OAAA,OAAA,OAAA,aAAA,WAAA,QAAA,KAAA;AACG,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,KAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,gBAAA,OAAA,OAAA,OAAA,aAAA,WAAA,QAAA,KAAA;;;;;AARZ,IAAA,yBAAA,GAAA,OAAA,EAAA,EAC4F,GAAA,OAAA,EAAA;AAExF,IAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,OAAA,EAAA;AASF,IAAA,uBAAA,EAAM;;;;AATkB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA;;;;;AA0BhC,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,OAAA,EAAA;AACF,IAAA,uBAAA;;;;;AAGA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2F,GAAA,OAAA,EAAA;;AAEvF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;AACA,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAqC,IAAA,iBAAA,CAAA;AAAW,IAAA,uBAAA,EAAI,EAChD;;;;AADiC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;;AAoC/B,IAAA,yBAAA,GAAA,OAAA,EAAA,EACkG,GAAA,OAAA,EAAA,EAC9E,GAAA,UAAA,EAAA;AAGd,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,gBAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,aAAA,CAA0B;IAAA,CAAA;;AAEnC,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA,EAAO;AAI1B,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,gBAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,aAAA,CAA4B;IAAA,CAAA;;AAErC,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;AACA,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA,EAAO,EACnB,EACL;;;;;AAeZ,IAAA,yBAAA,GAAA,OAAA,EAAA;;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAA0B,IAAA,uBAAA,EAAO;;;;AAAjC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,cAAA,KAAA,IAAA;;;;;AAOR,IAAA,yBAAA,GAAA,OAAA,EAAA;;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAkC,IAAA,uBAAA,EAAO;;;;AAAzC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,cAAA,aAAA,OAAA;;;;;;AAlFZ,IAAA,yBAAA,GAAA,OAAA,EAAA,EACoH,GAAA,OAAA,EAAA,EAGvE,GAAA,OAAA,EAAA,EACM,GAAA,OAAA,EAAA,EACd,GAAA,OAAA,EAAA;;AAE3B,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;AAER,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,QAAA,EAAA;AAED,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAO,EACH;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,UAAA,EAAA;AAElB,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,YAAA,gBAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,qBAAA,cAAA,EAAA,CAAmC;IAAA,CAAA;;AAE5C,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;AAIR,IAAA,qBAAA,IAAA,gDAAA,IAAA,GAAA,OAAA,EAAA;AAwBF,IAAA,uBAAA,EAAM,EACF;;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAuB,IAAA,MAAA,EAAA;AAE4B,IAAA,iBAAA,EAAA;AAAuC,IAAA,uBAAA;AAGxF,IAAA,yBAAA,IAAA,KAAA,EAAA;AAA8B,IAAA,iBAAA,EAAA;AAAsB,IAAA,uBAAA;AAGpD,IAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,OAAA,EAAA;AAQA,IAAA,oBAAA,IAAA,MAAA,EAAA;AAGA,IAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,OAAA,EAAA;AAQA,IAAA,yBAAA,IAAA,OAAA,EAAA;;AACE,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;AACA,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,EAAA;;AAAqD,IAAA,uBAAA,EAAO,EAC9D,EACF;;;;;AA9EI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,cAAA,oBAAA,WAAA,WAAA,GAAA;AAgBE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,cAAA,QAAA;AA+BuC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,sBAAA,aAAA,CAAA;AAGnB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,cAAA,KAAA;AAG6B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,cAAA,IAAA;AAWA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,cAAA,WAAA;AAYnD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,YAAA,sBAAA,IAAA,GAAA,cAAA,YAAA,UAAA,GAAA,EAAA;;;;;AA3Fd,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,yCAAA,IAAA,IAAA,OAAA,EAAA;AA8FF,IAAA,uBAAA;;;;AA9F8B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,mBAAA;;;;;;AAiG9B,IAAA,yBAAA,GAAA,OAAA,EAAA;;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;AACA,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAmD,IAAA,iBAAA,GAAA,uBAAA;AAAqB,IAAA,uBAAA;AACxE,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkB,GAAA,UAAA,EAAA;AAEd,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,CAAkB;IAAA,CAAA;;AAE3B,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,IAAA,QAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,iBAAA,IAAA,sBAAA;AACF,IAAA,uBAAA,EAAS,EACL;;;;AAXJ,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,qCAAA,mDAAA,GAAA;;;;;;AAeJ,IAAA,yBAAA,GAAA,sCAAA,EAAA;AAGE,IAAA,qBAAA,aAAA,SAAA,yHAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAa,OAAA,wBAAA,MAAA,CAA+B;IAAA,CAAA,EAAC,aAAA,SAAA,2HAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChC,OAAA,iBAAA,CAAkB;IAAA,CAAA;AACjC,IAAA,uBAAA;;;;AAHE,IAAA,qBAAA,cAAA,OAAA,kBAAA;;;;;;AAKF,IAAA,yBAAA,GAAA,uBAAA,EAAA;AAIE,IAAA,qBAAA,mBAAA,SAAA,iGAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAmB,OAAA,kBAAA,MAAA,CAAyB;IAAA,CAAA,EAAC,aAAA,SAAA,6FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAChC,OAAA,eAAA,CAAgB;IAAA,CAAA;AAC/B,IAAA,uBAAA;;;;AAJE,IAAA,qBAAA,cAAA,OAAA,gBAAA,EAA+B,cAAA,OAAA,UAAA;;;ADjQ7B,IAAO,oBAAP,MAAO,mBAAiB;EA+BlB;EA9BV,cAA4B,CAAA;EAC5B,sBAAoC,CAAA;EACpC,UAAU;EACV,QAAQ;EACR,aAA0C;;EAG1C,aAAa;;EAGb,eAAoB;EACpB,kBAAkC;EAClC,mBAAmB;;EAGnB,kBAAkB;EAClB,qBAAwC;EACxC,gBAAgB;EAChB,mBAAsC;EACtC,aAAa;;EAGb,cAAc;IACZ,EAAE,OAAO,QAAQ,OAAO,OAAM;IAC9B,EAAE,OAAO,gBAAgB,OAAO,aAAY;IAC5C,EAAE,OAAO,SAAS,OAAO,QAAO;IAChC,EAAE,OAAO,QAAQ,OAAO,OAAM;;EAGhC,YACU,aAAwB;AAAxB,SAAA,cAAA;EACP;EAGH,gBAAgB,OAAY;AAC1B,UAAM,SAAS,MAAM;AACrB,UAAM,iBAAiB,OAAO,QAAQ,QAAQ;AAC9C,UAAM,eAAe,OAAO,QAAQ,gBAAgB;AAGpD,QAAI,kBAAkB,cAAc;AAClC;IACF;AAGA,SAAK,cAAc,KAAK,YAAY,IAAI,QAAO,iCAC1C,KAD0C;MAE7C,UAAU;MACV;AACF,SAAK,sBAAsB,KAAK,oBAAoB,IAAI,QAAO,iCAC1D,KAD0D;MAE7D,UAAU;MACV;EACJ;EAEA,WAAQ;AACN,SAAK,gBAAe;AACpB,SAAK,eAAc;EACrB;EAEA,kBAAe;AACb,SAAK,UAAU;AACf,SAAK,QAAQ;AAEb,SAAK,YAAY,eAAc,EAAG,UAAU;MAC1C,MAAM,CAAC,aAAiB;AACtB,aAAK,cAAc,SAAS;AAC5B,aAAK,sBAAsB,CAAC,GAAG,KAAK,WAAW;AAC/C,aAAK,UAAU;MACjB;MACA,OAAO,CAAC,UAAc;AACpB,aAAK,QAAQ;AACb,aAAK,UAAU;AACf,gBAAQ,MAAM,+BAA+B,KAAK;MACpD;KACD;EACH;EAEA,iBAAc;AACZ,SAAK,YAAY,wBAAuB,EAAG,UAAU;MACnD,MAAM,CAAC,aAAiB;AACtB,aAAK,aAAa,SAAS;MAC7B;MACA,OAAO,CAAC,UAAc;AACpB,gBAAQ,MAAM,yCAAyC,KAAK;MAC9D;KACD;EACH;EAEA,mBAAgB;AACd,SAAK,mBAAmB;AACxB,SAAK,aAAa;AAClB,SAAK,gBAAgB;EACvB;EAEA,eAAe,YAAsB;AACnC,SAAK,mBAAmB;AACxB,SAAK,aAAa;AAClB,SAAK,gBAAgB;EACvB;EAEA,eAAe,YAAsB;AAEnC,YAAQ,IAAI,qBAAqB,UAAU;EAC7C;EAEA,iBAAiB,YAAsB;AACrC,SAAK,qBAAqB;AAC1B,SAAK,kBAAkB;EACzB;EAEA,mBAAgB;AACd,SAAK,kBAAkB;AACvB,SAAK,qBAAqB;EAC5B;EAEA,wBAAwB,MAAwC;AAC9D,QAAI,CAAC,KAAK;AAAoB;AAE9B,SAAK,YAAY,iBAAiB,KAAK,mBAAmB,EAAE,EAAE,UAAU;MACtE,MAAM,CAAC,aAAiB;AACtB,aAAK,cAAc,KAAK,YAAY,OAAO,QAAM,GAAG,OAAO,KAAK,mBAAoB,EAAE;AACtF,aAAK,sBAAsB,KAAK,oBAAoB,OAAO,QAAM,GAAG,OAAO,KAAK,mBAAoB,EAAE;AACtG,aAAK,iBAAgB;MACvB;MACA,OAAO,CAAC,UAAc;AACpB,aAAK,QAAQ;AACb,gBAAQ,MAAM,+BAA+B,KAAK;MACpD;KACD;EACH;EAEA,iBAAc;AACZ,SAAK,gBAAgB;AACrB,SAAK,mBAAmB;AACxB,SAAK,aAAa;EACpB;EAEA,kBAAkB,YAAsB;AACtC,QAAI,KAAK,YAAY;AACnB,YAAM,QAAQ,KAAK,YAAY,UAAU,QAAM,GAAG,OAAO,WAAW,EAAE;AACtE,UAAI,UAAU,IAAI;AAChB,aAAK,YAAY,KAAK,IAAI;AAC1B,aAAK,sBAAsB,KAAK,oBAAoB,IAAI,QACtD,GAAG,OAAO,WAAW,KAAK,aAAa,EAAE;MAE7C;IACF,OAAO;AACL,WAAK,YAAY,QAAQ,UAAU;AACnC,WAAK,oBAAoB,QAAQ,UAAU;IAC7C;AACA,SAAK,eAAc;EACrB;EAEA,4BAAyB;AACvB,WAAO,KAAK,YAAY,uBAAuB;EACjD;EAEA,2BAAwB;AACtB,WAAO,KAAK,YAAY,sBAAsB;EAChD;EAEA,iBAAc;AACZ,SAAK,kBAAiB;EACxB;EAEA,oBAAiB;AACf,QAAI,CAAC,KAAK,WAAW,KAAI,GAAI;AAC3B,WAAK,sBAAsB,CAAC,GAAG,KAAK,WAAW;IACjD,OAAO;AACL,WAAK,sBAAsB,KAAK,YAAY,OAAO,gBACjD,GAAG,WAAW,UAAU,IAAI,WAAW,SAAS,GAAG,YAAW,EAAG,SAAS,KAAK,WAAW,YAAW,CAAE,KACvG,WAAW,MAAM,YAAW,EAAG,SAAS,KAAK,WAAW,YAAW,CAAE,KACpE,WAAW,MAAM,QAAQ,WAAW,KAAK,KAAK,YAAW,EAAG,SAAS,KAAK,WAAW,YAAW,CAAE,CAAE;IAEzG;AACA,SAAK,gBAAe;EACtB;EAEA,qBAAkB;AAChB,SAAK,mBAAmB,CAAC,KAAK;EAChC;EAEA,WAAW,MAAS;AAClB,SAAK,eAAe;AACpB,SAAK,mBAAmB;AACxB,SAAK,gBAAe;EACtB;EAEA,gBAAa;AACX,SAAK,kBAAkB,KAAK,oBAAoB,QAAQ,SAAS;AACjE,SAAK,gBAAe;EACtB;EAEA,kBAAe;AACb,QAAI,CAAC,KAAK;AAAc;AAExB,SAAK,oBAAoB,KAAK,CAAC,GAAG,MAAK;AACrC,UAAI;AACJ,UAAI;AAEJ,cAAQ,KAAK,aAAa,OAAO;QAC/B,KAAK;AACH,mBAAS,GAAG,EAAE,UAAU,IAAI,EAAE,SAAS,GAAG,YAAW;AACrD,mBAAS,GAAG,EAAE,UAAU,IAAI,EAAE,SAAS,GAAG,YAAW;AACrD;QACF,KAAK;AACH,mBAAS,EAAE,MAAM,YAAW;AAC5B,mBAAS,EAAE,MAAM,YAAW;AAC5B;QACF,KAAK;AACH,mBAAS,IAAI,KAAK,EAAE,UAAU,EAAE,QAAO;AACvC,mBAAS,IAAI,KAAK,EAAE,UAAU,EAAE,QAAO;AACvC;QACF,KAAK;AACH,oBAAU,EAAE,MAAM,QAAQ,IAAI,YAAW;AACzC,oBAAU,EAAE,MAAM,QAAQ,IAAI,YAAW;AACzC;QACF;AACE,mBAAS,GAAG,EAAE,UAAU,IAAI,EAAE,SAAS,GAAG,YAAW;AACrD,mBAAS,GAAG,EAAE,UAAU,IAAI,EAAE,SAAS,GAAG,YAAW;MACzD;AAEA,UAAI,SAAS,QAAQ;AACnB,eAAO,KAAK,oBAAoB,QAAQ,KAAK;MAC/C,WAAW,SAAS,QAAQ;AAC1B,eAAO,KAAK,oBAAoB,QAAQ,IAAI;MAC9C,OAAO;AACL,eAAO;MACT;IACF,CAAC;EACH;EAEA,sBAAsB,YAAsB;AAC1C,WAAO,GAAG,WAAW,UAAU,IAAI,WAAW,SAAS;EACzD;EAEA,sBAAsB,YAAsB;AAC1C,WAAO,GAAG,WAAW,WAAW,OAAO,CAAC,CAAC,GAAG,WAAW,UAAU,OAAO,CAAC,CAAC,GAAG,YAAW;EAC1F;EAEA,qBAAqB,cAAoB;AACvC,SAAK,cAAc,KAAK,YAAY,IAAI,QAAO,iCAC1C,KAD0C;MAE7C,UAAU,GAAG,OAAO,eAAe,CAAC,GAAG,WAAW;MAClD;AACF,SAAK,sBAAsB,KAAK,oBAAoB,IAAI,QAAO,iCAC1D,KAD0D;MAE7D,UAAU,GAAG,OAAO,eAAe,CAAC,GAAG,WAAW;MAClD;EACJ;;qCA3PW,oBAAiB,4BAAA,WAAA,CAAA;EAAA;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,cAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAAjB,MAAA,qBAAA,SAAA,SAAA,2CAAA,QAAA;AAAA,eAAA,IAAA,gBAAA,MAAA;MAAuB,GAAA,OAAA,2BAAA;;;;ACdpC,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAwD,GAAA,OAAA,CAAA,EAEyB,GAAA,KAAA,EACxE,GAAA,MAAA,CAAA;AAC+C,MAAA,iBAAA,GAAA,cAAA;AAAY,MAAA,uBAAA;AAC9D,MAAA,yBAAA,GAAA,KAAA,CAAA;AAAmC,MAAA,iBAAA,GAAA,mEAAA;AAAiE,MAAA,uBAAA,EAAI;AAE1G,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAsD,GAAA,UAAA,CAAA;AAC5C,MAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,eAAS,IAAA,iBAAA;MAAkB,CAAA;;AACjC,MAAA,yBAAA,GAAA,OAAA,CAAA;AACE,MAAA,oBAAA,IAAA,QAAA,CAAA;AACF,MAAA,uBAAA;AACA,MAAA,iBAAA,IAAA,sBAAA;AACF,MAAA,uBAAA,EAAS,EACL;AAIR,MAAA,qBAAA,IAAA,mCAAA,IAAA,GAAA,OAAA,CAAA;;AA6CA,MAAA,yBAAA,IAAA,OAAA,CAAA,EAA+E,IAAA,OAAA,EAAA,EAEqB,IAAA,OAAA,EAAA;;AAG9F,MAAA,yBAAA,IAAA,OAAA,EAAA;AACE,MAAA,oBAAA,IAAA,QAAA,EAAA;AACF,MAAA,uBAAA;;AACA,MAAA,yBAAA,IAAA,SAAA,EAAA;AAIE,MAAA,2BAAA,iBAAA,SAAA,2DAAA,QAAA;AAAA,QAAA,6BAAA,IAAA,YAAA,MAAA,MAAA,IAAA,aAAA;AAAA,eAAA;MAAA,CAAA;AACA,MAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,eAAS,IAAA,eAAA;MAAgB,CAAA;AAL3B,MAAA,uBAAA,EAK+B;AAIjC,MAAA,yBAAA,IAAA,OAAA,EAAA;AAAsB,MAAA,qBAAA,SAAA,SAAA,iDAAA,QAAA;AAAA,eAAS,OAAA,gBAAA;MAAwB,CAAA;AACrD,MAAA,yBAAA,IAAA,UAAA,EAAA;AAEE,MAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,eAAS,IAAA,mBAAA;MAAoB,CAAA;AAG7B,MAAA,yBAAA,IAAA,OAAA,EAAA,EAA+C,IAAA,QAAA,EAAA;AAE3C,MAAA,iBAAA,EAAA;AACF,MAAA,uBAAA;;AACA,MAAA,yBAAA,IAAA,OAAA,EAAA;AAGE,MAAA,oBAAA,IAAA,QAAA,EAAA;AACF,MAAA,uBAAA,EAAM,EACF;AAIR,MAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA;AAcF,MAAA,uBAAA;;AAGA,MAAA,yBAAA,IAAA,UAAA,EAAA;AACE,MAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,eAAS,IAAA,cAAA;MAAe,CAAA;;AAExB,MAAA,yBAAA,IAAA,OAAA,EAAA;AACE,MAAA,oBAAA,IAAA,QAAA,EAAA;AAEF,MAAA,uBAAA,EAAM,EACC,EACL;AAIR,MAAA,qBAAA,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA,EAAoE,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA,EAKuB,IAAA,mCAAA,GAAA,GAAA,OAAA,EAAA,EAUR,IAAA,mCAAA,IAAA,GAAA,OAAA,EAAA,EAkGC,IAAA,kEAAA,GAAA,GAAA,sCAAA,EAAA,EAyBjD,IAAA,mDAAA,GAAA,GAAA,uBAAA,EAAA;AAUrC,MAAA,uBAAA;;;AAlQ2D,MAAA,oBAAA,EAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,UAAA;AAyDjD,MAAA,oBAAA,CAAA;AAAA,MAAA,2BAAA,WAAA,IAAA,UAAA;AAUA,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,mBAAA,IAAA,gBAAA;AAGI,MAAA,oBAAA,CAAA;AAAA,MAAA,6BAAA,KAAA,IAAA,eAAA,cAAA,IAAA,aAAA,QAAA,WAAA,GAAA;AAGG,MAAA,oBAAA;AAAA,MAAA,sBAAA,cAAA,IAAA,gBAAA;AAQH,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,gBAAA;AAsBE,MAAA,oBAAA,CAAA;;AAOR,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,OAAA;AAKA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA,CAAA,IAAA,OAAA;AAUA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,OAAA;AAkGA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,WAAA,IAAA,oBAAA,WAAA,CAAA;AAsBH,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,eAAA;AAOA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,aAAA;;oBDlQO,cAAY,SAAA,MAAA,UAAE,aAAW,sBAAA,iBAAA,SAAE,sCAAsC,sBAAsB,GAAA,QAAA,CAAA,09FAAA,EAAA,CAAA;;;sEAEtF,mBAAiB,CAAA;UAP7B;uBACW,iBAAe,YAGb,MAAI,SACP,CAAC,cAAc,aAAa,sCAAsC,sBAAsB,GAAC,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,QAAA,CAAA,uwEAAA,EAAA,CAAA;uCAqClG,iBAAe,CAAA;UADd;WAAa,kBAAkB,CAAC,QAAQ,CAAC;;;;6EAlC/B,mBAAiB,EAAA,WAAA,qBAAA,UAAA,kDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEV9B,IAAM,SAAiB;EACrB;IACE,MAAM;IACN,WAAW;;;AAQT,IAAO,qBAAP,MAAO,oBAAkB;;qCAAlB,qBAAkB;EAAA;wEAAlB,oBAAkB,CAAA;4EAHnB,aAAa,SAAS,MAAM,GAC5B,YAAY,EAAA,CAAA;;;sEAEX,oBAAkB,CAAA;UAJ9B;WAAS;MACR,SAAS,CAAC,aAAa,SAAS,MAAM,CAAC;MACvC,SAAS,CAAC,YAAY;KACvB;;;;;ACKK,IAAO,cAAP,MAAO,aAAW;;qCAAX,cAAW;EAAA;wEAAX,aAAW,CAAA;;IARpB;IACA;IACA;IACA;IACA;IACA;EAAiB,EAAA,CAAA;;;sEAGR,aAAW,CAAA;UAXvB;WAAS;MACR,cAAc,CAAA;MACd,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;;KAEH;;;",
  "names": []
}
