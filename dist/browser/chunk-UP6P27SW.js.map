{
  "version": 3,
  "sources": ["src/app/inventory/components/analytics/analytics.component.ts", "src/app/inventory/components/analytics/analytics.component.html"],
  "sourcesContent": ["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InventoryAnalyticsService, DashboardData, AbcAnalysisItem } from '../../../core/services/inventory-analytics.service';\r\nimport { Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-analytics',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './analytics.component.html',\r\n  styleUrls: ['./analytics.component.scss']\r\n})\r\nexport class AnalyticsComponent implements OnInit, OnDestroy {\r\n  private destroy$ = new Subject<void>();\r\n\r\n  activeTab = 'overview';\r\n  selectedPeriod = '6months';\r\n\r\n  // Loading and error states\r\n  loading = false;\r\n  error: string | null = null;\r\n\r\n  // Real-time analytics data from API\r\n  dashboardData: DashboardData | null = null;\r\n  abcAnalysisData: AbcAnalysisItem[] = [];\r\n  overviewData: DashboardData | null = null;\r\n\r\n  // ABC Analysis summary\r\n  abcSummary = {\r\n    classA: { count: 0, value: 0, percentage: 0 },\r\n    classB: { count: 0, value: 0, percentage: 0 },\r\n    classC: { count: 0, value: 0, percentage: 0 }\r\n  };\r\n\r\n  // Sample data for different periods (for demo purposes)\r\n  periodData = {\r\n    '6months': {\r\n      turnover: '2.4x',\r\n      turnoverChange: '+12.5% from last period',\r\n      carryingCost: 'AED 15,000',\r\n      deadStockValue: 'AED 8,500',\r\n      deadStockItems: '23 items',\r\n      avgDays: '45 days'\r\n    },\r\n    '3months': {\r\n      turnover: '2.1x',\r\n      turnoverChange: '+8.2% from last period',\r\n      carryingCost: 'AED 12,500',\r\n      deadStockValue: 'AED 6,200',\r\n      deadStockItems: '18 items',\r\n      avgDays: '42 days'\r\n    },\r\n    '1month': {\r\n      turnover: '1.8x',\r\n      turnoverChange: '+5.1% from last period',\r\n      carryingCost: 'AED 10,000',\r\n      deadStockValue: 'AED 4,800',\r\n      deadStockItems: '15 items',\r\n      avgDays: '38 days'\r\n    },\r\n    '1year': {\r\n      turnover: '2.8x',\r\n      turnoverChange: '+18.7% from last period',\r\n      carryingCost: 'AED 18,500',\r\n      deadStockValue: 'AED 9,200',\r\n      deadStockItems: '28 items',\r\n      avgDays: '52 days'\r\n    }\r\n  };\r\n\r\n  constructor(private analyticsService: InventoryAnalyticsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadAllAnalytics();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  loadAllAnalytics(): void {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    // Load all three analytics endpoints\r\n    Promise.all([\r\n      this.loadInventoryAnalytics(),\r\n      this.loadAbcAnalysis(),\r\n      this.loadDashboardOverview()\r\n    ]).finally(() => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  loadInventoryAnalytics(): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      this.analyticsService.getInventoryAnalytics()\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe({\r\n          next: (response) => {\r\n            if (response.success) {\r\n              this.dashboardData = response.data;\r\n            }\r\n            resolve();\r\n          },\r\n          error: (err) => {\r\n            console.error('Error loading inventory analytics:', err);\r\n            resolve();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  loadAbcAnalysis(): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      this.analyticsService.getAbcAnalysis()\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe({\r\n          next: (response) => {\r\n            if (response.success) {\r\n              this.abcAnalysisData = response.data;\r\n              this.calculateAbcSummary();\r\n            }\r\n            resolve();\r\n          },\r\n          error: (err) => {\r\n            console.error('Error loading ABC analysis:', err);\r\n            resolve();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  loadDashboardOverview(): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      this.analyticsService.getDashboardData()\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe({\r\n          next: (response) => {\r\n            if (response.success) {\r\n              this.overviewData = response.data;\r\n            }\r\n            resolve();\r\n          },\r\n          error: (err) => {\r\n            console.error('Error loading dashboard overview:', err);\r\n            resolve();\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  calculateAbcSummary(): void {\r\n    if (!this.abcAnalysisData.length) return;\r\n\r\n    const classA = this.abcAnalysisData.filter(item => item.class === 'A');\r\n    const classB = this.abcAnalysisData.filter(item => item.class === 'B');\r\n    const classC = this.abcAnalysisData.filter(item => item.class === 'C');\r\n\r\n    const totalValue = this.abcAnalysisData.reduce((sum, item) => sum + item.value, 0);\r\n\r\n    this.abcSummary.classA = {\r\n      count: classA.length,\r\n      value: classA.reduce((sum, item) => sum + item.value, 0),\r\n      percentage: totalValue > 0 ? (classA.reduce((sum, item) => sum + item.value, 0) / totalValue) * 100 : 0\r\n    };\r\n\r\n    this.abcSummary.classB = {\r\n      count: classB.length,\r\n      value: classB.reduce((sum, item) => sum + item.value, 0),\r\n      percentage: totalValue > 0 ? (classB.reduce((sum, item) => sum + item.value, 0) / totalValue) * 100 : 0\r\n    };\r\n\r\n    this.abcSummary.classC = {\r\n      count: classC.length,\r\n      value: classC.reduce((sum, item) => sum + item.value, 0),\r\n      percentage: totalValue > 0 ? (classC.reduce((sum, item) => sum + item.value, 0) / totalValue) * 100 : 0\r\n    };\r\n  }\r\n\r\n  onTabChange(tab: string): void {\r\n    this.activeTab = tab;\r\n    console.log('Switched to tab:', tab);\r\n  }\r\n\r\n  onPeriodChange(event: Event): void {\r\n    const target = event.target as HTMLSelectElement;\r\n    if (target && target.value) {\r\n      this.selectedPeriod = target.value;\r\n      console.log('Changed period to:', target.value);\r\n    }\r\n  }\r\n\r\n  exportReport(): void {\r\n    console.log('Exporting analytics report for period:', this.selectedPeriod);\r\n    // Here you would implement the actual export functionality\r\n  }\r\n\r\n  getCurrentData() {\r\n    return this.periodData[this.selectedPeriod as keyof typeof this.periodData];\r\n  }\r\n\r\n  refreshData(): void {\r\n    this.loadAllAnalytics();\r\n  }\r\n\r\n  formatCurrency(amount: number): string {\r\n    return `AED ${amount.toLocaleString()}`;\r\n  }\r\n\r\n  getAbcClassColor(abcClass: string): string {\r\n    switch (abcClass) {\r\n      case 'A': return 'bg-green-100 text-green-800';\r\n      case 'B': return 'bg-yellow-100 text-yellow-800';\r\n      case 'C': return 'bg-blue-100 text-blue-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  }\r\n}\r\n", "<div class=\"analytics\">\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading\" class=\"loading-state\">\r\n    <div class=\"loading-spinner\"></div>\r\n    <p>Loading inventory analytics...</p>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error && !loading\" class=\"error-state\">\r\n    <svg class=\"w-12 h-12 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\r\n    </svg>\r\n    <h3 class=\"error-title\">{{ error }}</h3>\r\n    <button class=\"btn btn-primary\" (click)=\"refreshData()\">\r\n      <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\r\n      </svg>\r\n      Retry\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Analytics Content -->\r\n  <div *ngIf=\"!loading && !error\">\r\n    <!-- Header Section -->\r\n    <div class=\"analytics-header\">\r\n      <div class=\"header-left\">\r\n        <h2 class=\"main-title\">Inventory Analytics</h2>\r\n        <p class=\"subtitle\">Advanced insights and performance metrics</p>\r\n      </div>\r\n      <div class=\"header-right\">\r\n        <div class=\"period-dropdown\">\r\n          <select class=\"period-select\" [value]=\"selectedPeriod\" (change)=\"onPeriodChange($event)\">\r\n            <option value=\"6months\">Last 6 Months</option>\r\n            <option value=\"3months\">Last 3 Months</option>\r\n            <option value=\"1month\">Last Month</option>\r\n            <option value=\"1year\">Last Year</option>\r\n          </select>\r\n          <svg class=\"dropdown-arrow\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n          </svg>\r\n        </div>\r\n        <button class=\"refresh-btn\" (click)=\"refreshData()\" title=\"Refresh Data\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\r\n          </svg>\r\n        </button>\r\n        <button class=\"export-btn\" (click)=\"exportReport()\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n          </svg>\r\n          Export Report\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Navigation Tabs -->\r\n    <div class=\"analytics-tabs\">\r\n      <button class=\"tab-button\" [class.active]=\"activeTab === 'overview'\" (click)=\"onTabChange('overview')\">\r\n        <span class=\"tab-text\">Overview</span>\r\n      </button>\r\n      <button class=\"tab-button\" [class.active]=\"activeTab === 'turnover'\" (click)=\"onTabChange('turnover')\">\r\n        <span class=\"tab-text\">Turnover Analysis</span>\r\n      </button>\r\n      <button class=\"tab-button\" [class.active]=\"activeTab === 'abc'\" (click)=\"onTabChange('abc')\">\r\n        <span class=\"tab-text\">ABC Analysis</span>\r\n      </button>\r\n      <button class=\"tab-button\" [class.active]=\"activeTab === 'demand'\" (click)=\"onTabChange('demand')\">\r\n        <span class=\"tab-text\">Demand Forecast</span>\r\n      </button>\r\n      <button class=\"tab-button\" [class.active]=\"activeTab === 'aging'\" (click)=\"onTabChange('aging')\">\r\n        <span class=\"tab-text\">Stock Aging</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Overview Tab Content -->\r\n    <div *ngIf=\"activeTab === 'overview'\" class=\"tab-content\">\r\n      <!-- Real-time Analytics Cards -->\r\n      <div class=\"analytics-cards\">\r\n        <!-- Inventory Analytics Card -->\r\n        <div class=\"analytics-card\" *ngIf=\"dashboardData\">\r\n          <div class=\"card-header\">\r\n            <h3 class=\"card-title\">Inventory Analytics</h3>\r\n            <span class=\"card-subtitle\">Real-time data from /api/inventory/analytics/dashboard</span>\r\n          </div>\r\n          <div class=\"card-metrics\">\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Total Value:</span>\r\n              <span class=\"metric-value\">{{ formatCurrency(dashboardData.total_value) }}</span>\r\n            </div>\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Total Parts:</span>\r\n              <span class=\"metric-value\">{{ dashboardData.total_parts.toLocaleString() }}</span>\r\n            </div>\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Low Stock:</span>\r\n              <span class=\"metric-value warning\">{{ dashboardData.low_stock_count.toLocaleString() }}</span>\r\n            </div>\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Out of Stock:</span>\r\n              <span class=\"metric-value danger\">{{ dashboardData.out_of_stock_count.toLocaleString() }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Dashboard Overview Card -->\r\n        <div class=\"analytics-card\" *ngIf=\"overviewData\">\r\n          <div class=\"card-header\">\r\n            <h3 class=\"card-title\">Dashboard Overview</h3>\r\n            <span class=\"card-subtitle\">Data from /api/inventory/dashboard/overview</span>\r\n          </div>\r\n          <div class=\"card-metrics\">\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Total Value:</span>\r\n              <span class=\"metric-value\">{{ formatCurrency(overviewData.total_value) }}</span>\r\n            </div>\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Total Parts:</span>\r\n              <span class=\"metric-value\">{{ overviewData.total_parts.toLocaleString() }}</span>\r\n            </div>\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Low Stock:</span>\r\n              <span class=\"metric-value warning\">{{ overviewData.low_stock_count.toLocaleString() }}</span>\r\n            </div>\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Out of Stock:</span>\r\n              <span class=\"metric-value danger\">{{ overviewData.out_of_stock_count.toLocaleString() }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- ABC Analysis Summary Card -->\r\n        <div class=\"analytics-card\" *ngIf=\"abcAnalysisData.length > 0\">\r\n          <div class=\"card-header\">\r\n            <h3 class=\"card-title\">ABC Analysis Summary</h3>\r\n            <span class=\"card-subtitle\">Data from /api/inventory/analytics/abc-analysis</span>\r\n          </div>\r\n          <div class=\"card-metrics\">\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Class A Items:</span>\r\n              <span class=\"metric-value\">{{ abcSummary.classA.count }} ({{ abcSummary.classA.percentage.toFixed(1) }}%)</span>\r\n            </div>\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Class B Items:</span>\r\n              <span class=\"metric-value\">{{ abcSummary.classB.count }} ({{ abcSummary.classB.percentage.toFixed(1) }}%)</span>\r\n            </div>\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Class C Items:</span>\r\n              <span class=\"metric-value\">{{ abcSummary.classC.count }} ({{ abcSummary.classC.percentage.toFixed(1) }}%)</span>\r\n            </div>\r\n            <div class=\"metric-item\">\r\n              <span class=\"metric-label\">Total Items:</span>\r\n              <span class=\"metric-value\">{{ abcAnalysisData.length }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- ABC Analysis Table -->\r\n      <div class=\"abc-table-section\" *ngIf=\"abcAnalysisData.length > 0\">\r\n        <h3 class=\"section-title\">ABC Analysis Details</h3>\r\n        <div class=\"table-container\">\r\n          <table class=\"analytics-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Part ID</th>\r\n                <th>Part Name</th>\r\n                <th>Value</th>\r\n                <th>Cumulative Ratio</th>\r\n                <th>ABC Class</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let item of abcAnalysisData.slice(0, 10)\">\r\n                <td>{{ item.part_id }}</td>\r\n                <td>{{ item.name }}</td>\r\n                <td>{{ formatCurrency(item.value) }}</td>\r\n                <td>{{ (item.cumulative_ratio * 100).toFixed(2) }}%</td>\r\n                <td>\r\n                  <span class=\"abc-badge\" [class]=\"getAbcClassColor(item.class)\">\r\n                    {{ item.class }}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div class=\"table-footer\" *ngIf=\"abcAnalysisData.length > 10\">\r\n            <p>Showing first 10 items of {{ abcAnalysisData.length }} total items</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Turnover Analysis Tab Content -->\r\n    <div *ngIf=\"activeTab === 'turnover'\" class=\"tab-content\">\r\n      <!-- Metric Cards Row -->\r\n      <div class=\"metric-cards-row\">\r\n        <div class=\"metric-card turnover\">\r\n          <div class=\"card-content\">\r\n            <div class=\"metric-value\">{{ getCurrentData().turnover }}</div>\r\n            <div class=\"metric-label\">Inventory Turnover</div>\r\n            <div class=\"metric-change positive\">{{ getCurrentData().turnoverChange }}</div>\r\n          </div>\r\n          <svg class=\"metric-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\"></path>\r\n          </svg>\r\n        </div>\r\n\r\n        <div class=\"metric-card carrying-cost\">\r\n          <div class=\"card-content\">\r\n            <div class=\"metric-value\">{{ getCurrentData().carryingCost }}</div>\r\n            <div class=\"metric-label\">Carrying Cost</div>\r\n            <div class=\"metric-change\">Monthly holding cost</div>\r\n          </div>\r\n          <svg class=\"metric-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"></path>\r\n          </svg>\r\n        </div>\r\n\r\n        <div class=\"metric-card dead-stock\">\r\n          <div class=\"card-content\">\r\n            <div class=\"metric-value warning\">{{ getCurrentData().deadStockValue }}</div>\r\n            <div class=\"metric-label\">Dead Stock Value</div>\r\n            <div class=\"metric-change\">{{ getCurrentData().deadStockItems }}</div>\r\n          </div>\r\n          <svg class=\"metric-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\r\n          </svg>\r\n        </div>\r\n\r\n        <div class=\"metric-card avg-days\">\r\n          <div class=\"card-content\">\r\n            <div class=\"metric-value\">{{ getCurrentData().avgDays }}</div>\r\n            <div class=\"metric-label\">Avg Days on Hand</div>\r\n            <div class=\"metric-change\">Average inventory age</div>\r\n          </div>\r\n          <svg class=\"metric-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Charts Section -->\r\n      <div class=\"charts-section\">\r\n        <!-- Left Chart Panel -->\r\n        <div class=\"chart-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3 class=\"panel-title\">Inventory Turnover by Category</h3>\r\n            <p class=\"panel-subtitle\">How quickly inventory moves across categories</p>\r\n          </div>\r\n          <div class=\"chart-container\">\r\n            <div class=\"chart-placeholder\">\r\n              <div class=\"chart-grid\">\r\n                <div class=\"y-axis\">\r\n                  <span>4</span>\r\n                  <span>3</span>\r\n                  <span>2</span>\r\n                  <span>1</span>\r\n                  <span>0</span>\r\n                </div>\r\n                <div class=\"chart-area\">\r\n                  <div class=\"grid-lines\">\r\n                    <div class=\"grid-line\"></div>\r\n                    <div class=\"grid-line\"></div>\r\n                    <div class=\"grid-line\"></div>\r\n                    <div class=\"grid-line\"></div>\r\n                    <div class=\"grid-line\"></div>\r\n                  </div>\r\n                  <div class=\"x-axis\">\r\n                    <span>News</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Right Chart Panel -->\r\n        <div class=\"chart-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3 class=\"panel-title\">Monthly Turnover Trend</h3>\r\n            <p class=\"panel-subtitle\">Turnover ratio over time</p>\r\n          </div>\r\n          <div class=\"chart-container\">\r\n            <div class=\"line-chart\">\r\n              <div class=\"y-axis\">\r\n                <span>3.6</span>\r\n                <span>2.7</span>\r\n                <span>1.8</span>\r\n                <span>0.9</span>\r\n                <span>0</span>\r\n              </div>\r\n              <div class=\"chart-area\">\r\n                <div class=\"grid-lines\">\r\n                  <div class=\"grid-line\"></div>\r\n                  <div class=\"grid-line\"></div>\r\n                  <div class=\"grid-line\"></div>\r\n                  <div class=\"grid-line\"></div>\r\n                  <div class=\"grid-line\"></div>\r\n                </div>\r\n                <svg class=\"trend-line\" viewBox=\"0 0 400 200\" preserveAspectRatio=\"none\">\r\n                  <path d=\"M0,40 L67,160 L133,80 L200,120 L267,60 L333,100 L400,80\" \r\n                        stroke=\"#0d9488\" \r\n                        stroke-width=\"3\" \r\n                        fill=\"none\" \r\n                        stroke-linecap=\"round\" \r\n                        stroke-linejoin=\"round\"/>\r\n                  <circle cx=\"0\" cy=\"40\" r=\"4\" fill=\"#0d9488\"/>\r\n                  <circle cx=\"67\" cy=\"160\" r=\"4\" fill=\"#0d9488\"/>\r\n                  <circle cx=\"133\" cy=\"80\" r=\"4\" fill=\"#0d9488\"/>\r\n                  <circle cx=\"200\" cy=\"120\" r=\"4\" fill=\"#0d9488\"/>\r\n                  <circle cx=\"267\" cy=\"60\" r=\"4\" fill=\"#0d9488\"/>\r\n                  <circle cx=\"333\" cy=\"100\" r=\"4\" fill=\"#0d9488\"/>\r\n                  <circle cx=\"400\" cy=\"80\" r=\"4\" fill=\"#0d9488\"/>\r\n                </svg>\r\n                <div class=\"x-axis\">\r\n                  <span>Mar</span>\r\n                  <span>Apr</span>\r\n                  <span>May</span>\r\n                  <span>Jun</span>\r\n                  <span>Jul</span>\r\n                  <span>Aug</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Other Tab Contents -->\r\n    <div *ngIf=\"activeTab === 'abc'\" class=\"tab-content\">\r\n      <div class=\"tab-placeholder\">\r\n        <h3>ABC Analysis</h3>\r\n        <p>This tab shows detailed ABC analysis. Switch to Overview tab to see the ABC data.</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"activeTab === 'demand'\" class=\"tab-content\">\r\n      <div class=\"tab-placeholder\">\r\n        <h3>Demand Forecast</h3>\r\n        <p>Demand forecasting analytics will be implemented here.</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"activeTab === 'aging'\" class=\"tab-content\">\r\n      <div class=\"tab-placeholder\">\r\n        <h3>Stock Aging</h3>\r\n        <p>Stock aging analysis will be implemented here.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Voice Assistant Button -->\r\n  <button class=\"voice-assistant\" (click)=\"refreshData()\" title=\"Refresh Data\">\r\n    <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\r\n    </svg>\r\n  </button>\r\n</div>\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEE,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,OAAA,CAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,gCAAA;AAA8B,IAAA,uBAAA,EAAI;;;;;;AAIvC,IAAA,yBAAA,GAAA,OAAA,CAAA;;AACE,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,EAAA;AACF,IAAA,uBAAA;;AACA,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAwB,IAAA,iBAAA,CAAA;AAAW,IAAA,uBAAA;AACnC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAgC,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;;AACpD,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,QAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,iBAAA,GAAA,SAAA;AACF,IAAA,uBAAA,EAAS;;;;AANe,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAmEpB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkD,GAAA,OAAA,EAAA,EACvB,GAAA,MAAA,EAAA;AACA,IAAA,iBAAA,GAAA,qBAAA;AAAmB,IAAA,uBAAA;AAC1C,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA4B,IAAA,iBAAA,GAAA,wDAAA;AAAsD,IAAA,uBAAA,EAAO;AAE3F,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0B,GAAA,OAAA,EAAA,EACC,GAAA,QAAA,EAAA;AACI,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AACvC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAA+C,IAAA,uBAAA,EAAO;AAEnF,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,QAAA,EAAA;AACI,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA;AACvC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAAgD,IAAA,uBAAA,EAAO;AAEpF,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,QAAA,EAAA;AACI,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;AACrC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAmC,IAAA,iBAAA,EAAA;AAAoD,IAAA,uBAAA,EAAO;AAEhG,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,QAAA,EAAA;AACI,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AACxC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAkC,IAAA,iBAAA,EAAA;AAAuD,IAAA,uBAAA,EAAO,EAC5F,EACF;;;;AAdyB,IAAA,oBAAA,EAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,OAAA,cAAA,WAAA,CAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,YAAA,eAAA,CAAA;AAIQ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,gBAAA,eAAA,CAAA;AAID,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,mBAAA,eAAA,CAAA;;;;;AAMxC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiD,GAAA,OAAA,EAAA,EACtB,GAAA,MAAA,EAAA;AACA,IAAA,iBAAA,GAAA,oBAAA;AAAkB,IAAA,uBAAA;AACzC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA4B,IAAA,iBAAA,GAAA,6CAAA;AAA2C,IAAA,uBAAA,EAAO;AAEhF,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0B,GAAA,OAAA,EAAA,EACC,GAAA,QAAA,EAAA;AACI,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AACvC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAA8C,IAAA,uBAAA,EAAO;AAElF,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,QAAA,EAAA;AACI,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA;AACvC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAA+C,IAAA,uBAAA,EAAO;AAEnF,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,QAAA,EAAA;AACI,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;AACrC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAmC,IAAA,iBAAA,EAAA;AAAmD,IAAA,uBAAA,EAAO;AAE/F,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,QAAA,EAAA;AACI,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AACxC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAkC,IAAA,iBAAA,EAAA;AAAsD,IAAA,uBAAA,EAAO,EAC3F,EACF;;;;AAdyB,IAAA,oBAAA,EAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,OAAA,aAAA,WAAA,CAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,YAAA,eAAA,CAAA;AAIQ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,gBAAA,eAAA,CAAA;AAID,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,mBAAA,eAAA,CAAA;;;;;AAMxC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+D,GAAA,OAAA,EAAA,EACpC,GAAA,MAAA,EAAA;AACA,IAAA,iBAAA,GAAA,sBAAA;AAAoB,IAAA,uBAAA;AAC3C,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA4B,IAAA,iBAAA,GAAA,iDAAA;AAA+C,IAAA,uBAAA,EAAO;AAEpF,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0B,GAAA,OAAA,EAAA,EACC,GAAA,QAAA,EAAA;AACI,IAAA,iBAAA,GAAA,gBAAA;AAAc,IAAA,uBAAA;AACzC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAA8E,IAAA,uBAAA,EAAO;AAElH,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,QAAA,EAAA;AACI,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AACzC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAA8E,IAAA,uBAAA,EAAO;AAElH,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,QAAA,EAAA;AACI,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AACzC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAA8E,IAAA,uBAAA,EAAO;AAElH,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,QAAA,EAAA;AACI,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA;AACvC,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAA4B,IAAA,uBAAA,EAAO,EAC1D,EACF;;;;AAdyB,IAAA,oBAAA,EAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,WAAA,OAAA,OAAA,MAAA,OAAA,WAAA,OAAA,WAAA,QAAA,CAAA,GAAA,IAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,WAAA,OAAA,OAAA,MAAA,OAAA,WAAA,OAAA,WAAA,QAAA,CAAA,GAAA,IAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,WAAA,OAAA,OAAA,MAAA,OAAA,WAAA,OAAA,WAAA,QAAA,CAAA,GAAA,IAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,MAAA;;;;;AAqB3B,IAAA,yBAAA,GAAA,IAAA,EAAsD,GAAA,IAAA;AAChD,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA;AACtB,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA;AACnB,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,CAAA;AAAgC,IAAA,uBAAA;AACpC,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA;AACnD,IAAA,yBAAA,GAAA,IAAA,EAAI,IAAA,QAAA,EAAA;AAEA,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAO,EACJ;;;;;AARD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,OAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,IAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,QAAA,KAAA,CAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,mBAAA,KAAA,QAAA,CAAA,GAAA,GAAA;AAEsB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,iBAAA,QAAA,KAAA,CAAA;AACtB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,OAAA,GAAA;;;;;AAMV,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8D,GAAA,GAAA;AACzD,IAAA,iBAAA,CAAA;AAAkE,IAAA,uBAAA,EAAI;;;;AAAtE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,8BAAA,OAAA,gBAAA,QAAA,cAAA;;;;;AA5BT,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkE,GAAA,MAAA,EAAA;AACtC,IAAA,iBAAA,GAAA,sBAAA;AAAoB,IAAA,uBAAA;AAC9C,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA6B,GAAA,SAAA,EAAA,EACI,GAAA,OAAA,EACtB,GAAA,IAAA,EACD,GAAA,IAAA;AACE,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;AACX,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA;AACb,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA;AACT,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,uBAAA;AACpB,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA,EAAK,EACf;AAEP,IAAA,yBAAA,IAAA,OAAA;AACE,IAAA,qBAAA,IAAA,sDAAA,IAAA,GAAA,MAAA,EAAA;AAWF,IAAA,uBAAA,EAAQ;AAEV,IAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA,EAAM;;;;AAhBqB,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,gBAAA,MAAA,GAAA,EAAA,CAAA;AAaE,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,gBAAA,SAAA,EAAA;;;;;AA9GjC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0D,GAAA,OAAA,EAAA;AAItD,IAAA,qBAAA,GAAA,gDAAA,IAAA,GAAA,OAAA,EAAA,EAAkD,GAAA,gDAAA,IAAA,GAAA,OAAA,EAAA,EA0BD,GAAA,gDAAA,IAAA,GAAA,OAAA,EAAA;AAkDnD,IAAA,uBAAA;AAGA,IAAA,qBAAA,GAAA,gDAAA,IAAA,GAAA,OAAA,EAAA;AAgCF,IAAA,uBAAA;;;;AA/GiC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AA0BA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AA0BA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,gBAAA,SAAA,CAAA;AA2BC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,gBAAA,SAAA,CAAA;;;;;AAmClC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0D,GAAA,OAAA,EAAA,EAE1B,GAAA,OAAA,EAAA,EACM,GAAA,OAAA,EAAA,EACN,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AAA+B,IAAA,uBAAA;AACzD,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA0B,IAAA,iBAAA,GAAA,oBAAA;AAAkB,IAAA,uBAAA;AAC5C,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAoC,IAAA,iBAAA,CAAA;AAAqC,IAAA,uBAAA,EAAM;;AAEjF,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAuC,IAAA,OAAA,EAAA,EACX,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AAAmC,IAAA,uBAAA;AAC7D,IAAA,yBAAA,IAAA,OAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AACvC,IAAA,yBAAA,IAAA,OAAA,EAAA;AAA2B,IAAA,iBAAA,IAAA,sBAAA;AAAoB,IAAA,uBAAA,EAAM;;AAEvD,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoC,IAAA,OAAA,EAAA,EACR,IAAA,OAAA,EAAA;AACU,IAAA,iBAAA,EAAA;AAAqC,IAAA,uBAAA;AACvE,IAAA,yBAAA,IAAA,OAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,uBAAA;AAC1C,IAAA,yBAAA,IAAA,OAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAAqC,IAAA,uBAAA,EAAM;;AAExE,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAkC,IAAA,OAAA,EAAA,EACN,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AAA8B,IAAA,uBAAA;AACxD,IAAA,yBAAA,IAAA,OAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,uBAAA;AAC1C,IAAA,yBAAA,IAAA,OAAA,EAAA;AAA2B,IAAA,iBAAA,IAAA,uBAAA;AAAqB,IAAA,uBAAA,EAAM;;AAExD,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM,EACF;;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,OAAA,EAAA,EAED,IAAA,OAAA,EAAA,EACG,IAAA,MAAA,EAAA;AACA,IAAA,iBAAA,IAAA,gCAAA;AAA8B,IAAA,uBAAA;AACtD,IAAA,yBAAA,IAAA,KAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,+CAAA;AAA6C,IAAA,uBAAA,EAAI;AAE7E,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6B,IAAA,OAAA,EAAA,EACI,IAAA,OAAA,EAAA,EACL,IAAA,OAAA,EAAA,EACF,IAAA,MAAA;AACZ,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA;AACP,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA;AACP,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA;AACP,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA;AACP,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEhB,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAwB,IAAA,OAAA,EAAA;AAEpB,IAAA,oBAAA,IAAA,OAAA,EAAA,EAA6B,IAAA,OAAA,EAAA,EACA,IAAA,OAAA,EAAA,EACA,IAAA,OAAA,EAAA,EACA,IAAA,OAAA,EAAA;AAE/B,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,MAAA;AACZ,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA,EAAO,EACb,EACF,EACF,EACF,EACF;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,OAAA,EAAA,EACG,IAAA,MAAA,EAAA;AACA,IAAA,iBAAA,IAAA,wBAAA;AAAsB,IAAA,uBAAA;AAC9C,IAAA,yBAAA,IAAA,KAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,0BAAA;AAAwB,IAAA,uBAAA,EAAI;AAExD,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6B,IAAA,OAAA,EAAA,EACH,IAAA,OAAA,EAAA,EACF,IAAA,MAAA;AACZ,IAAA,iBAAA,IAAA,KAAA;AAAG,IAAA,uBAAA;AACT,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,KAAA;AAAG,IAAA,uBAAA;AACT,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,KAAA;AAAG,IAAA,uBAAA;AACT,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,KAAA;AAAG,IAAA,uBAAA;AACT,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEhB,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAwB,IAAA,OAAA,EAAA;AAEpB,IAAA,oBAAA,IAAA,OAAA,EAAA,EAA6B,IAAA,OAAA,EAAA,EACA,IAAA,OAAA,EAAA,EACA,IAAA,OAAA,EAAA,EACA,IAAA,OAAA,EAAA;AAE/B,IAAA,uBAAA;;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,KAAA,QAAA,EAAA,EAK+B,KAAA,UAAA,EAAA,EACc,KAAA,UAAA,EAAA,EACE,KAAA,UAAA,EAAA,EACA,KAAA,UAAA,EAAA,EACC,KAAA,UAAA,EAAA,EACD,KAAA,UAAA,EAAA,EACC,KAAA,UAAA,EAAA;AAElD,IAAA,uBAAA;;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAoB,KAAA,MAAA;AACZ,IAAA,iBAAA,KAAA,KAAA;AAAG,IAAA,uBAAA;AACT,IAAA,yBAAA,KAAA,MAAA;AAAM,IAAA,iBAAA,KAAA,KAAA;AAAG,IAAA,uBAAA;AACT,IAAA,yBAAA,KAAA,MAAA;AAAM,IAAA,iBAAA,KAAA,KAAA;AAAG,IAAA,uBAAA;AACT,IAAA,yBAAA,KAAA,MAAA;AAAM,IAAA,iBAAA,KAAA,KAAA;AAAG,IAAA,uBAAA;AACT,IAAA,yBAAA,KAAA,MAAA;AAAM,IAAA,iBAAA,KAAA,KAAA;AAAG,IAAA,uBAAA;AACT,IAAA,yBAAA,KAAA,MAAA;AAAM,IAAA,iBAAA,KAAA,KAAA;AAAG,IAAA,uBAAA,EAAO,EACZ,EACF,EACF,EACF,EACF,EACF;;;;AAhI0B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,EAAA,QAAA;AAEU,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,EAAA,cAAA;AASV,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,EAAA,YAAA;AAWQ,IAAA,oBAAA,EAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,EAAA,cAAA;AAEP,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,EAAA,cAAA;AASD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,EAAA,OAAA;;;;;AAmGlC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqD,GAAA,OAAA,EAAA,EACtB,GAAA,IAAA;AACvB,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AAChB,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,mFAAA;AAAiF,IAAA,uBAAA,EAAI,EACpF;;;;;AAGR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwD,GAAA,OAAA,EAAA,EACzB,GAAA,IAAA;AACvB,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;AACnB,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,wDAAA;AAAsD,IAAA,uBAAA,EAAI,EACzD;;;;;AAGR,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAuD,GAAA,OAAA,EAAA,EACxB,GAAA,IAAA;AACvB,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA;AACf,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,gDAAA;AAA8C,IAAA,uBAAA,EAAI,EACjD;;;;;;AAtUV,IAAA,yBAAA,GAAA,KAAA,EAAgC,GAAA,OAAA,EAAA,EAEA,GAAA,OAAA,EAAA,EACH,GAAA,MAAA,EAAA;AACA,IAAA,iBAAA,GAAA,qBAAA;AAAmB,IAAA,uBAAA;AAC1C,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAoB,IAAA,iBAAA,GAAA,2CAAA;AAAyC,IAAA,uBAAA,EAAI;AAEnE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0B,GAAA,OAAA,EAAA,EACK,GAAA,UAAA,EAAA;AAC4B,IAAA,qBAAA,UAAA,SAAA,2DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AACrF,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAwB,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AACrC,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAwB,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AACrC,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;AACjC,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAsB,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA,EAAS;;AAE1C,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACF,IAAA,uBAAA,EAAM;;AAER,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA4B,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;;AAChD,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,CAAA;AACF,IAAA,uBAAA,EAAM;;AAER,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA2B,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;;AAChD,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,QAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,iBAAA,IAAA,iBAAA;AACF,IAAA,uBAAA,EAAS,EACL;;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AAC2C,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAY,UAAU,CAAC;IAAA,CAAA;AACnG,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA,EAAO;AAExC,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAqE,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAY,UAAU,CAAC;IAAA,CAAA;AACnG,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,mBAAA;AAAiB,IAAA,uBAAA,EAAO;AAEjD,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgE,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAY,KAAK,CAAC;IAAA,CAAA;AACzF,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA,EAAO;AAE5C,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAmE,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAY,QAAQ,CAAC;IAAA,CAAA;AAC/F,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,iBAAA;AAAe,IAAA,uBAAA,EAAO;AAE/C,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAkE,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAY,OAAO,CAAC;IAAA,CAAA;AAC7F,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA,EAAO,EAClC;AAIX,IAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,OAAA,EAAA,EAA0D,IAAA,0CAAA,KAAA,GAAA,OAAA,EAAA,EAsHA,IAAA,0CAAA,GAAA,GAAA,OAAA,EAAA,EAyIL,IAAA,0CAAA,GAAA,GAAA,OAAA,EAAA,EAOG,IAAA,0CAAA,GAAA,GAAA,OAAA,EAAA;AAa1D,IAAA,uBAAA;;;;AA/TsC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,cAAA;AA0BP,IAAA,oBAAA,EAAA;AAAA,IAAA,sBAAA,UAAA,OAAA,cAAA,UAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,UAAA,OAAA,cAAA,UAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,UAAA,OAAA,cAAA,KAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,UAAA,OAAA,cAAA,QAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,UAAA,OAAA,cAAA,OAAA;AAMvB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,UAAA;AAsHA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,UAAA;AAyIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,KAAA;AAOA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,QAAA;AAOA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,OAAA;;;AD5UJ,IAAO,qBAAP,MAAO,oBAAkB;EA0DT;EAzDZ,WAAW,IAAI,QAAO;EAE9B,YAAY;EACZ,iBAAiB;;EAGjB,UAAU;EACV,QAAuB;;EAGvB,gBAAsC;EACtC,kBAAqC,CAAA;EACrC,eAAqC;;EAGrC,aAAa;IACX,QAAQ,EAAE,OAAO,GAAG,OAAO,GAAG,YAAY,EAAC;IAC3C,QAAQ,EAAE,OAAO,GAAG,OAAO,GAAG,YAAY,EAAC;IAC3C,QAAQ,EAAE,OAAO,GAAG,OAAO,GAAG,YAAY,EAAC;;;EAI7C,aAAa;IACX,WAAW;MACT,UAAU;MACV,gBAAgB;MAChB,cAAc;MACd,gBAAgB;MAChB,gBAAgB;MAChB,SAAS;;IAEX,WAAW;MACT,UAAU;MACV,gBAAgB;MAChB,cAAc;MACd,gBAAgB;MAChB,gBAAgB;MAChB,SAAS;;IAEX,UAAU;MACR,UAAU;MACV,gBAAgB;MAChB,cAAc;MACd,gBAAgB;MAChB,gBAAgB;MAChB,SAAS;;IAEX,SAAS;MACP,UAAU;MACV,gBAAgB;MAChB,cAAc;MACd,gBAAgB;MAChB,gBAAgB;MAChB,SAAS;;;EAIb,YAAoB,kBAA2C;AAA3C,SAAA,mBAAA;EAA+C;EAEnE,WAAQ;AACN,SAAK,iBAAgB;EACvB;EAEA,cAAW;AACT,SAAK,SAAS,KAAI;AAClB,SAAK,SAAS,SAAQ;EACxB;EAEA,mBAAgB;AACd,SAAK,UAAU;AACf,SAAK,QAAQ;AAGb,YAAQ,IAAI;MACV,KAAK,uBAAsB;MAC3B,KAAK,gBAAe;MACpB,KAAK,sBAAqB;KAC3B,EAAE,QAAQ,MAAK;AACd,WAAK,UAAU;IACjB,CAAC;EACH;EAEA,yBAAsB;AACpB,WAAO,IAAI,QAAQ,CAAC,YAAW;AAC7B,WAAK,iBAAiB,sBAAqB,EACxC,KAAK,UAAU,KAAK,QAAQ,CAAC,EAC7B,UAAU;QACT,MAAM,CAAC,aAAY;AACjB,cAAI,SAAS,SAAS;AACpB,iBAAK,gBAAgB,SAAS;UAChC;AACA,kBAAO;QACT;QACA,OAAO,CAAC,QAAO;AACb,kBAAQ,MAAM,sCAAsC,GAAG;AACvD,kBAAO;QACT;OACD;IACL,CAAC;EACH;EAEA,kBAAe;AACb,WAAO,IAAI,QAAQ,CAAC,YAAW;AAC7B,WAAK,iBAAiB,eAAc,EACjC,KAAK,UAAU,KAAK,QAAQ,CAAC,EAC7B,UAAU;QACT,MAAM,CAAC,aAAY;AACjB,cAAI,SAAS,SAAS;AACpB,iBAAK,kBAAkB,SAAS;AAChC,iBAAK,oBAAmB;UAC1B;AACA,kBAAO;QACT;QACA,OAAO,CAAC,QAAO;AACb,kBAAQ,MAAM,+BAA+B,GAAG;AAChD,kBAAO;QACT;OACD;IACL,CAAC;EACH;EAEA,wBAAqB;AACnB,WAAO,IAAI,QAAQ,CAAC,YAAW;AAC7B,WAAK,iBAAiB,iBAAgB,EACnC,KAAK,UAAU,KAAK,QAAQ,CAAC,EAC7B,UAAU;QACT,MAAM,CAAC,aAAY;AACjB,cAAI,SAAS,SAAS;AACpB,iBAAK,eAAe,SAAS;UAC/B;AACA,kBAAO;QACT;QACA,OAAO,CAAC,QAAO;AACb,kBAAQ,MAAM,qCAAqC,GAAG;AACtD,kBAAO;QACT;OACD;IACL,CAAC;EACH;EAEA,sBAAmB;AACjB,QAAI,CAAC,KAAK,gBAAgB;AAAQ;AAElC,UAAM,SAAS,KAAK,gBAAgB,OAAO,UAAQ,KAAK,UAAU,GAAG;AACrE,UAAM,SAAS,KAAK,gBAAgB,OAAO,UAAQ,KAAK,UAAU,GAAG;AACrE,UAAM,SAAS,KAAK,gBAAgB,OAAO,UAAQ,KAAK,UAAU,GAAG;AAErE,UAAM,aAAa,KAAK,gBAAgB,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC;AAEjF,SAAK,WAAW,SAAS;MACvB,OAAO,OAAO;MACd,OAAO,OAAO,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC;MACvD,YAAY,aAAa,IAAK,OAAO,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC,IAAI,aAAc,MAAM;;AAGxG,SAAK,WAAW,SAAS;MACvB,OAAO,OAAO;MACd,OAAO,OAAO,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC;MACvD,YAAY,aAAa,IAAK,OAAO,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC,IAAI,aAAc,MAAM;;AAGxG,SAAK,WAAW,SAAS;MACvB,OAAO,OAAO;MACd,OAAO,OAAO,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC;MACvD,YAAY,aAAa,IAAK,OAAO,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC,IAAI,aAAc,MAAM;;EAE1G;EAEA,YAAY,KAAW;AACrB,SAAK,YAAY;AACjB,YAAQ,IAAI,oBAAoB,GAAG;EACrC;EAEA,eAAe,OAAY;AACzB,UAAM,SAAS,MAAM;AACrB,QAAI,UAAU,OAAO,OAAO;AAC1B,WAAK,iBAAiB,OAAO;AAC7B,cAAQ,IAAI,sBAAsB,OAAO,KAAK;IAChD;EACF;EAEA,eAAY;AACV,YAAQ,IAAI,0CAA0C,KAAK,cAAc;EAE3E;EAEA,iBAAc;AACZ,WAAO,KAAK,WAAW,KAAK,cAA8C;EAC5E;EAEA,cAAW;AACT,SAAK,iBAAgB;EACvB;EAEA,eAAe,QAAc;AAC3B,WAAO,OAAO,OAAO,eAAc,CAAE;EACvC;EAEA,iBAAiB,UAAgB;AAC/B,YAAQ,UAAU;MAChB,KAAK;AAAK,eAAO;MACjB,KAAK;AAAK,eAAO;MACjB,KAAK;AAAK,eAAO;MACjB;AAAS,eAAO;IAClB;EACF;;qCA9MW,qBAAkB,4BAAA,yBAAA,CAAA;EAAA;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,mBAAA,GAAA,OAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,OAAA,KAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,6GAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,QAAA,QAAA,cAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,2IAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,OAAA,eAAA,GAAA,OAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,OAAA,KAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,UAAA,OAAA,GAAA,CAAA,SAAA,SAAA,GAAA,CAAA,SAAA,SAAA,GAAA,CAAA,SAAA,QAAA,GAAA,CAAA,SAAA,OAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,gBAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,gBAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,cAAA,GAAA,OAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,iIAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,SAAA,kBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,QAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,eAAA,UAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,iBAAA,UAAA,GAAA,CAAA,QAAA,QAAA,UAAA,gBAAA,WAAA,aAAA,GAAA,aAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,gFAAA,GAAA,CAAA,GAAA,eAAA,eAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,sMAAA,GAAA,CAAA,GAAA,eAAA,YAAA,GAAA,CAAA,GAAA,eAAA,UAAA,GAAA,CAAA,kBAAA,SAAA,mBAAA,SAAA,gBAAA,KAAA,KAAA,6CAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,WAAA,eAAA,uBAAA,QAAA,GAAA,YAAA,GAAA,CAAA,KAAA,2DAAA,UAAA,WAAA,gBAAA,KAAA,QAAA,QAAA,kBAAA,SAAA,mBAAA,OAAA,GAAA,CAAA,MAAA,KAAA,MAAA,MAAA,KAAA,KAAA,QAAA,SAAA,GAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,KAAA,QAAA,SAAA,GAAA,CAAA,MAAA,OAAA,MAAA,MAAA,KAAA,KAAA,QAAA,SAAA,GAAA,CAAA,MAAA,OAAA,MAAA,OAAA,KAAA,KAAA,QAAA,SAAA,GAAA,CAAA,MAAA,OAAA,MAAA,MAAA,KAAA,KAAA,QAAA,SAAA,GAAA,CAAA,MAAA,OAAA,MAAA,OAAA,KAAA,KAAA,QAAA,SAAA,GAAA,CAAA,MAAA,OAAA,MAAA,MAAA,KAAA,KAAA,QAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;ACZ/B,MAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,MAAA,qBAAA,GAAA,mCAAA,GAAA,GAAA,OAAA,CAAA,EAA2C,GAAA,mCAAA,GAAA,GAAA,OAAA,CAAA,EAMQ,GAAA,mCAAA,IAAA,IAAA,OAAA,CAAA;AAyVnD,MAAA,yBAAA,GAAA,UAAA,CAAA;AAAgC,MAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,eAAS,IAAA,YAAA;MAAa,CAAA;;AACpD,MAAA,yBAAA,GAAA,OAAA,CAAA;AACE,MAAA,oBAAA,GAAA,QAAA,CAAA;AACF,MAAA,uBAAA,EAAM,EACC;;;AAnWH,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,OAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA,CAAA,IAAA,OAAA;AAcA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,WAAA,CAAA,IAAA,KAAA;;oBDdI,cAAY,SAAA,IAAA,GAAA,QAAA,CAAA,6qdAAA,EAAA,CAAA;;;sEAIX,oBAAkB,CAAA;UAP9B;uBACW,iBAAe,YACb,MAAI,SACP,CAAC,YAAY,GAAC,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,QAAA,CAAA,65UAAA,EAAA,CAAA;;;;6EAIZ,oBAAkB,EAAA,WAAA,sBAAA,UAAA,iEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
