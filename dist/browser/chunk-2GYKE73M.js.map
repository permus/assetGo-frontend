{
  "version": 3,
  "sources": ["src/app/teams/components/team-delete-confirmation-modal/team-delete-confirmation-modal.component.ts", "src/app/teams/components/team-delete-confirmation-modal/team-delete-confirmation-modal.component.html", "src/app/locations/services/location-tree.service.ts", "src/app/teams/components/team-form-modal/team-form-modal.component.ts", "src/app/teams/components/team-form-modal/team-form-modal.component.html", "src/app/teams/components/assign-work-order-modal/assign-work-order-modal.component.ts", "src/app/teams/components/assign-work-order-modal/assign-work-order-modal.component.html", "src/app/teams/team-list/team-list.component.ts", "src/app/teams/team-list/team-list.component.html", "src/app/teams/teams-routing.module.ts", "src/app/teams/teams.module.ts"],
  "sourcesContent": ["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TeamMember } from '../../services/team.service';\r\n\r\n@Component({\r\n  selector: 'app-team-delete-confirmation-modal',\r\n  templateUrl: './team-delete-confirmation-modal.component.html',\r\n  styleUrls: ['./team-delete-confirmation-modal.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule]\r\n})\r\nexport class TeamDeleteConfirmationModalComponent {\r\n  @Input() teamMember: TeamMember | null = null;\r\n  @Output() cancelled = new EventEmitter<void>();\r\n  @Output() confirmed = new EventEmitter<{ teamId: number; reason: string }>();\r\n\r\n  deleteReason = '';\r\n\r\n  onClose(): void {\r\n    this.cancelled.emit();\r\n  }\r\n\r\n  onConfirmDelete(): void {\r\n    if (this.teamMember) {\r\n      this.confirmed.emit({\r\n        teamId: this.teamMember.id,\r\n        reason: this.deleteReason.trim()\r\n      });\r\n    }\r\n  }\r\n\r\n  onBackdropClick(event: Event): void {\r\n    if (event.target === event.currentTarget) {\r\n      this.onClose();\r\n    }\r\n  }\r\n}\r\n", "<div class=\"fixed inset-0 bg-[#00000085] flex items-center justify-center z-50\" (click)=\"onBackdropClick($event)\">\r\n  <div class=\"relative mx-auto p-6  w-[500px] rounded-lg bg-white\">\r\n    <div class=\"mt-3\">\r\n      <!-- Header -->\r\n      <div class=\"flex items-center justify-between mb-6\">\r\n        <div class=\"flex items-center\">\r\n          <svg class=\"w-6 h-6 text-red-600 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n          </svg>\r\n          <h3 class=\"text-xl font-semibold text-gray-900\">Remove Team Member</h3>\r\n        </div>\r\n        <button\r\n          (click)=\"onClose()\"\r\n          class=\"text-gray-400 hover:text-gray-600 focus:outline-none\">\r\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Deletion Reason Section -->\r\n      <div class=\"mb-6\">\r\n        <label for=\"deleteReason\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          Deletion Reason (Optional)\r\n        </label>\r\n        <textarea\r\n          id=\"deleteReason\"\r\n          [(ngModel)]=\"deleteReason\"\r\n          rows=\"4\"\r\n          class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500 sm:text-sm\"\r\n          placeholder=\"Enter reason for removing this team member...\"></textarea>\r\n        <p class=\"mt-1 text-xs text-gray-500\">This will be recorded in the audit trail.</p>\r\n      </div>\r\n\r\n      <!-- Confirmation Section -->\r\n      <div class=\"text-center mb-6\">\r\n        <!-- Large Trash Icon -->\r\n        <div class=\"mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-red-100 mb-4\">\r\n          <svg class=\"h-8 w-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n          </svg>\r\n        </div>\r\n\r\n        <!-- Confirmation Question -->\r\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">\r\n          Are you sure you want to remove <strong>\"{{ teamMember?.first_name }} {{ teamMember?.last_name }}\"</strong>?\r\n        </h3>\r\n        \r\n        <!-- Warning Message -->\r\n        <p class=\"text-sm text-gray-600 mb-4\">\r\n          This action cannot be undone. The team member will be permanently removed from the system.\r\n        </p>\r\n\r\n        <!-- Important Warning Box -->\r\n        <div class=\"bg-red-50 border border-red-200 rounded-md p-4 mb-4\">\r\n          <div class=\"flex items-center\">\r\n            <svg class=\"w-5 h-5 text-red-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\r\n            </svg>\r\n            <span class=\"text-sm font-medium text-red-800\">\r\n              Warning: This action will permanently remove the team member and all associated data.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Actions -->\r\n      <div class=\"flex justify-end space-x-3\">\r\n        <button\r\n          (click)=\"onClose()\"\r\n          class=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors\">\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"onConfirmDelete()\"\r\n          class=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\">\r\n          Remove Member\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport interface LocationTreeNode {\r\n  id: number;\r\n  name: string;\r\n  // On /locations-hierarchy, `type` is a full object; we do not rely on its shape for selection\r\n  type?: any;\r\n  children: LocationTreeNode[];\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocationTreeService {\r\n  private cache$?: Observable<LocationTreeNode[]>;\r\n  private readonly apiUrl = `${environment.apiUrl}/locations-hierarchy`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTree(): Observable<LocationTreeNode[]> {\r\n    if (!this.cache$) {\r\n      this.cache$ = this.http\r\n        .get<{ success: boolean; data: { hierarchy: LocationTreeNode[] } }>(this.apiUrl)\r\n        .pipe(map(res => res.data.hierarchy), shareReplay(1));\r\n    }\r\n    return this.cache$;\r\n  }\r\n\r\n  clearCache(): void {\r\n    this.cache$ = undefined;\r\n  }\r\n}\r\n\r\n\r\n", "import { Component, EventEmitter, Input, OnInit, Output, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { TeamService, TeamMember } from '../../services/team.service';\r\nimport { RoleService, Role } from '../../../roles/services/role.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LocationTreeService, LocationTreeNode } from '../../../locations/services/location-tree.service';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n@Component({\r\n  selector: 'app-team-form-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, NgSelectModule],\r\n  templateUrl: './team-form-modal.component.html',\r\n  styleUrls: ['./team-form-modal.component.scss']\r\n})\r\nexport class TeamFormModalComponent implements OnInit, OnChanges {\r\n  @Input() teamMember: TeamMember | null = null;\r\n  @Input() isEditMode = false;\r\n  @Output() teamMemberSaved = new EventEmitter<TeamMember>();\r\n  @Output() cancelled = new EventEmitter<void>();\r\n\r\n  teamMemberForm: FormGroup;\r\n  loading = false;\r\n  error = '';\r\n  availableRoles: Role[] = [];\r\n  loadingRoles = false;\r\n  rolesError = '';\r\n\r\n  // Location scoping state\r\n  locationTree: LocationTreeNode[] = [];\r\n  loadingTree = false;\r\n  treeError = '';\r\n  expandDescendants = true;\r\n  flatLocationOptions: { id: number; label: string }[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private teamService: TeamService,\r\n    private roleService: RoleService,\r\n    private locationTreeService: LocationTreeService\r\n  ) {\r\n    this.teamMemberForm = this.fb.group({\r\n      first_name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]],\r\n      last_name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      role_id: ['', [Validators.required]],\r\n      hourly_rate: [null, [Validators.min(0)]],\r\n      location_ids: [[] as number[]],\r\n      expand_descendants: [true],\r\n    });\r\n    this.loadAvailableRoles();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.teamMember && this.isEditMode) {\r\n      // Fetch full team details to ensure we have role(s), locations, and rate\r\n      this.teamService.getTeamMember(this.teamMember.id).subscribe({\r\n        next: (resp: any) => {\r\n          this.teamMember = resp.data;\r\n          this.loadTeamMember();\r\n        },\r\n        error: () => {\r\n          // Fall back to input data if detail fetch fails\r\n          this.loadTeamMember();\r\n        }\r\n      });\r\n    }\r\n\r\n    // React to role changes to toggle location scoping UI\r\n    this.teamMemberForm.get('role_id')?.valueChanges.subscribe((roleId: number) => {\r\n      const role = this.availableRoles.find(r => r.id === Number(roleId));\r\n      if (role && role.has_location_access) {\r\n        this.ensureTreeLoaded();\r\n        // If switching to a role with access and we have existing teamMember locations in edit mode,\r\n        // prefill them once tree loads\r\n        if (this.isEditMode && this.teamMember && Array.isArray(this.teamMember.locations)) {\r\n          const assignedIds = this.teamMember.locations.map(l => l.id);\r\n          if (assignedIds.length > 0 && this.teamMember.has_full_location_access === false) {\r\n            this.teamMemberForm.patchValue({ location_ids: assignedIds });\r\n          }\r\n        }\r\n      } else {\r\n        // Clear selection to represent full access when role doesn't allow scoping\r\n        this.teamMemberForm.patchValue({ location_ids: [] });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['teamMember'] && changes['teamMember'].currentValue && this.isEditMode) {\r\n      // Wait a bit for roles to load if they haven't already\r\n      if (this.availableRoles.length > 0) {\r\n        this.loadTeamMember();\r\n      } else {\r\n        // If roles aren't loaded yet, wait a bit and try again\r\n        setTimeout(() => {\r\n          if (this.availableRoles.length > 0) {\r\n            this.loadTeamMember();\r\n          }\r\n        }, 100);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Method to manually update form when needed\r\n  updateFormWithTeamMember(): void {\r\n    if (this.teamMember && this.isEditMode && this.availableRoles.length > 0) {\r\n      this.loadTeamMember();\r\n    }\r\n  }\r\n\r\n  loadAvailableRoles(): void {\r\n    this.loadingRoles = true;\r\n    this.rolesError = '';\r\n\r\n    this.roleService.getRoles().subscribe({\r\n      next: (response: any) => {\r\n        this.availableRoles = response.data || [];\r\n        this.loadingRoles = false;\r\n        console.log('Available roles loaded:', this.availableRoles);\r\n        \r\n        // If we're in edit mode and have team member data, reload the form\r\n        if (this.isEditMode && this.teamMember) {\r\n          this.loadTeamMember();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading available roles:', error);\r\n        // Fallback to team service available roles\r\n        this.teamService.getAvailableRoles().subscribe({\r\n          next: (response: any) => {\r\n            this.availableRoles = response.data || [];\r\n            this.loadingRoles = false;\r\n            console.log('Available roles loaded (fallback):', this.availableRoles);\r\n            \r\n            // If we're in edit mode and have team member data, reload the form\r\n            if (this.isEditMode && this.teamMember) {\r\n              this.loadTeamMember();\r\n            }\r\n          },\r\n          error: (fallbackError: any) => {\r\n            console.error('Fallback also failed:', fallbackError);\r\n            this.rolesError = 'Failed to load roles. Please try again.';\r\n            this.loadingRoles = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  loadTeamMember(): void {\r\n    if (this.teamMember) {\r\n      console.log('Loading team member data:', this.teamMember);\r\n      \r\n      // Get role_id from role_id, role.id or roles[0].id\r\n      const roleId = (this.teamMember as any).role_id\r\n        || (this.teamMember as any).role?.id\r\n        || (Array.isArray((this.teamMember as any).roles) ? (this.teamMember as any).roles[0]?.id : undefined);\r\n      const hourlyRate = this.teamMember.hourly_rate;\r\n      \r\n      console.log('Role ID:', roleId, 'Type:', typeof roleId);\r\n      console.log('Hourly Rate:', hourlyRate, 'Type:', typeof hourlyRate);\r\n      \r\n      // Convert role_id to number if it's a string\r\n      const roleIdNumber = roleId ? Number(roleId) : '';\r\n      \r\n      this.teamMemberForm.patchValue({\r\n        first_name: this.teamMember.first_name,\r\n        last_name: this.teamMember.last_name,\r\n        email: this.teamMember.email,\r\n        role_id: roleIdNumber,\r\n        hourly_rate: (hourlyRate !== undefined && hourlyRate !== null) ? Number(hourlyRate) : null,\r\n        expand_descendants: true,\r\n      });\r\n\r\n      // If role allows scoping, ensure tree is available\r\n      const role = this.availableRoles.find(r => r.id === Number(roleIdNumber));\r\n      if (role && role.has_location_access) {\r\n        this.ensureTreeLoaded();\r\n        // Pre-select assigned locations if any and not full access\r\n        const assigned = Array.isArray(this.teamMember.locations) ? this.teamMember.locations.map(l => l.id) : [];\r\n        if (assigned.length > 0 && this.teamMember.has_full_location_access === false) {\r\n          this.teamMemberForm.patchValue({ location_ids: assigned });\r\n        } else {\r\n          this.teamMemberForm.patchValue({ location_ids: [] });\r\n        }\r\n      }\r\n      \r\n      console.log('Form values after patch:', this.teamMemberForm.value);\r\n      console.log('Available roles:', this.availableRoles);\r\n    }\r\n  }\r\n\r\n  // Close dropdown when clicking outside\r\n  onBackdropClick(event: Event): void {\r\n    if (event.target === event.currentTarget) {\r\n      this.onCancel();\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.teamMemberForm.invalid) {\r\n      this.markFormGroupTouched();\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.error = '';\r\n\r\n    const formData = { ...this.teamMemberForm.value } as any;\r\n    // Normalize location scoping payload\r\n    formData.location_ids = (formData.location_ids && formData.location_ids.length > 0) ? formData.location_ids : null;\r\n    if (formData.expand_descendants === undefined || formData.expand_descendants === null) {\r\n      formData.expand_descendants = true;\r\n    }\r\n\r\n    if (this.isEditMode && this.teamMember) {\r\n      this.teamService.updateTeamMember(this.teamMember.id, formData).subscribe({\r\n        next: (response: any) => {\r\n          this.loading = false;\r\n          this.teamMemberSaved.emit(response.data);\r\n        },\r\n        error: (error: any) => {\r\n          this.loading = false;\r\n          this.error = error.error?.message || 'Failed to update team member. Please try again.';\r\n        }\r\n      });\r\n    } else {\r\n      this.teamService.createTeamMember(formData).subscribe({\r\n        next: (response: any) => {\r\n          this.loading = false;\r\n          this.teamMemberSaved.emit(response.data);\r\n        },\r\n        error: (error: any) => {\r\n          this.loading = false;\r\n          this.error = error.error?.message || 'Failed to create team member. Please try again.';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancelled.emit();\r\n  }\r\n\r\n  getFieldError(fieldName: string): string {\r\n    const field = this.teamMemberForm.get(fieldName);\r\n    if (field?.invalid && (field?.dirty || field?.touched)) {\r\n      if (field?.errors?.['required']) {\r\n        return `${this.getFieldLabel(fieldName)} is required.`;\r\n      }\r\n      if (field?.errors?.['email']) {\r\n        return 'Please enter a valid email address.';\r\n      }\r\n      if (field?.errors?.['minlength']) {\r\n        return `${this.getFieldLabel(fieldName)} must be at least ${field.errors['minlength'].requiredLength} characters.`;\r\n      }\r\n      if (field?.errors?.['maxlength']) {\r\n        return `${this.getFieldLabel(fieldName)} must not exceed ${field.errors['maxlength'].requiredLength} characters.`;\r\n      }\r\n      if (field?.errors?.['min']) {\r\n        return `${this.getFieldLabel(fieldName)} must be at least ${field.errors['min'].min}.`;\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private getFieldLabel(fieldName: string): string {\r\n    const labels: { [key: string]: string } = {\r\n      first_name: 'First name',\r\n      last_name: 'Last name',\r\n      email: 'Email',\r\n      role_id: 'Team role',\r\n      hourly_rate: 'Hourly rate'\r\n    };\r\n    return labels[fieldName] || fieldName;\r\n  }\r\n\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.teamMemberForm.controls).forEach(key => {\r\n      const control = this.teamMemberForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  // UI helpers for location tree\r\n  get selectedRole(): Role | undefined {\r\n    const roleId = this.teamMemberForm.get('role_id')?.value;\r\n    return this.availableRoles.find(r => r.id === Number(roleId));\r\n  }\r\n\r\n  get showLocationScope(): boolean {\r\n    return !!this.selectedRole?.has_location_access;\r\n  }\r\n\r\n  private ensureTreeLoaded(): void {\r\n    if (this.locationTree.length > 0 || this.loadingTree) return;\r\n    this.loadingTree = true;\r\n    this.treeError = '';\r\n    this.locationTreeService.getTree().subscribe({\r\n      next: (nodes) => {\r\n        this.locationTree = nodes;\r\n        this.flatLocationOptions = this.flatten(nodes);\r\n        this.loadingTree = false;\r\n      },\r\n      error: (err) => {\r\n        this.treeError = 'Failed to load locations tree.';\r\n        this.loadingTree = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  isChecked(id: number): boolean {\r\n    const selected: number[] = this.teamMemberForm.get('location_ids')?.value || [];\r\n    return selected.includes(id);\r\n  }\r\n\r\n  toggleNode(node: LocationTreeNode, checked: boolean): void {\r\n    const control = this.teamMemberForm.get('location_ids');\r\n    const selected: number[] = [...(control?.value || [])];\r\n    const affected = this.collectIds(node);\r\n    if (checked) {\r\n      affected.forEach(id => { if (!selected.includes(id)) selected.push(id); });\r\n    } else {\r\n      affected.forEach(id => {\r\n        const idx = selected.indexOf(id);\r\n        if (idx >= 0) selected.splice(idx, 1);\r\n      });\r\n    }\r\n    control?.setValue(selected);\r\n  }\r\n\r\n  clearSelection(): void {\r\n    this.teamMemberForm.patchValue({ location_ids: [] });\r\n  }\r\n\r\n  private collectIds(node: LocationTreeNode): number[] {\r\n    const ids: number[] = [node.id];\r\n    if (node.children && node.children.length) {\r\n      node.children.forEach(c => ids.push(...this.collectIds(c)));\r\n    }\r\n    return ids;\r\n  }\r\n\r\n  private flatten(nodes: LocationTreeNode[], depth = 0, acc: { id: number; label: string }[] = []): { id: number; label: string }[] {\r\n    for (const n of nodes) {\r\n      acc.push({ id: n.id, label: `${'— '.repeat(depth)}${n.name}` });\r\n      if (n.children?.length) {\r\n        this.flatten(n.children, depth + 1, acc);\r\n      }\r\n    }\r\n    return acc;\r\n  }\r\n}\r\n", "<!-- Modal Backdrop -->\r\n  <div class=\"modal-overlay fixed inset-0 bg-[#00000085] flex items-center justify-center z-50\" (click)=\"onBackdropClick($event)\">\r\n  <!-- Modal Content -->\r\n  <div class=\"bg-white rounded-xl shadow-2xl w-full max-w-md mx-4 transform transition-all\">\r\n    <!-- Modal Header -->\r\n    <div class=\"px-6 py-4 border-b border-gray-200\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <h3 class=\"text-lg font-semibold text-gray-900\">\r\n          {{ isEditMode ? 'Edit Team Member' : 'Invite New Team Member' }}\r\n        </h3>\r\n        <button\r\n          (click)=\"onCancel()\"\r\n          class=\"text-gray-400 hover:text-gray-600 transition-colors\">\r\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal Body -->\r\n    <div class=\"px-6 py-4\">\r\n      <form [formGroup]=\"teamMemberForm\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- Error Message -->\r\n        <div *ngIf=\"error\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n          <div class=\"flex\">\r\n            <svg class=\"w-5 h-5 text-red-400 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n            </svg>\r\n            <p class=\"ml-2 text-sm text-red-700\">{{ error }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- First Name -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"first_name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            First Name *\r\n          </label>\r\n          <input\r\n            id=\"first_name\"\r\n            type=\"text\"\r\n            formControlName=\"first_name\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n            placeholder=\"Enter first name\"\r\n            [class.border-red-300]=\"teamMemberForm.get('first_name')?.invalid && (teamMemberForm.get('first_name')?.dirty || teamMemberForm.get('first_name')?.touched)\">\r\n          <p *ngIf=\"getFieldError('first_name')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('first_name') }}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Last Name -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"last_name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Last Name *\r\n          </label>\r\n          <input\r\n            id=\"last_name\"\r\n            type=\"text\"\r\n            formControlName=\"last_name\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n            placeholder=\"Enter last name\"\r\n            [class.border-red-300]=\"teamMemberForm.get('last_name')?.invalid && (teamMemberForm.get('last_name')?.dirty || teamMemberForm.get('last_name')?.touched)\">\r\n          <p *ngIf=\"getFieldError('last_name')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('last_name') }}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Email -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Email *\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            formControlName=\"email\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n            placeholder=\"Enter email address\"\r\n            [class.border-red-300]=\"teamMemberForm.get('email')?.invalid && (teamMemberForm.get('email')?.dirty || teamMemberForm.get('email')?.touched)\">\r\n          <p *ngIf=\"getFieldError('email')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('email') }}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Team Role -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"role_id\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Team Role *\r\n          </label>\r\n          <select\r\n            id=\"role_id\"\r\n            formControlName=\"role_id\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n            [class.border-red-300]=\"teamMemberForm.get('role_id')?.invalid && (teamMemberForm.get('role_id')?.dirty || teamMemberForm.get('role_id')?.touched)\">\r\n            <option value=\"\">Select a role</option>\r\n            <option *ngFor=\"let role of availableRoles\" [value]=\"role.id\">\r\n              {{ role.name }}\r\n            </option>\r\n          </select>\r\n          <p *ngIf=\"getFieldError('role_id')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('role_id') }}\r\n          </p>\r\n          <p *ngIf=\"rolesError\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ rolesError }}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Location Scope (visible only if role.has_location_access) -->\r\n        <div *ngIf=\"showLocationScope\" class=\"mb-4 border rounded-lg p-3 bg-gray-50\">\r\n          <div class=\"flex items-center justify-between mb-2\">\r\n            <div class=\"font-medium text-gray-800\">Location Scope</div>\r\n            <button type=\"button\" (click)=\"clearSelection()\" class=\"text-sm text-blue-600 hover:underline\">Clear selection (Full access)</button>\r\n          </div>\r\n          <div class=\"flex items-center mb-3\">\r\n            <input type=\"checkbox\" id=\"expand_descendants\" formControlName=\"expand_descendants\" class=\"mr-2\">\r\n            <label for=\"expand_descendants\" class=\"text-sm text-gray-700\">Include descendants (recommended)</label>\r\n          </div>\r\n          <div *ngIf=\"loadingTree\" class=\"text-sm text-gray-500\">Loading locations...</div>\r\n          <div *ngIf=\"treeError\" class=\"text-sm text-red-600\">{{ treeError }}</div>\r\n          <div *ngIf=\"!loadingTree && !treeError\">\r\n            <ng-select\r\n              [items]=\"flatLocationOptions\"\r\n              bindLabel=\"label\"\r\n              bindValue=\"id\"\r\n              [multiple]=\"true\"\r\n              [closeOnSelect]=\"false\"\r\n              [searchable]=\"true\"\r\n              placeholder=\"Select locations (empty = full access)\"\r\n              formControlName=\"location_ids\">\r\n            </ng-select>\r\n          </div>\r\n          <p class=\"mt-2 text-xs text-gray-500\">No selection means full access to all locations.</p>\r\n        </div>\r\n\r\n        <!-- Hourly Rate -->\r\n        <div class=\"mb-6\">\r\n          <label for=\"hourly_rate\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Hourly Rate (Optional)\r\n          </label>\r\n          <input\r\n            id=\"hourly_rate\"\r\n            type=\"number\"\r\n            formControlName=\"hourly_rate\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\r\n            placeholder=\"Enter hourly rate\"\r\n            min=\"0\"\r\n            step=\"0.01\"\r\n            [class.border-red-300]=\"teamMemberForm.get('hourly_rate')?.invalid && (teamMemberForm.get('hourly_rate')?.dirty || teamMemberForm.get('hourly_rate')?.touched)\">\r\n          <p *ngIf=\"getFieldError('hourly_rate')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('hourly_rate') }}\r\n          </p>\r\n          <p class=\"mt-1 text-xs text-gray-500\">\r\n            Optional hourly rate for this team member\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Modal Actions -->\r\n        <div class=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"onCancel()\"\r\n            class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\">\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"teamMemberForm.invalid || loading\"\r\n            class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\">\r\n            <svg *ngIf=\"loading\" class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white inline\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            {{ isEditMode ? 'Update Team Member' : 'Send Invitation' }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n", "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { WorkOrderService } from '../../../work-orders/services/work-order.service';\r\nimport { GlobalDropdownComponent, DropdownOption } from '../../../shared/components/global-dropdown';\r\n\r\n  @Component({\r\n    selector: 'app-assign-work-order-modal',\r\n    templateUrl: './assign-work-order-modal.component.html',\r\n    styleUrls: ['./assign-work-order-modal.component.scss'],\r\n    standalone: true,\r\n    imports: [CommonModule, FormsModule, GlobalDropdownComponent]\r\n  })\r\nexport class AssignWorkOrderModalComponent implements OnInit {\r\n  @Input() teamMemberName: string = '';\r\n  @Input() teamMemberId: number = 0;\r\n  @Output() closed = new EventEmitter<void>();\r\n  @Output() submitted = new EventEmitter<{ work_order_id: number; due_date?: string; notes?: string }>();\r\n\r\n  workOrders: DropdownOption[] = [];\r\n  selectedWorkOrderId: number | null = null;\r\n  selectedWorkOrder: DropdownOption | null = null;\r\n  dueDate: string = '';\r\n  notes: string = '';\r\n  loading = false;\r\n  errorMessage: string = '';\r\n\r\n  constructor(private workOrderService: WorkOrderService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchWorkOrders();\r\n  }\r\n\r\n  fetchWorkOrders(): void {\r\n    this.loading = true;\r\n    \r\n    this.workOrderService.getWorkOrders({ page: 1, per_page: 1000 }).subscribe({\r\n      next: (response: any) => {\r\n        // Transform work orders to DropdownOption format\r\n        this.workOrders = (response.data || []).map((workOrder: any) => ({\r\n          id: workOrder.id,\r\n          name: workOrder.title,\r\n          description: workOrder.description || `Status: ${workOrder.status_id}`,\r\n          icon: 'work-order'\r\n        }));\r\n        this.loading = false;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error fetching work orders:', error);\r\n        this.errorMessage = 'Failed to load work orders';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  submit(): void {\r\n    if (!this.selectedWorkOrderId) {\r\n      this.errorMessage = 'Please select a work order';\r\n      return;\r\n    }\r\n\r\n    this.errorMessage = '';\r\n    \r\n    // Call the backend API to assign the work order\r\n    this.workOrderService.assignWorkOrder(this.selectedWorkOrderId, {\r\n      user_id: this.teamMemberId,\r\n      due_date: this.dueDate || undefined,\r\n      notes: this.notes || undefined\r\n    }).subscribe({\r\n      next: (response: any) => {\r\n        this.submitted.emit({ \r\n          work_order_id: this.selectedWorkOrderId!, \r\n          due_date: this.dueDate || undefined, \r\n          notes: this.notes || undefined \r\n        });\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error assigning work order:', error);\r\n        if (error.error && error.error.message) {\r\n          this.errorMessage = error.error.message;\r\n        } else {\r\n          this.errorMessage = 'Failed to assign work order. Please try again.';\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  selectWorkOrder(workOrder: DropdownOption): void {\r\n    this.selectedWorkOrder = workOrder;\r\n    this.selectedWorkOrderId = workOrder.id;\r\n    this.errorMessage = '';\r\n  }\r\n\r\n  onInputChange(): void {\r\n    this.errorMessage = '';\r\n  }\r\n\r\n  close(): void {\r\n    this.closed.emit();\r\n  }\r\n}\r\n\r\n\r\n", "<div class=\"modal-overlay\" (click)=\"close()\">\r\n  <div class=\"modal\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h3>Assign Work Order to {{ teamMemberName }}</h3>\r\n      <button class=\"close-btn\" (click)=\"close()\">×</button>\r\n    </div>\r\n    \r\n    <p class=\"subtitle\">Select a work order to assign to this team member</p>\r\n    \r\n    <!-- Error Message -->\r\n    <div *ngIf=\"errorMessage\" class=\"error-message\">\r\n      {{ errorMessage }}\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <app-global-dropdown\r\n        label=\"Available Work Orders\"\r\n        [required]=\"true\"\r\n        [options]=\"workOrders\"\r\n        [selectedOption]=\"selectedWorkOrder\"\r\n        placeholder=\"Select a work order\"\r\n        [searchable]=\"true\"\r\n        [disabled]=\"loading\"\r\n        (selectionChange)=\"selectWorkOrder($event)\">\r\n      </app-global-dropdown>\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <label>Due Date (Optional)</label>\r\n      <input class=\"input\" type=\"datetime-local\" [(ngModel)]=\"dueDate\" (input)=\"onInputChange()\" />\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <label>Assignment Notes (Optional)</label>\r\n      <textarea class=\"textarea\" rows=\"5\" [(ngModel)]=\"notes\" (input)=\"onInputChange()\" placeholder=\"Add any specific instructions or notes for this assignment...\"></textarea>\r\n    </div>\r\n    \r\n    <div class=\"modal-actions\">\r\n      <button class=\"btn secondary\" (click)=\"close()\">Cancel</button>\r\n      <button class=\"btn primary\" [disabled]=\"!selectedWorkOrderId || loading\" (click)=\"submit()\">\r\n        <span *ngIf=\"loading\">Assigning...</span>\r\n        <span *ngIf=\"!loading\">Assign Work Order</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n", "import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TeamService, TeamMember, TeamMemberStatistics, TeamMembersPaginatedResponse, Pagination, TeamAnalyticsResponse } from '../services/team.service';\r\nimport { TeamDeleteConfirmationModalComponent } from '../components/team-delete-confirmation-modal/team-delete-confirmation-modal.component';\r\nimport { TeamFormModalComponent } from '../components/team-form-modal/team-form-modal.component';\r\nimport { AssignWorkOrderModalComponent } from '../components/assign-work-order-modal/assign-work-order-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-team-list',\r\n  templateUrl: './team-list.component.html',\r\n  styleUrls: ['./team-list.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, TeamDeleteConfirmationModalComponent, TeamFormModalComponent, AssignWorkOrderModalComponent]\r\n})\r\nexport class TeamListComponent implements OnInit {\r\n  teamMembers: TeamMember[] = [];\r\n  filteredTeamMembers: TeamMember[] = [];\r\n  pagination: Pagination | null = null;\r\n  loading = false;\r\n  error = '';\r\n  successMessage = '';\r\n  statistics: TeamMemberStatistics | null = null;\r\n  analytics: TeamAnalyticsResponse['data'] | null = null;\r\n\r\n  // Search and filtering\r\n  searchTerm = '';\r\n\r\n  // Sorting\r\n  selectedSort: any = null;\r\n  selectedRole: any = {label: 'All Roles', value: ''};\r\n  selectedStatus: any = {label: 'All Status', value: ''};\r\n  selectedSortDir: 'asc' | 'desc' = 'asc';\r\n  showSortDropdown = false;\r\n  showRoleDropdown = false;\r\n  showStatusDropdown = false;\r\n\r\n  // Modal states\r\n  showDeleteModal = false;\r\n  teamMemberToDelete: TeamMember | null = null;\r\n  showFormModal = false;\r\n  teamMemberToEdit: TeamMember | null = null;\r\n  isEditMode = false;\r\n  showAssignModal = false;\r\n  teamMemberToAssign: TeamMember | null = null;\r\n\r\n  // Sort options\r\n  sortOptions = [\r\n    { label: 'Name', value: 'name' },\r\n    { label: 'Created Date', value: 'created_at' },\r\n    { label: 'Email', value: 'email' },\r\n    { label: 'Role', value: 'role' }\r\n  ];\r\n\r\n  roleOptions = [\r\n    { label: 'All Roles', value: '' },\r\n    { label: 'Admin', value: 'admin' },\r\n    { label: 'User', value: 'user' },\r\n    {label: 'Technician', value: 'technician'}\r\n  ];\r\n\r\n  // Removed redundant \"Types\" filter (duplicated Roles)\r\n\r\n  statusOptions = [\r\n    { label: 'All Status', value: '' },\r\n    { label: 'Active', value: 'active' },\r\n    { label: 'Inactive', value: 'inactive' }\r\n  ];\r\n\r\n  constructor(\r\n    private teamService: TeamService\r\n  ) {}\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: Event): void {\r\n    const target = event.target as HTMLElement;\r\n    const dropdownButton = target.closest('button');\r\n    const dropdownMenu = target.closest('.dropdown-menu');\r\n\r\n    // Don't close if clicking on dropdown elements\r\n    if (dropdownButton || dropdownMenu) {\r\n      return;\r\n    }\r\n\r\n    // Close all dropdowns if clicking outside\r\n    this.teamMembers = this.teamMembers.map(tm => ({\r\n      ...tm,\r\n      showMenu: false\r\n    }));\r\n    this.filteredTeamMembers = this.filteredTeamMembers.map(tm => ({\r\n      ...tm,\r\n      showMenu: false\r\n    }));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadTeamMembers();\r\n    this.loadStatistics();\r\n  }\r\n\r\n  loadTeamMembers(page: number = 1): void {\r\n    this.loading = true;\r\n    this.error = '';\r\n\r\n    this.teamService.getTeamMembers(page, 15, {\r\n      search: this.searchTerm || undefined,\r\n      role_name: this.selectedRole?.value || undefined,\r\n      status: this.selectedStatus?.value || undefined,\r\n      sort_by: this.selectedSort?.value || undefined,\r\n      sort_dir: this.selectedSortDir\r\n    }).subscribe({\r\n      next: (response: TeamMembersPaginatedResponse) => {\r\n        this.teamMembers = response.data.teams;\r\n        this.pagination = response.data.pagination;\r\n        this.filteredTeamMembers = [...this.teamMembers];\r\n        this.loading = false;\r\n      },\r\n      error: (error: any) => {\r\n        this.error = 'Failed to load team members';\r\n        this.loading = false;\r\n        console.error('Error loading team members:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadStatistics(): void {\r\n    this.teamService.getTeamMemberStatistics().subscribe({\r\n      next: (response: any) => {\r\n        this.statistics = response.data;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading team member statistics:', error);\r\n      }\r\n    });\r\n\r\n    // Load analytics panel data\r\n    this.teamService.getTeamAnalytics({ date_range: 30 }).subscribe({\r\n      next: (res) => { this.analytics = res.data; },\r\n      error: (e) => { console.error('Error loading team analytics:', e); }\r\n    });\r\n  }\r\n\r\n  refreshStats(): void {\r\n    this.loadStatistics();\r\n  }\r\n\r\n  createTeamMember(): void {\r\n    this.teamMemberToEdit = null;\r\n    this.isEditMode = false;\r\n    this.showFormModal = true;\r\n  }\r\n\r\n  editTeamMember(teamMember: TeamMember): void {\r\n    this.teamMemberToEdit = teamMember;\r\n    this.isEditMode = true;\r\n    this.showFormModal = true;\r\n  }\r\n\r\n  openAssign(teamMember: TeamMember): void {\r\n    this.teamMemberToAssign = teamMember;\r\n    this.showAssignModal = true;\r\n  }\r\n\r\n  closeAssign(): void {\r\n    this.showAssignModal = false;\r\n    this.teamMemberToAssign = null;\r\n  }\r\n\r\n  onAssignmentSubmitted(data: { work_order_id: number; due_date?: string; notes?: string }): void {\r\n    // Set success message\r\n    this.successMessage = `Work order successfully assigned to ${this.teamMemberToAssign?.first_name} ${this.teamMemberToAssign?.last_name}`;\r\n\r\n    // Clear success message after 3 seconds\r\n    setTimeout(() => {\r\n      this.successMessage = '';\r\n    }, 3000);\r\n\r\n    // Refresh the team member list to update the assigned work order count\r\n    this.loadTeamMembers();\r\n    this.closeAssign();\r\n  }\r\n\r\n  viewTeamMember(teamMember: TeamMember): void {\r\n    // For now, we'll just show the team member details in a modal or navigate to a view page\r\n    console.log('View team member:', teamMember);\r\n  }\r\n\r\n  deleteTeamMember(teamMember: TeamMember): void {\r\n    this.teamMemberToDelete = teamMember;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  closeDeleteModal(): void {\r\n    this.showDeleteModal = false;\r\n    this.teamMemberToDelete = null;\r\n  }\r\n\r\n  confirmDeleteTeamMember(data: { teamId: number, reason: string }): void {\r\n    if (!this.teamMemberToDelete) return;\r\n\r\n    this.teamService.deleteTeamMember(this.teamMemberToDelete.id).subscribe({\r\n      next: (response: any) => {\r\n        this.teamMembers = this.teamMembers.filter(tm => tm.id !== this.teamMemberToDelete!.id);\r\n        this.filteredTeamMembers = this.filteredTeamMembers.filter(tm => tm.id !== this.teamMemberToDelete!.id);\r\n        this.closeDeleteModal();\r\n      },\r\n      error: (error: any) => {\r\n        this.error = 'Failed to delete team member';\r\n        console.error('Error deleting team member:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  closeFormModal(): void {\r\n    this.showFormModal = false;\r\n    this.teamMemberToEdit = null;\r\n    this.isEditMode = false;\r\n  }\r\n\r\n  onTeamMemberSaved(teamMember: TeamMember): void {\r\n    if (this.isEditMode) {\r\n      const index = this.teamMembers.findIndex(tm => tm.id === teamMember.id);\r\n      if (index !== -1) {\r\n        this.teamMembers[index] = teamMember;\r\n        this.filteredTeamMembers = this.filteredTeamMembers.map(tm =>\r\n          tm.id === teamMember.id ? teamMember : tm\r\n        );\r\n      }\r\n    } else {\r\n      this.teamMembers.unshift(teamMember);\r\n      this.filteredTeamMembers.unshift(teamMember);\r\n    }\r\n    this.closeFormModal();\r\n  }\r\n\r\n  onSearchChange(): void {\r\n    // Server-side search\r\n    this.loadTeamMembers(1);\r\n  }\r\n\r\n  filterTeamMembers(): void {\r\n    if (!this.searchTerm.trim()) {\r\n      this.filteredTeamMembers = [...this.teamMembers];\r\n    } else {\r\n      this.filteredTeamMembers = this.teamMembers.filter(teamMember =>\r\n        `${teamMember.first_name} ${teamMember.last_name}`.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        teamMember.email.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        (teamMember.role?.name && teamMember.role.name.toLowerCase().includes(this.searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n    this.sortTeamMembers();\r\n  }\r\n\r\n  toggleSortDropdown(): void {\r\n    this.showSortDropdown = !this.showSortDropdown;\r\n  }\r\n  toggleRoleDropdown(): void {\r\n    this.showRoleDropdown = !this.showRoleDropdown;\r\n  }\r\n\r\n  toggleStatusDropdown(): void {\r\n    this.showStatusDropdown = !this.showStatusDropdown;\r\n  }\r\n\r\n  selectSort(sort: any): void {\r\n    this.selectedSort = sort;\r\n    this.showSortDropdown = false;\r\n    this.loadTeamMembers(1);\r\n  }\r\n\r\n  selectRole(role: any): void {\r\n    this.selectedRole = role;\r\n    this.showRoleDropdown = false;\r\n    this.loadTeamMembers(1);\r\n  }\r\n\r\n  selectStatus(status: any): void {\r\n    this.selectedStatus = status;\r\n    this.showStatusDropdown = false;\r\n    this.loadTeamMembers(1);\r\n  }\r\n\r\n  toggleSortDir(): void {\r\n    this.selectedSortDir = this.selectedSortDir === 'asc' ? 'desc' : 'asc';\r\n    this.loadTeamMembers(1);\r\n  }\r\n\r\n  sortTeamMembers(): void {\r\n    if (!this.selectedSort) return;\r\n\r\n    this.filteredTeamMembers.sort((a, b) => {\r\n      let aValue: any;\r\n      let bValue: any;\r\n\r\n      switch (this.selectedSort.value) {\r\n        case 'name':\r\n          aValue = `${a.first_name} ${a.last_name}`.toLowerCase();\r\n          bValue = `${b.first_name} ${b.last_name}`.toLowerCase();\r\n          break;\r\n        case 'email':\r\n          aValue = a.email.toLowerCase();\r\n          bValue = b.email.toLowerCase();\r\n          break;\r\n        case 'created_at':\r\n          aValue = new Date(a.created_at).getTime();\r\n          bValue = new Date(b.created_at).getTime();\r\n          break;\r\n        case 'role':\r\n          aValue = (a.role?.name || '').toLowerCase();\r\n          bValue = (b.role?.name || '').toLowerCase();\r\n          break;\r\n        default:\r\n          aValue = `${a.first_name} ${a.last_name}`.toLowerCase();\r\n          bValue = `${b.first_name} ${b.last_name}`.toLowerCase();\r\n      }\r\n\r\n      if (aValue < bValue) {\r\n        return this.selectedSortDir === 'asc' ? -1 : 1;\r\n      } else if (aValue > bValue) {\r\n        return this.selectedSortDir === 'asc' ? 1 : -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  getTeamMemberFullName(teamMember: TeamMember): string {\r\n    return `${teamMember.first_name} ${teamMember.last_name}`;\r\n  }\r\n\r\n  getTeamMemberInitials(teamMember: TeamMember): string {\r\n    return `${teamMember.first_name.charAt(0)}${teamMember.last_name.charAt(0)}`.toUpperCase();\r\n  }\r\n\r\n  toggleTeamMemberMenu(teamMemberId: number): void {\r\n    this.teamMembers = this.teamMembers.map(tm => ({\r\n      ...tm,\r\n      showMenu: tm.id === teamMemberId ? !tm.showMenu : false\r\n    }));\r\n    this.filteredTeamMembers = this.filteredTeamMembers.map(tm => ({\r\n      ...tm,\r\n      showMenu: tm.id === teamMemberId ? !tm.showMenu : false\r\n    }));\r\n  }\r\n}\r\n", "<div class=\"team-list-page min-h-screen bg-gray-50 p-6\">\r\n  <!-- Page Title and Subtitle + Actions -->\r\n  <div class=\"mb-6 flex flex-col md:flex-row md:items-center md:justify-between\">\r\n    <div>\r\n      <h1 class=\"text-2xl font-bold text-gray-900 mb-1\">Team Management</h1>\r\n      <p class=\"text-gray-600 text-base\">Manage team members, assign work orders, and track team performance</p>\r\n    </div>\r\n    <div class=\"flex items-center space-x-3 mt-4 md:mt-0\">\r\n      <button (click)=\"createTeamMember()\"\r\n              class=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold px-5 py-2 rounded-lg shadow-sm transition-colors flex items-center cursor-pointer\">\r\n        <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n        </svg>\r\n        Invite Team Member\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Success Message -->\r\n  @if (successMessage) {\r\n    <div class=\"mb-6 bg-green-50 border border-green-200 rounded-lg p-4\">\r\n      <div class=\"flex items-center\">\r\n        <svg class=\"w-5 h-5 text-green-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n        </svg>\r\n        <span class=\"text-green-800 font-medium\">{{ successMessage }}</span>\r\n      </div>\r\n      <!-- Pagination Controls -->\r\n      <div class=\"xl:col-span-2\" *ngIf=\"pagination\">\r\n        <div class=\"flex items-center justify-between mt-4\">\r\n          <div class=\"text-sm text-gray-600\">\r\n            Showing {{ pagination.from }} - {{ pagination.to }} of {{ pagination.total }}\r\n          </div>\r\n          <div class=\"flex gap-2\">\r\n            <button\r\n              class=\"px-3 py-1.5 rounded border text-sm\"\r\n              [disabled]=\"pagination.current_page <= 1\"\r\n              (click)=\"loadTeamMembers(pagination.current_page - 1)\">\r\n              Prev\r\n            </button>\r\n            <span class=\"px-3 py-1.5 text-sm\">Page {{ pagination.current_page }} / {{ pagination.last_page }}</span>\r\n            <button\r\n              class=\"px-3 py-1.5 rounded border text-sm\"\r\n              [disabled]=\"pagination.current_page >= pagination.last_page\"\r\n              (click)=\"loadTeamMembers(pagination.current_page + 1)\">\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  <!-- Statistics Cards -->\r\n  <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6 mb-6\">\r\n\r\n    <!--Total-->\r\n    <div class=\"bg-blue-50 rounded-xl border border-blue-100 p-6 shadow-sm\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <div class=\"text-base font-medium text-gray-700\">Total Members</div>\r\n\r\n        <div class=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n               stroke=\"currentColor\"\r\n               class=\"size-5 text-blue-600\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                  d=\"M15 19.128a9.38 9.38 0 0 0 2.625.372 9.337 9.337 0 0 0 4.121-.952 4.125 4.125 0 0 0-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 0 1 8.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0 1 11.964-3.07M12 6.375a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0Zm8.25 2.25a2.625 2.625 0 1 1-5.25 0 2.625 2.625 0 0 1 5.25 0Z\"/>\r\n          </svg>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"\">\r\n        <p class=\"text-2xl font-bold text-gray-900 my-2\">{{ statistics?.total_team_members || 0 }}</p>\r\n        @if ((statistics?.active_team_members ?? 0) !== 0) {\r\n          <p class=\"text-sm font-medium text-gray-600\">{{ statistics?.active_team_members || 0 }} Active</p>\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n    <!--Assigned Task-->\r\n    <div class=\"bg-green-50 rounded-xl border border-green-100 p-6 shadow-sm\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <div class=\"text-base font-medium text-gray-700\">Assigned Task</div>\r\n\r\n        <div class=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n               stroke=\"currentColor\"\r\n               class=\"size-5 text-green-600\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                  d=\"M21.75 6.75a4.5 4.5 0 0 1-4.884 4.484c-1.076-.091-2.264.071-2.95.904l-7.152 8.684a2.548 2.548 0 1 1-3.586-3.586l8.684-7.152c.833-.686.995-1.874.904-2.95a4.5 4.5 0 0 1 6.336-4.486l-3.276 3.276a3.004 3.004 0 0 0 2.25 2.25l3.276-3.276c.256.565.398 1.192.398 1.852Z\"/>\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M4.867 19.125h.008v.008h-.008v-.008Z\"/>\r\n          </svg>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"\">\r\n        <p class=\"text-2xl font-bold text-gray-900 my-2\">{{ statistics?.assigned_work_orders_total_count || 0 }}</p>\r\n        <p class=\"text-sm font-medium text-gray-600\">Work orders pending</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!--Active Task-->\r\n    <div class=\"bg-orange-50 rounded-xl border border-orange-100 p-6 shadow-sm\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <div class=\"text-base font-medium text-gray-700\">Active Task</div>\r\n\r\n        <div class=\"w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n               stroke=\"currentColor\"\r\n               class=\"size-5 text-orange-600\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"/>\r\n          </svg>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"\">\r\n        <p class=\"text-2xl font-bold text-gray-900 my-2\">{{ statistics?.assigned_work_orders_active_count || 0 }}</p>\r\n        <p class=\"text-sm font-medium text-gray-600\">Currently in progress</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!--Completion Rate-->\r\n    <div class=\"bg-red-50 rounded-xl border border-red-100 p-6 shadow-sm\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <div class=\"text-base font-medium text-gray-700\">Completion Rate</div>\r\n\r\n        <div class=\"w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n               stroke=\"currentColor\" class=\"size-5 text-red-600\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                  d=\"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"/>\r\n          </svg>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <div class=\"\">\r\n        <p class=\"text-2xl font-bold text-gray-900 my-2\">{{ statistics?.assigned_work_orders_completed_count || 0 }}</p>\r\n        <p class=\"text-sm font-medium text-gray-600\">Tasks completed</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filters and View Type -->\r\n  <div class=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\r\n    <!-- Left: Search and Filters -->\r\n    <div class=\"flex-1 flex flex-col space-y-3 md:space-y-0 md:flex-row md:items-center md:space-x-3\">\r\n      <!-- Search -->\r\n      <div class=\"relative w-full md:w-80\">\r\n        <svg class=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" fill=\"none\"\r\n             stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n        </svg>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search team members by name or email...\"\r\n          class=\"w-full pl-10 pr-4 py-2 border-2 border-blue-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400\"\r\n          [(ngModel)]=\"searchTerm\"\r\n          (input)=\"onSearchChange()\"/>\r\n      </div>\r\n\r\n      <!-- Sort Dropdown -->\r\n      <div class=\"relative\" (click)=\"$event.stopPropagation()\">\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"toggleSortDropdown()\"\r\n          class=\"w-full px-4 py-2 text-left border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white transition-all min-w-[180px]\"\r\n          [class.border-blue-500]=\"showSortDropdown\">\r\n          <div class=\"flex items-center justify-between\">\r\n            <span class=\"text-sm\">\r\n              {{ selectedSort ? 'Sort by: ' + selectedSort.label : 'Sort by' }}\r\n            </span>\r\n            <svg class=\"w-4 h-4 text-gray-400 transition-transform duration-200\"\r\n                 [class.rotate-180]=\"showSortDropdown\"\r\n                 fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n            </svg>\r\n          </div>\r\n        </button>\r\n\r\n        <!-- Sort Options Dropdown -->\r\n        <div *ngIf=\"showSortDropdown\"\r\n             class=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg\">\r\n          <div class=\"py-1\">\r\n            <div *ngFor=\"let sort of sortOptions\"\r\n                 (click)=\"selectSort(sort)\"\r\n                 class=\"px-3 py-2 text-sm text-gray-900 hover:bg-blue-50 cursor-pointer transition-colors flex items-center justify-between\"\r\n                 [class.bg-blue-100]=\"selectedSort?.value === sort.value\">\r\n              <span>{{ sort.label }}</span>\r\n              <svg *ngIf=\"selectedSort?.value === sort.value\" class=\"w-4 h-4 text-blue-600\" fill=\"none\"\r\n                   stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Sort Direction Toggle -->\r\n      <button\r\n        (click)=\"toggleSortDir()\"\r\n        class=\"px-3 py-2 border border-gray-300 rounded-lg bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\">\r\n        <svg class=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                [attr.d]=\"selectedSortDir === 'asc' ? 'M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4' : 'M17 8V4m0 0l4 4m-4-4l-4 4M7 16v4m0 0l-4-4m4 4l4-4'\"></path>\r\n        </svg>\r\n      </button>\r\n\r\n      <!--Roles Dropdown-->\r\n      <div class=\"relative\" (click)=\"$event.stopPropagation()\">\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"toggleRoleDropdown()\"\r\n          class=\"w-full px-4 py-2 text-left border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white transition-all min-w-[180px]\"\r\n          [class.border-blue-500]=\"showRoleDropdown\">\r\n          <div class=\"flex items-center justify-between\">\r\n            <span class=\"text-sm\">\r\n              {{ selectedRole ? selectedRole.label : 'All Roles' }}\r\n            </span>\r\n            <svg class=\"w-4 h-4 text-gray-400 transition-transform duration-200\"\r\n                 [class.rotate-180]=\"showRoleDropdown\"\r\n                 fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n            </svg>\r\n          </div>\r\n        </button>\r\n\r\n        <!-- Sort Options Dropdown -->\r\n        @if (showRoleDropdown) {\r\n          <div\r\n            class=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg\">\r\n            <div class=\"py-1\">\r\n              @for (role of roleOptions; track role.value) {\r\n                <div\r\n                  (click)=\"selectRole(role)\"\r\n                  class=\"px-3 py-2 text-sm text-gray-900 hover:bg-blue-50 cursor-pointer transition-colors flex items-center justify-between\"\r\n                  [class.bg-blue-100]=\"selectedRole?.value === role.value\">\r\n                  <span>{{ role.label }}</span>\r\n                  <svg *ngIf=\"selectedRole?.value === role.value\" class=\"w-4 h-4 text-blue-600\" fill=\"none\"\r\n                       stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n                  </svg>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n      </div>\r\n\r\n      <!--Status Dropdown-->\r\n      <div class=\"relative\" (click)=\"$event.stopPropagation()\">\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"toggleStatusDropdown()\"\r\n          class=\"w-full px-4 py-2 text-left border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white transition-all min-w-[180px]\"\r\n          [class.border-blue-500]=\"showStatusDropdown\">\r\n          <div class=\"flex items-center justify-between\">\r\n            <span class=\"text-sm\">\r\n              {{ selectedStatus ? selectedStatus.label : 'All Status' }}\r\n            </span>\r\n            <svg class=\"w-4 h-4 text-gray-400 transition-transform duration-200\"\r\n                 [class.rotate-180]=\"showStatusDropdown\"\r\n                 fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n            </svg>\r\n          </div>\r\n        </button>\r\n\r\n        <!-- Sort Options Dropdown -->\r\n        @if (showStatusDropdown) {\r\n          <div\r\n            class=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg\">\r\n            <div class=\"py-1\">\r\n              @for (status of statusOptions; track status.value) {\r\n                <div\r\n                  (click)=\"selectStatus(status)\"\r\n                  class=\"px-3 py-2 text-sm text-gray-900 hover:bg-blue-50 cursor-pointer transition-colors flex items-center justify-between\"\r\n                  [class.bg-blue-100]=\"selectedStatus?.value === status.value\">\r\n                  <span>{{ status.label }}</span>\r\n                  <svg *ngIf=\"selectedStatus?.value === status.value\" class=\"w-4 h-4 text-blue-600\" fill=\"none\"\r\n                       stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n                  </svg>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n      </div>\r\n\r\n      <!-- Removed redundant Types dropdown (duplicate of Roles) -->\r\n\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n  <!-- Error State -->\r\n  @if (error && !loading) {\r\n    <div class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\r\n      <div class=\"flex\">\r\n        <svg class=\"w-5 h-5 text-red-400 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n        </svg>\r\n        <p class=\"ml-2 text-sm text-red-700\">{{ error }}</p>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  <!-- Team Members Cards -->\r\n\r\n    <div class=\"grid grid-cols-1 gap-6\">\r\n      @if (!loading) {\r\n      <!--Team Card grid-->\r\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div *ngFor=\"let teamMember of filteredTeamMembers\"\r\n               class=\"bg-white rounded-xl border border-gray-200 shadow-sm hover:shadow-md transition-shadow overflow-hidden\">\r\n\r\n            <!-- Card Header (Light Blue Background) -->\r\n            <div class=\"px-6 py-4 relative\">\r\n              <div class=\"flex items-center justify-between\">\r\n                <div class=\"flex items-center\">\r\n                  <div class=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mr-4\">\r\n                    <svg class=\"w-6 h-6 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                            d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\r\n                    </svg>\r\n                  </div>\r\n                  <div>\r\n                    <span class=\"text-sm font-medium text-blue-400 block mb-2\">\r\n                     {{ getTeamMemberFullName(teamMember) }}\r\n                    </span>\r\n\r\n                    <div class=\"px-3  py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 inline\">{{teamMember.roles[0].name}}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Assign Button and Options Menu -->\r\n                <div class=\"relative flex items-center gap-2\">\r\n                  <!-- Assign Button -->\r\n                  <button\r\n                    class=\"flex items-center gap-1 text-sm px-3 py-1.5 rounded-md bg-gray-100 hover:bg-gray-200 text-gray-700 border border-gray-200\"\r\n                    title=\"Assign\"\r\n                    (click)=\"openAssign(teamMember)\"\r\n                  >\r\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                            d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"></path>\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                            d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n                    </svg>\r\n                    <span>Assign</span>\r\n                  </button>\r\n\r\n                  <button\r\n                    (click)=\"toggleTeamMemberMenu(teamMember.id)\"\r\n                    class=\"text-gray-400 hover:text-gray-600 p-1.5 rounded-full hover:bg-gray-100 transition-colors focus:outline-none\">\r\n                    <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                            d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path>\r\n                    </svg>\r\n                  </button>\r\n\r\n                  <!-- Dropdown Menu -->\r\n                  <div *ngIf=\"teamMember.showMenu\"\r\n                       class=\"absolute right-0 top-1/2 mt-1 w-40 bg-white rounded-lg shadow-lg border border-gray-200 z-20\">\r\n                    <div class=\"py-1\">\r\n                      <!-- Edit Option -->\r\n                      <button\r\n                        (click)=\"editTeamMember(teamMember)\"\r\n                        class=\"flex items-center w-full px-3 py-2.5 text-sm text-gray-700 hover:bg-gray-50 transition-colors\">\r\n                        <svg class=\"w-4 h-4 mr-2.5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                                d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\r\n                        </svg>\r\n                        <span>Edit Member</span>\r\n                      </button>\r\n\r\n                      <!--Active/Inactive button-->\r\n                      <button type=\"button\"\r\n                              class=\"flex items-center w-full px-3 py-2.5 text-sm text-gray-700 hover:bg-gray-50 transition-colors\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                             stroke=\"currentColor\" class=\"size-4 text-gray-400 mr-2.5\">\r\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                d=\"M14.25 9v6m-4.5 0V9M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"/>\r\n                        </svg>\r\n\r\n                        Inactive\r\n                      </button>\r\n\r\n                      <!-- Remove Option -->\r\n                      <button\r\n                        (click)=\"deleteTeamMember(teamMember)\"\r\n                        class=\"flex items-center w-full px-3 py-2.5 text-sm text-red-600 hover:bg-red-50 transition-colors\">\r\n                        <svg class=\"w-4 h-4 mr-2.5 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n                        </svg>\r\n                        <span>Remove Member</span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Card Body (White Background) -->\r\n            <div class=\"px-6 py-4\">\r\n              <!-- Member Name -->\r\n              <h3 class=\"text-xl font-bold text-gray-900 mb-2\">{{ getTeamMemberFullName(teamMember) }}</h3>\r\n\r\n              <!-- Member Email -->\r\n              <p class=\"text-gray-600 mb-4\">{{ teamMember.email }}</p>\r\n\r\n              <!-- Role Information -->\r\n              <div class=\"flex items-center text-sm text-gray-500 mb-3\" *ngIf=\"teamMember.role\">\r\n                <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                        d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\r\n                </svg>\r\n                <span>{{ teamMember.role.name }}</span>\r\n              </div>\r\n\r\n              <!-- Hourly Rate -->\r\n              <div class=\"flex items-center text-sm text-gray-500 mb-2\"\r\n                   *ngIf=\"teamMember.hourly_rate !== undefined && teamMember.hourly_rate !== null\">\r\n                <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                        d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"></path>\r\n                </svg>\r\n                <span>${{ teamMember.hourly_rate }}/hour</span>\r\n              </div>\r\n\r\n\r\n              <div class=\"grid grid-cols-2\">\r\n                <!-- Created Date -->\r\n                <div class=\"flex items-center text-sm text-gray-500\">\r\n                  <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                          d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\r\n                  </svg>\r\n                  <span>Created {{ teamMember.created_at | date:'MMM d, y' }}</span>\r\n                </div>\r\n\r\n                <!-- Location Scope -->\r\n                <div class=\"text-xs mb-2\">\r\n          <span *ngIf=\"teamMember.has_full_location_access\"\r\n                class=\"inline-flex items-center px-2 py-0.5 rounded bg-green-100 text-green-700 border border-green-200\">Full access</span>\r\n                  <ng-container *ngIf=\"!teamMember.has_full_location_access && teamMember.locations?.length\">\r\n                    <div class=\"flex flex-wrap gap-1\">\r\n              <span *ngFor=\"let loc of teamMember.locations\"\r\n                    class=\"inline-flex items-center px-2 py-0.5 rounded bg-gray-100 text-gray-700 border border-gray-200\">\r\n                {{ loc.name }}\r\n              </span>\r\n                    </div>\r\n                  </ng-container>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Separator Line -->\r\n              <hr class=\"my-3 border-gray-200\">\r\n\r\n              <div class=\"grid grid-cols-3\">\r\n                <div class=\"text-center\">\r\n                  <div class=\"text-lg font-semibold text-blue-600\">{{ teamMember.assigned_work_orders_total_count ?? teamMember.assigned_work_orders_count ?? 0 }}</div>\r\n                  <div class=\"text-xs text-gray-500\">Assigned</div>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <div class=\"text-lg font-semibold text-yellow-600\">{{ teamMember.assigned_work_orders_active_count ?? 0 }}</div>\r\n                  <div class=\"text-xs text-gray-500\">Active</div>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <div class=\"text-lg font-semibold text-green-600\">{{ teamMember.assigned_work_orders_completed_count ?? 0 }}</div>\r\n                  <div class=\"text-xs text-gray-500\">Completed</div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      <!-- Empty State -->\r\n      @if (!loading && filteredTeamMembers.length === 0) {\r\n        <div class=\"xl:col-span-2\">\r\n          <div class=\"text-center py-12\">\r\n            <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                    d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path>\r\n            </svg>\r\n            <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No team members found</h3>\r\n            <p class=\"mt-1 text-sm text-gray-500\">\r\n              {{ searchTerm ? 'Try adjusting your search terms.' : 'Get started by inviting your first team member.' }}\r\n            </p>\r\n            <div class=\"mt-6\">\r\n              <button\r\n                (click)=\"createTeamMember()\"\r\n                class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n                <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n                </svg>\r\n                Invite Team Member\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      }\r\n\r\n      <!-- Loading State -->\r\n      @if (loading) {\r\n       <div class=\"xl:col-span-2\">\r\n         <div class=\"flex justify-center items-center py-12 h-100\">\r\n           <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n         </div>\r\n       </div>\r\n      }\r\n<!--\r\n      &lt;!&ndash;Team Analytics&ndash;&gt;\r\n      <div class=\"xl:col-span-1\">\r\n        <div class=\"rounded-lg border bg-white border-gray-200 shadow-sm h-fit\">\r\n          <div class=\"flex flex-col space-y-1.5 p-6\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <div>\r\n                <h2 class=\"text-2xl font-semibold flex items-center gap-2 text-black-600\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                       stroke=\"currentColor\" class=\"size-6\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                          d=\"M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 0 1 3 19.875v-6.75ZM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V8.625ZM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V4.125Z\"/>\r\n                  </svg>\r\n                  Team Analytics\r\n                </h2>\r\n                <p class=\"text-gray-500\">Performance metrics and team insights</p>\r\n              </div>\r\n\r\n              &lt;!&ndash;Refresh Button&ndash;&gt;\r\n              <button (click)=\"refreshStats()\"\r\n                      class=\"flex gap-2 bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold px-5 py-2 rounded-lg shadow-sm transition-colors flex items-center cursor-pointer\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                     stroke=\"currentColor\" class=\"size-4\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\"/>\r\n                </svg>\r\n                Refresh\r\n              </button>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div class=\"p-6 pt-0\">\r\n            <div class=\"relative overflow-auto h-[400px]\">\r\n              <div class=\"h-full w-full rounded-[inherit]\">\r\n                <div class=\"space-y-6\">\r\n                  <div class=\"space-y-4\">\r\n\r\n                    <h4 class=\"text-sm font-medium flex items-center gap-2 text-black-600\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                           stroke=\"currentColor\" class=\"size-4\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                              d=\"M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941\"/>\r\n                      </svg>\r\n                      Key Performance Indicators\r\n                    </h4>\r\n\r\n                    &lt;!&ndash;Cards&ndash;&gt;\r\n                    <div class=\"grid grid-cols-2 gap-3 pb-6 border-b border-gray-200\">\r\n\r\n                      <div class=\"p-3 bg-gray-100 rounded-lg\">\r\n                        <div class=\"flex items-center gap-2 mb-1\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                               stroke=\"currentColor\" class=\"size-4 text-green-500\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                  d=\"M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941\"/>\r\n                          </svg>\r\n                          <span class=\"text-xs text-gray-800 font-medium\">Productivity</span></div>\r\n                        <div class=\"text-lg font-bold text-green-500\">{{ analytics?.productivity_rate_percent || 0 }}%</div>\r\n\r\n                        &lt;!&ndash;Progress Bar&ndash;&gt;\r\n                        <div class=\"relative w-full overflow-hidden rounded-full h-1 mt-1 bg-gray-200\">\r\n                          <div class=\"h-full w-full flex-1 transition-all\"></div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"p-3 bg-gray-100 rounded-lg\">\r\n                        <div class=\"flex items-center gap-2 mb-1\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                               stroke=\"currentColor\" class=\"size-4 text-blue-500\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                  d=\"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"/>\r\n                          </svg>\r\n\r\n                          <span class=\"text-xs text-gray-800 font-medium\">On-Time Rate</span></div>\r\n                        <div class=\"text-lg font-bold text-blue-500\">{{ analytics?.on_time_rate_percent || 0 }}%</div>\r\n\r\n                        &lt;!&ndash;Progress Bar&ndash;&gt;\r\n                        <div class=\"relative w-full overflow-hidden rounded-full h-1 mt-1 bg-gray-200\">\r\n                          <div class=\"h-full w-full flex-1 transition-all\"></div>\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n                      <div class=\"p-3 bg-gray-100 rounded-lg\">\r\n                        <div class=\"flex items-center gap-2 mb-1\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                               stroke=\"currentColor\" class=\"size-4 text-yellow-500\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                  d=\"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5\"/>\r\n                          </svg>\r\n\r\n                          <span class=\"text-xs text-gray-800 font-medium\">Avg. Completion</span></div>\r\n                        <div class=\"text-lg font-bold text-yellow-500\">{{ analytics?.avg_completion_days || 0 }}d</div>\r\n                      </div>\r\n\r\n                      <div class=\"p-3 bg-gray-100 rounded-lg\">\r\n                        <div class=\"flex items-center gap-2 mb-1\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                               stroke=\"currentColor\" class=\"size-4 text-green-500\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                  d=\"M12 6v12m-3-2.818.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"/>\r\n                          </svg>\r\n                          <span class=\"text-xs text-gray-800 font-medium\">Labor Cost</span></div>\r\n                        <div class=\"text-lg font-bold text-green-500\">${{ analytics?.labor_cost_total || 0 }}</div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    &lt;!&ndash;Top Performance&ndash;&gt;\r\n                    <div class=\"space-y-3 pb-6 border-b border-gray-200\">\r\n                      <h4 class=\"text-sm font-medium flex items-center gap-2\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                             stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                             class=\"size-4\">\r\n                          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                          <circle cx=\"12\" cy=\"12\" r=\"6\"></circle>\r\n                          <circle cx=\"12\" cy=\"12\" r=\"2\"></circle>\r\n                        </svg>\r\n                        Top Performers\r\n                      </h4>\r\n\r\n                      <div class=\"space-y-2\">\r\n                        <div *ngFor=\"let perf of (analytics?.top_performers || []); let i = index\"\r\n                          class=\"flex items-center justify-between p-2 rounded-lg hover:bg-gray-50 transition-colors\">\r\n                          <div class=\"flex items-center gap-2\">\r\n                            <div class=\"flex items-center justify-center w-6 h-6 rounded-full bg-blue-500 text-xs font-bold text-white\">{{ i + 1 }}</div>\r\n                            <div>\r\n                              <p class=\"text-sm font-medium\">{{ perf.first_name }} {{ perf.last_name }}</p>\r\n                              <p class=\"text-xs text-muted-foreground\">{{ perf.completed_count }} completed</p>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"text-right\">\r\n                            <div class=\"inline-flex items-center rounded-full border px-2.5 py-0.5 font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 text-white text-xs bg-blue-100\">\r\n                              {{ analytics?.productivity_rate_percent || 0 }}%\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    &lt;!&ndash;Quick actions&ndash;&gt;\r\n                    <div class=\"space-y-3\">\r\n                      <h4 class=\"text-sm font-medium flex items-center gap-2\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                             stroke=\"currentColor\" class=\"size-4\">\r\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                d=\"m3.75 13.5 10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75Z\"/>\r\n                        </svg>\r\n                        Quick Actions\r\n                      </h4>\r\n                      <div class=\"grid grid-cols-1 gap-2\">\r\n                        <button\r\n                          class=\"cursor-pointer bg-gray-100 rounded-lg p-2 hover:bg-blue-100 group transition-colors inline-flex items-center gap-2 whitespace-nowrap text-sm font-medium hover:text-blue-600\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                               stroke=\"currentColor\" class=\"size-4 mr-2 group-hover:text-blue-600\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                  d=\"M15 19.128a9.38 9.38 0 0 0 2.625.372 9.337 9.337 0 0 0 4.121-.952 4.125 4.125 0 0 0-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 0 1 8.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0 1 11.964-3.07M12 6.375a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0Zm8.25 2.25a2.625 2.625 0 1 1-5.25 0 2.625 2.625 0 0 1 5.25 0Z\"/>\r\n                          </svg>\r\n\r\n                          View Team Schedule\r\n                        </button>\r\n\r\n                        <button\r\n                          class=\"cursor-pointer bg-gray-100 rounded-lg p-2 hover:bg-blue-100 group transition-colors inline-flex items-center gap-2 whitespace-nowrap text-sm font-medium hover:text-blue-600\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                               stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                               class=\"size-4 mr-2 group-hover:text-blue-600\">\r\n                            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                            <circle cx=\"12\" cy=\"12\" r=\"6\"></circle>\r\n                            <circle cx=\"12\" cy=\"12\" r=\"2\"></circle>\r\n                          </svg>\r\n                          Set Performance Goals\r\n                        </button>\r\n                        <button\r\n                          class=\"cursor-pointer bg-gray-100 rounded-lg p-2 hover:bg-blue-100 group transition-colors inline-flex items-center gap-2 whitespace-nowrap text-sm font-medium hover:text-blue-600\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                               stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                               class=\"lucide lucide-chart-column h-3 w-3 mr-2\">\r\n                            <path d=\"M3 3v16a2 2 0 0 0 2 2h16\"></path>\r\n                            <path d=\"M18 17V9\"></path>\r\n                            <path d=\"M13 17V5\"></path>\r\n                            <path d=\"M8 17v-3\"></path>\r\n                          </svg>\r\n                          Generate Report\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>-->\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <!-- Modals -->\r\n  <app-team-delete-confirmation-modal\r\n    *ngIf=\"showDeleteModal\"\r\n    [teamMember]=\"teamMemberToDelete\"\r\n    (confirmed)=\"confirmDeleteTeamMember($event)\"\r\n    (cancelled)=\"closeDeleteModal()\">\r\n  </app-team-delete-confirmation-modal>\r\n\r\n  <app-team-form-modal\r\n    *ngIf=\"showFormModal\"\r\n    [teamMember]=\"teamMemberToEdit\"\r\n    [isEditMode]=\"isEditMode\"\r\n    (teamMemberSaved)=\"onTeamMemberSaved($event)\"\r\n    (cancelled)=\"closeFormModal()\">\r\n  </app-team-form-modal>\r\n\r\n  <app-assign-work-order-modal\r\n    *ngIf=\"showAssignModal\"\r\n    [teamMemberName]=\"teamMemberToAssign ? getTeamMemberFullName(teamMemberToAssign) : ''\"\r\n    [teamMemberId]=\"teamMemberToAssign ? teamMemberToAssign.id : 0\"\r\n    (closed)=\"closeAssign()\"\r\n    (submitted)=\"onAssignmentSubmitted($event)\">\r\n  </app-assign-work-order-modal>\r\n</div>\r\n", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TeamListComponent } from './team-list/team-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TeamListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TeamsRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { TeamsRoutingModule } from './teams-routing.module';\r\nimport { TeamListComponent } from './team-list/team-list.component';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    TeamsRoutingModule,\r\n    TeamListComponent\r\n  ]\r\n})\r\nexport class TeamsModule { }\r\n"],
  "mappings": "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",
  "names": []
}
