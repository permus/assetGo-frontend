import{a as g}from"./chunk-4GAB36YI.js";import{bb as u,lb as o,s as l,v as b}from"./chunk-XJNQJKZP.js";import{a as h}from"./chunk-EQDQRRRY.js";var p=class i{constructor(t,e){this.http=t;this.authService=e}baseUrl=o.apiUrl;getAuthHeaders(){let t=this.authService.getToken();return{headers:h({"Content-Type":"application/json"},t?{Authorization:`Bearer ${t}`}:{})}}getAssets(t={}){let e="",s=Object.keys(t);if(s.length>0){let n=s.filter(r=>t[r]!==""&&t[r]!==null&&t[r]!==void 0).map(r=>`${encodeURIComponent(r)}=${encodeURIComponent(t[r])}`);n.length>0&&(e="?"+n.join("&"))}return this.http.get(`${this.baseUrl}/assets${e}`,this.getAuthHeaders())}getAsset(t){return this.http.get(`${this.baseUrl}/assets/${t}`,this.getAuthHeaders())}createAsset(t){return this.http.post(`${this.baseUrl}/assets`,t,this.getAuthHeaders())}updateAsset(t,e){return this.http.put(`${this.baseUrl}/assets/${t}`,e,this.getAuthHeaders())}deleteAsset(t){return this.http.delete(`${this.baseUrl}/assets/${t}`,this.getAuthHeaders())}restoreAsset(t,e){return this.http.post(`${this.baseUrl}/assets/${t}/restore`,e,this.getAuthHeaders())}getArchiveAnalytics(){return this.http.get(`${this.baseUrl}/assets/analytics`,this.getAuthHeaders())}exportAssets(t=!1){let e=t?"?archived=1":"";return this.http.get(`${this.baseUrl}/assets/export${e}`,h({responseType:"blob"},this.getAuthHeaders()))}archiveAsset(t,e={}){return this.http.post(`${this.baseUrl}/assets/${t}/archive`,e,this.getAuthHeaders())}bulkArchiveAssets(t){return this.http.post(`${this.baseUrl}/assets/bulk-archive`,t,this.getAuthHeaders())}bulkDeleteAssets(t){return this.http.post(`${this.baseUrl}/assets/bulk-delete`,t,this.getAuthHeaders())}bulkRestoreAssets(t,e){let s={asset_ids:t};return e&&e.trim()&&(s.restore_reason=e.trim()),this.http.post(`${this.baseUrl}/assets/bulk-restore`,s,this.getAuthHeaders())}getAssetStatistics(){return this.http.get(`${this.baseUrl}/assets/statistics`,this.getAuthHeaders())}getAssetCategories(){return this.http.get(`${this.baseUrl}/asset-categories`,this.getAuthHeaders())}duplicateAsset(t,e={}){return this.http.post(`${this.baseUrl}/assets/${t}/duplicate`,e,this.getAuthHeaders())}bulkImportAssets(t){return this.http.post(`${this.baseUrl}/assets/import-bulk-json`,t,this.getAuthHeaders())}transferAsset(t,e){return this.http.post(`${this.baseUrl}/assets/${t}/transfer`,e,this.getAuthHeaders())}listMaintenanceSchedules(t){return this.http.get(`${this.baseUrl}/assets/${t}/maintenance-schedules`,this.getAuthHeaders())}addMaintenanceSchedule(t,e){return this.http.post(`${this.baseUrl}/assets/${t}/maintenance-schedules`,e,this.getAuthHeaders())}updateMaintenanceSchedule(t,e,s){return this.http.put(`${this.baseUrl}/assets/${t}/maintenance-schedules/${e}`,s,this.getAuthHeaders())}deleteMaintenanceSchedule(t,e){return this.http.delete(`${this.baseUrl}/assets/${t}/maintenance-schedules/${e}`,this.getAuthHeaders())}getActivityHistory(t,e={}){let s="",n=Object.keys(e);if(n.length>0){let r=n.filter(a=>e[a]!==""&&e[a]!==null&&e[a]!==void 0).map(a=>`${encodeURIComponent(a)}=${encodeURIComponent(e[a])}`);r.length>0&&(s="?"+r.join("&"))}return this.http.get(`${this.baseUrl}/assets/${t}/activity-history${s}`,this.getAuthHeaders())}getLocations(t=1,e=1e3,s="created",n="desc"){let r=`?page=${t}&per_page=${e}&sort_by=${s}&sort_direction=${n}`;return this.http.get(`${this.baseUrl}/locations${r}`,this.getAuthHeaders())}getAssetTypes(){return this.http.get(`${this.baseUrl}/asset-types-list`,this.getAuthHeaders())}getAssetStatuses(){return this.http.get(`${this.baseUrl}/asset-statuses-list`,this.getAuthHeaders())}getDepartments(t=1,e=1e3,s="created",n="desc"){let r=`?page=${t}&per_page=${e}&sort_by=${s}&sort_direction=${n}`;return this.http.get(`${this.baseUrl}/departments-list${r}`,this.getAuthHeaders())}getPossibleParents(t){let e=`${this.baseUrl}/assets/possible-parents`;return t&&(e+=`/${t}`),this.http.get(e,this.getAuthHeaders())}getAssetPublic(t){return this.http.get(`${this.baseUrl}/assets/${t}/public`)}getActivityHistoryPublic(t,e={}){let s="",n=Object.keys(e);if(n.length>0){let r=n.filter(a=>e[a]!==""&&e[a]!==null&&e[a]!==void 0).map(a=>`${encodeURIComponent(a)}=${encodeURIComponent(e[a])}`);r.length>0&&(s="?"+r.join("&"))}return this.http.get(`${this.baseUrl}/assets/${t}/activity-history/public${s}`)}static \u0275fac=function(e){return new(e||i)(b(u),b(g))};static \u0275prov=l({token:i,factory:i.\u0275fac,providedIn:"root"})};export{p as a};
