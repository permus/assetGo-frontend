{
  "version": 3,
  "sources": ["src/app/locations/services/location.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport interface LocationType {\r\n  id: number;\r\n  name: string;\r\n  category: string;\r\n  hierarchy_level: number;\r\n  icon: string;\r\n  suggestions: any[];\r\n  created_at: string;\r\n  updated_at: string;\r\n  description?: string;\r\n}\r\n\r\nexport interface Location {\r\n  id: number;\r\n  name: string;\r\n  slug?: string;\r\n  address?: string;\r\n  description?: string;\r\n  location_type_id: number;\r\n  parent_id?: number;\r\n  company_id: number;\r\n  user_id: number;\r\n  hierarchy_level: number;\r\n  latitude?: number;\r\n  longitude?: number;\r\n  qr_code_path?: string;\r\n  qr_code_url?: string;\r\n  quick_chart_qr_url?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  type: LocationType;\r\n  parent?: Location;\r\n  children?: Location[];\r\n  creator?: any;\r\n  asset_summary?: {\r\n    asset_count: number;\r\n    total_value: number;\r\n  };\r\n}\r\n\r\nexport interface LocationsResponse {\r\n  success: boolean;\r\n  data: {\r\n    locations: Location[];\r\n    pagination: {\r\n      current_page: number;\r\n      last_page: number;\r\n      per_page: number;\r\n      total: number;\r\n      from: number;\r\n      to: number;\r\n    };\r\n    filters: {\r\n      search?: string;\r\n      type_id?: number;\r\n      parent_id?: number;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface LocationResponse {\r\n  success: boolean;\r\n  data: {\r\n    location: Location;\r\n    ancestors?: Location[];\r\n    children_count?: number;\r\n    descendants_count?: number;\r\n  };\r\n  message?: string;\r\n}\r\n\r\nexport interface LocationTypesResponse {\r\n  success: boolean;\r\n  data: {\r\n    types: LocationType[];\r\n  };\r\n}\r\n\r\nexport interface HierarchyResponse {\r\n  success: boolean;\r\n  data: {\r\n    hierarchy: any[];\r\n  };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationService {\r\n  private apiUrl = `${environment.apiUrl}/locations`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private getAuthHeaders(): { headers: { [header: string]: string } } {\r\n    const token = localStorage.getItem('token');\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n      }\r\n    };\r\n  }\r\n\r\n  // Get locations with filtering and pagination\r\n  getLocations(params: {\r\n    search?: string;\r\n    type_id?: number;\r\n    parent_id?: number;\r\n    per_page?: number;\r\n    page?: number;\r\n  } = {}): Observable<LocationsResponse> {\r\n    let httpParams = new HttpParams();\r\n    \r\n    Object.keys(params).forEach(key => {\r\n      const value = params[key as keyof typeof params];\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        httpParams = httpParams.set(key, value.toString());\r\n      }\r\n    });\r\n\r\n    return this.http.get<LocationsResponse>(this.apiUrl, { \r\n      params: httpParams,\r\n      ...this.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Get single location\r\n  getLocation(id: number): Observable<LocationResponse> {\r\n    return this.http.get<LocationResponse>(`${this.apiUrl}/${id}`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Create location\r\n  createLocation(location: Partial<Location>): Observable<LocationResponse> {\r\n    return this.http.post<LocationResponse>(this.apiUrl, location, this.getAuthHeaders());\r\n  }\r\n\r\n  // Update location\r\n  updateLocation(id: number, location: Partial<Location>): Observable<LocationResponse> {\r\n    return this.http.put<LocationResponse>(`${this.apiUrl}/${id}`, location, this.getAuthHeaders());\r\n  }\r\n\r\n  // Delete location\r\n  deleteLocation(id: number): Observable<{ success: boolean; message: string }> {\r\n    return this.http.delete<{ success: boolean; message: string }>(`${this.apiUrl}/${id}`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Bulk create locations\r\n  bulkCreateLocations(locations: Partial<Location>[]): Observable<LocationResponse> {\r\n    return this.http.post<LocationResponse>(`${this.apiUrl}/bulk`, { locations }, this.getAuthHeaders());\r\n  }\r\n\r\n  // Move locations\r\n  moveLocations(locationIds: number[], newParentId?: number | null): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/move`, {\r\n      location_ids: locationIds,\r\n      new_parent_id: newParentId\r\n    }, this.getAuthHeaders());\r\n  }\r\n\r\n  // Get QR code\r\n  getQRCode(id: number, action: string = 'download', format: string = 'png'): Observable<Blob> {\r\n    const params = new HttpParams()\r\n      .set('action', action)\r\n      .set('format', format);\r\n    \r\n    return this.http.get(`${this.apiUrl}/${id}/qr`, {\r\n      params,\r\n      responseType: 'blob',\r\n      ...this.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Get location types\r\n  getLocationTypes(hierarchyLevel?: number): Observable<LocationTypesResponse> {\r\n    let params = new HttpParams();\r\n    if (hierarchyLevel !== undefined) {\r\n      params = params.set('hierarchy_level', hierarchyLevel.toString());\r\n    }\r\n    \r\n    return this.http.get<LocationTypesResponse>(`${environment.apiUrl}/location-types`, { \r\n      params,\r\n      ...this.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Get hierarchy\r\n  getHierarchy(): Observable<HierarchyResponse> {\r\n    return this.http.get<HierarchyResponse>(`${environment.apiUrl}/locations-hierarchy`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Get possible parents\r\n  getPossibleParents(typeId: number, locationId?: number): Observable<any> {\r\n    let params = new HttpParams().set('type_id', typeId.toString());\r\n    if (locationId) {\r\n      params = params.set('location_id', locationId.toString());\r\n    }\r\n    \r\n    const url = locationId \r\n      ? `${environment.apiUrl}/locations/possible-parents/${locationId}`\r\n      : `${environment.apiUrl}/locations/possible-parents`;\r\n    \r\n    return this.http.get(url, { \r\n      params,\r\n      ...this.getAuthHeaders()\r\n    });\r\n  }\r\n}"],
  "mappings": "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",
  "names": []
}
