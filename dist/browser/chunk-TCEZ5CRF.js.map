{"version":3,"sources":["src/app/locations/services/location.service.ts","src/app/shared/services/google-places.service.ts","src/app/locations/components/add-location-modal/add-location-modal.component.ts","src/app/locations/components/add-location-modal/add-location-modal.component.html","src/app/locations/components/edit-location-modal/edit-location-modal.component.ts","src/app/locations/components/edit-location-modal/edit-location-modal.component.html","src/app/locations/components/delete-confirmation-modal/delete-confirmation-modal.component.ts","src/app/locations/components/delete-confirmation-modal/delete-confirmation-modal.component.html","src/app/locations/components/bulk-create-modal/bulk-create-modal.component.ts","src/app/locations/components/bulk-create-modal/bulk-create-modal.component.html","node_modules/@angular/cdk/fesm2022/shadow-dom-B0oHn41l.mjs","node_modules/@angular/cdk/fesm2022/fake-event-detection-DWOdFTFz.mjs","node_modules/@angular/cdk/fesm2022/element-x4z00URv.mjs","node_modules/@angular/cdk/fesm2022/backwards-compatibility-DHR38MsD.mjs","node_modules/@angular/cdk/fesm2022/style-loader-Cu9AvjH9.mjs","node_modules/@angular/cdk/fesm2022/platform-DmdVEw_C.mjs","node_modules/@angular/cdk/fesm2022/directionality-CBXD4hga.mjs","node_modules/@angular/cdk/fesm2022/scrolling-BkvA05C8.mjs","node_modules/@angular/cdk/fesm2022/bidi.mjs","node_modules/@angular/cdk/fesm2022/data-source-D34wiQZj.mjs","node_modules/@angular/cdk/fesm2022/recycle-view-repeater-strategy-DoWdPqVw.mjs","node_modules/@angular/cdk/fesm2022/scrolling.mjs","node_modules/@angular/cdk/fesm2022/id-generator-Dw_9dSDu.mjs","node_modules/@angular/cdk/fesm2022/array-I1yfCXUO.mjs","node_modules/@angular/cdk/fesm2022/drag-drop.mjs","src/app/locations/components/hierarchy-management/hierarchy-management.component.ts","src/app/locations/components/hierarchy-management/hierarchy-management.component.html","src/app/locations/locations.component.ts","src/app/locations/locations.component.html","src/app/locations/components/location-view/location-view.component.ts","src/app/locations/components/location-view/location-view.component.html","src/app/locations/locations-routing.module.ts","src/app/locations/locations.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport interface LocationType {\r\n  id: number;\r\n  name: string;\r\n  category: string;\r\n  hierarchy_level: number;\r\n  icon: string;\r\n  suggestions: any[];\r\n  created_at: string;\r\n  updated_at: string;\r\n  description?: string;\r\n}\r\n\r\nexport interface Location {\r\n  id: number;\r\n  name: string;\r\n  slug?: string;\r\n  address?: string;\r\n  description?: string;\r\n  location_type_id: number;\r\n  parent_id?: number;\r\n  company_id: number;\r\n  user_id: number;\r\n  hierarchy_level: number;\r\n  latitude?: number;\r\n  longitude?: number;\r\n  qr_code_path?: string;\r\n  qr_code_url?: string;\r\n  quick_chart_qr_url?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  type: LocationType;\r\n  parent?: Location;\r\n  children?: Location[];\r\n  creator?: any;\r\n  asset_summary?: {\r\n    asset_count: number;\r\n    total_value: number;\r\n  };\r\n}\r\n\r\nexport interface LocationsResponse {\r\n  success: boolean;\r\n  data: {\r\n    locations: Location[];\r\n    pagination: {\r\n      current_page: number;\r\n      last_page: number;\r\n      per_page: number;\r\n      total: number;\r\n      from: number;\r\n      to: number;\r\n    };\r\n    filters: {\r\n      search?: string;\r\n      type_id?: number;\r\n      parent_id?: number;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface LocationResponse {\r\n  success: boolean;\r\n  data: {\r\n    location: Location;\r\n    ancestors?: Location[];\r\n    children_count?: number;\r\n    descendants_count?: number;\r\n  };\r\n  message?: string;\r\n}\r\n\r\nexport interface LocationTypesResponse {\r\n  success: boolean;\r\n  data: {\r\n    types: LocationType[];\r\n  };\r\n}\r\n\r\nexport interface HierarchyResponse {\r\n  success: boolean;\r\n  data: {\r\n    hierarchy: any[];\r\n  };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationService {\r\n  private apiUrl = `${environment.apiUrl}/locations`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private getAuthHeaders(): { headers: { [header: string]: string } } {\r\n    const token = localStorage.getItem('token');\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n      }\r\n    };\r\n  }\r\n\r\n  // Get locations with filtering and pagination\r\n  getLocations(params: {\r\n    search?: string;\r\n    type_id?: number;\r\n    parent_id?: number;\r\n    per_page?: number;\r\n    page?: number;\r\n  } = {}): Observable<LocationsResponse> {\r\n    let httpParams = new HttpParams();\r\n    \r\n    Object.keys(params).forEach(key => {\r\n      const value = params[key as keyof typeof params];\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        httpParams = httpParams.set(key, value.toString());\r\n      }\r\n    });\r\n\r\n    return this.http.get<LocationsResponse>(this.apiUrl, { \r\n      params: httpParams,\r\n      ...this.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Get single location\r\n  getLocation(id: number): Observable<LocationResponse> {\r\n    return this.http.get<LocationResponse>(`${this.apiUrl}/${id}`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Create location\r\n  createLocation(location: Partial<Location>): Observable<LocationResponse> {\r\n    return this.http.post<LocationResponse>(this.apiUrl, location, this.getAuthHeaders());\r\n  }\r\n\r\n  // Update location\r\n  updateLocation(id: number, location: Partial<Location>): Observable<LocationResponse> {\r\n    return this.http.put<LocationResponse>(`${this.apiUrl}/${id}`, location, this.getAuthHeaders());\r\n  }\r\n\r\n  // Delete location\r\n  deleteLocation(id: number): Observable<{ success: boolean; message: string }> {\r\n    return this.http.delete<{ success: boolean; message: string }>(`${this.apiUrl}/${id}`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Bulk create locations\r\n  bulkCreateLocations(locations: Partial<Location>[]): Observable<LocationResponse> {\r\n    return this.http.post<LocationResponse>(`${this.apiUrl}/bulk`, { locations }, this.getAuthHeaders());\r\n  }\r\n\r\n  // Move locations\r\n  moveLocations(locationIds: number[], newParentId?: number | null): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/move`, {\r\n      location_ids: locationIds,\r\n      new_parent_id: newParentId\r\n    }, this.getAuthHeaders());\r\n  }\r\n\r\n  // Get QR code\r\n  getQRCode(id: number, action: string = 'download', format: string = 'png'): Observable<Blob> {\r\n    const params = new HttpParams()\r\n      .set('action', action)\r\n      .set('format', format);\r\n    \r\n    return this.http.get(`${this.apiUrl}/${id}/qr`, {\r\n      params,\r\n      responseType: 'blob',\r\n      ...this.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Get location types\r\n  getLocationTypes(hierarchyLevel?: number): Observable<LocationTypesResponse> {\r\n    let params = new HttpParams();\r\n    if (hierarchyLevel !== undefined) {\r\n      params = params.set('hierarchy_level', hierarchyLevel.toString());\r\n    }\r\n    \r\n    return this.http.get<LocationTypesResponse>(`${environment.apiUrl}/location-types`, { \r\n      params,\r\n      ...this.getAuthHeaders()\r\n    });\r\n  }\r\n\r\n  // Get hierarchy\r\n  getHierarchy(): Observable<HierarchyResponse> {\r\n    return this.http.get<HierarchyResponse>(`${environment.apiUrl}/locations-hierarchy`, this.getAuthHeaders());\r\n  }\r\n\r\n  // Get possible parents\r\n  getPossibleParents(typeId: number, locationId?: number): Observable<any> {\r\n    let params = new HttpParams().set('type_id', typeId.toString());\r\n    if (locationId) {\r\n      params = params.set('location_id', locationId.toString());\r\n    }\r\n    \r\n    const url = locationId \r\n      ? `${environment.apiUrl}/locations/possible-parents/${locationId}`\r\n      : `${environment.apiUrl}/locations/possible-parents`;\r\n    \r\n    return this.http.get(url, { \r\n      params,\r\n      ...this.getAuthHeaders()\r\n    });\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    google: any;\r\n  }\r\n}\r\n\r\nexport interface PlaceResult {\r\n  formatted_address: string;\r\n  place_id: string;\r\n  geometry?: {\r\n    location: {\r\n      lat: () => number;\r\n      lng: () => number;\r\n    };\r\n  };\r\n  address_components?: any[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GooglePlacesService {\r\n  private isLoaded = false;\r\n  private loadPromise: Promise<void> | null = null;\r\n\r\n  constructor() {}\r\n\r\n  async loadGoogleMaps(): Promise<void> {\r\n    if (this.isLoaded) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    if (this.loadPromise) {\r\n      return this.loadPromise;\r\n    }\r\n\r\n    this.loadPromise = new Promise((resolve, reject) => {\r\n      if (typeof window.google !== 'undefined' && window.google.maps) {\r\n        this.isLoaded = true;\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      // Check if script is already loading\r\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\r\n      if (existingScript) {\r\n        existingScript.addEventListener('load', () => {\r\n          this.isLoaded = true;\r\n          resolve();\r\n        });\r\n        existingScript.addEventListener('error', reject);\r\n        return;\r\n      }\r\n\r\n      // If no script exists, wait for it to load (it should be in index.html)\r\n      const checkGoogle = () => {\r\n        if (typeof window.google !== 'undefined' && window.google.maps) {\r\n          this.isLoaded = true;\r\n          resolve();\r\n        } else {\r\n          setTimeout(checkGoogle, 100);\r\n        }\r\n      };\r\n      checkGoogle();\r\n    });\r\n\r\n    return this.loadPromise;\r\n  }\r\n\r\n  async initializeAutocomplete(\r\n    inputElement: HTMLInputElement,\r\n    onPlaceSelected: (place: PlaceResult) => void,\r\n    options: any = {}\r\n  ): Promise<any> {\r\n    await this.loadGoogleMaps();\r\n\r\n    const defaultOptions = {\r\n      types: ['geocode'],\r\n      fields: ['formatted_address', 'place_id', 'geometry', 'address_components']\r\n    };\r\n\r\n    const autocompleteOptions = { ...defaultOptions, ...options };\r\n\r\n    const autocomplete = new window.google.maps.places.Autocomplete(\r\n      inputElement,\r\n      autocompleteOptions\r\n    );\r\n\r\n    autocomplete.addListener('place_changed', () => {\r\n      const place = autocomplete.getPlace();\r\n      if (place && place.formatted_address) {\r\n        onPlaceSelected({\r\n          formatted_address: place.formatted_address,\r\n          place_id: place.place_id,\r\n          geometry: place.geometry,\r\n          address_components: place.address_components\r\n        });\r\n      }\r\n    });\r\n\r\n    return autocomplete;\r\n  }\r\n\r\n  async searchPlaces(query: string, options: any = {}): Promise<PlaceResult[]> {\r\n    await this.loadGoogleMaps();\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const service = new window.google.maps.places.PlacesService(\r\n        document.createElement('div')\r\n      );\r\n\r\n      const request = {\r\n        query: query,\r\n        fields: ['formatted_address', 'place_id', 'geometry'],\r\n        ...options\r\n      };\r\n\r\n      service.textSearch(request, (results: any[], status: any) => {\r\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n          resolve(results || []);\r\n        } else {\r\n          reject(new Error(`Places search failed: ${status}`));\r\n        }\r\n      });\r\n    });\r\n  }\r\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { LocationService, LocationType, Location } from '../../services/location.service';\r\nimport { GooglePlacesService, PlaceResult } from '../../../shared/services/google-places.service';\r\nimport { AfterViewInit, ViewChild, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Google Maps types\r\ndeclare var google: any;\r\n\r\n@Component({\r\n  selector: 'app-add-location-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './add-location-modal.component.html',\r\n  styleUrl: './add-location-modal.component.scss',\r\n  animations: [\r\n    trigger('backdropAnimation', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('150ms ease-out', style({ opacity: 1 }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('150ms ease-in', style({ opacity: 0 }))\r\n      ])\r\n    ]),\r\n    trigger('modalAnimation', [\r\n      transition(':enter', [\r\n        style({ \r\n          opacity: 0, \r\n          transform: 'scale(0.7) translateY(-50px)' \r\n        }),\r\n        animate('200ms ease-out', style({ \r\n          opacity: 1, \r\n          transform: 'scale(1) translateY(0)' \r\n        }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('150ms ease-in', style({ \r\n          opacity: 0, \r\n          transform: 'scale(0.7) translateY(-50px)' \r\n        }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class AddLocationModalComponent implements OnInit, AfterViewInit, OnChanges {\r\n  @Input() isOpen = false;\r\n  @Input() parentLocation: Location | null = null;\r\n  @Output() closeModal = new EventEmitter<void>();\r\n  @Output() locationCreated = new EventEmitter<Location>();\r\n  @ViewChild('addressInput', { static: false }) addressInput!: ElementRef<HTMLInputElement>;\r\n\r\n  locationForm: FormGroup;\r\n  locationTypes: LocationType[] = [];\r\n  selectedTypeId: number | null = null;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n  showAllTypes = false;\r\n  autocomplete: any;\r\n\r\n  // Google Maps properties\r\n  showMap = false;\r\n  map: any;\r\n  marker: any;\r\n  geocoder: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private locationService: LocationService,\r\n    private googlePlacesService: GooglePlacesService,\r\n    private http: HttpClient\r\n  ) {\r\n    this.locationForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(2)]],\r\n      description: [''],\r\n      address: [''],\r\n      location_type_id: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadLocationTypes();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // Initialize autocomplete when view is ready\r\n    this.initializeAutocomplete();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // Reinitialize autocomplete when modal opens\r\n    if (changes['isOpen'] && this.isOpen && !changes['isOpen'].firstChange) {\r\n      // Reset form and state when modal opens\r\n      this.resetForm();\r\n      setTimeout(() => {\r\n        this.initializeAutocomplete();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  loadLocationTypes() {\r\n    // Get location types based on parent location hierarchy level\r\n    const hierarchyLevel = this.parentLocation ? this.parentLocation.hierarchy_level + 1 : 0;\r\n    this.locationService.getLocationTypes(hierarchyLevel).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.locationTypes = response.data.types;\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading location types:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  getDisplayedTypes() {\r\n    return this.showAllTypes ? this.locationTypes : this.locationTypes.slice(0, 6);\r\n  }\r\n\r\n  selectLocationType(type: LocationType) {\r\n    this.selectedTypeId = type.id;\r\n    this.locationForm.patchValue({ location_type_id: type.id });\r\n  }\r\n\r\n  getTypeDescription(type: LocationType): string {\r\n    return type.description || `${type.category}`;\r\n  }\r\n\r\n  getTypeIcon(type: LocationType): string {\r\n    return `assets/icons/${type.icon}.svg`;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.locationForm.valid && !this.isLoading) {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n\r\n      const locationData = {\r\n        ...this.locationForm.value,\r\n        parent_id: this.parentLocation ? this.parentLocation.id : null\r\n      };\r\n\r\n      this.locationService.createLocation(locationData).subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.locationCreated.emit(response.data.location);\r\n            this.closeModalHandler();\r\n          } else {\r\n            this.errorMessage = response.message || 'Failed to create location';\r\n          }\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          this.errorMessage = error.error?.message || 'An error occurred while creating the location';\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private async initializeAutocomplete() {\r\n    // Wait for the view to be fully rendered\r\n    setTimeout(async () => {\r\n      if (this.addressInput?.nativeElement && this.isOpen) {\r\n        try {\r\n          // Clear any existing autocomplete\r\n          if (this.autocomplete) {\r\n            this.autocomplete = null;\r\n          }\r\n\r\n                     this.autocomplete = await this.googlePlacesService.initializeAutocomplete(\r\n             this.addressInput.nativeElement,\r\n             (place: PlaceResult) => {\r\n               this.locationForm.patchValue({\r\n                 address: place.formatted_address\r\n               });\r\n               \r\n               // Trigger map display when address is selected\r\n               if (place.geometry && place.geometry.location) {\r\n                 const lat = place.geometry.location.lat();\r\n                 const lng = place.geometry.location.lng();\r\n                 this.showMap = true;\r\n                 setTimeout(() => this.showMapOnCoords(lat, lng), 100);\r\n               }\r\n             },\r\n                         {\r\n               types: ['geocode']\r\n             }\r\n          );\r\n        } catch (error) {\r\n          console.error('Failed to initialize Google Places Autocomplete:', error);\r\n        }\r\n      }\r\n    }, 300);\r\n  }\r\n\r\n  public closeModalHandler() {\r\n    // Clear autocomplete when closing\r\n    if (this.autocomplete) {\r\n      this.autocomplete = null;\r\n    }\r\n    \r\n    // Clean up map resources\r\n    this.cleanupMap();\r\n    \r\n    this.isOpen = false;\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private cleanupMap() {\r\n    // Remove event listeners and clean up map resources\r\n    if (this.marker && typeof google !== 'undefined' && google.maps) {\r\n      try {\r\n        google.maps.event.clearInstanceListeners(this.marker);\r\n        this.marker.setMap(null);\r\n      } catch (error) {\r\n        console.warn('Error cleaning up marker:', error);\r\n      }\r\n      this.marker = undefined;\r\n    }\r\n    \r\n    if (this.map && typeof google !== 'undefined' && google.maps) {\r\n      try {\r\n        google.maps.event.clearInstanceListeners(this.map);\r\n      } catch (error) {\r\n        console.warn('Error cleaning up map:', error);\r\n      }\r\n      this.map = undefined;\r\n    }\r\n    \r\n    // Clear the map container\r\n    const mapElement = document.getElementById('location-map');\r\n    if (mapElement) {\r\n      mapElement.innerHTML = '';\r\n    }\r\n    \r\n    this.geocoder = undefined;\r\n    this.showMap = false;\r\n  }\r\n\r\n  public toggleShowAllTypes() {\r\n    this.showAllTypes = !this.showAllTypes;\r\n  }\r\n\r\n  resetForm() {\r\n    this.locationForm.reset();\r\n    this.selectedTypeId = null;\r\n    this.errorMessage = '';\r\n    this.showAllTypes = false;\r\n    this.isLoading = false;\r\n    \r\n    // Clean up map when resetting form\r\n    this.cleanupMap();\r\n    \r\n    // Clear any existing autocomplete\r\n    if (this.autocomplete) {\r\n      this.autocomplete = null;\r\n    }\r\n  }\r\n\r\n  // Map methods\r\n  onAddressChanged() {\r\n    const address = this.locationForm.get('address')?.value;\r\n    if (address && address.trim().length > 0) {\r\n      this.geocodeAddress();\r\n    } else {\r\n      this.showMap = false;\r\n      if (this.map) {\r\n        this.map = undefined;\r\n        this.marker = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  geocodeAddress() {\r\n    const address = this.locationForm.get('address')?.value;\r\n    if (!address) return;\r\n\r\n    // Check if Google Maps is loaded\r\n    if (typeof google === 'undefined' || !google.maps) {\r\n      console.warn('Google Maps not loaded yet');\r\n      return;\r\n    }\r\n\r\n    if (!this.geocoder) {\r\n      this.geocoder = new google.maps.Geocoder();\r\n    }\r\n\r\n    this.geocoder.geocode({ address: address }, (results: any, status: any) => {\r\n      if (status === 'OK' && results && results.length > 0) {\r\n        const location = results[0].geometry.location;\r\n        const lat = location.lat();\r\n        const lng = location.lng();\r\n        this.showMap = true;\r\n        setTimeout(() => this.showMapOnCoords(lat, lng), 100);\r\n      }\r\n    });\r\n  }\r\n\r\n  showMapOnCoords(lat: number, lng: number) {\r\n    const mapElement = document.getElementById('location-map');\r\n    if (!mapElement) {\r\n      console.warn('Map element not found');\r\n      return;\r\n    }\r\n\r\n    // Check if Google Maps is loaded\r\n    if (typeof google === 'undefined' || !google.maps) {\r\n      console.warn('Google Maps not loaded yet');\r\n      return;\r\n    }\r\n\r\n    // Ensure map element is visible and has dimensions\r\n    if (mapElement.offsetWidth === 0 || mapElement.offsetHeight === 0) {\r\n      console.warn('Map element has no dimensions');\r\n      return;\r\n    }\r\n\r\n    if (!this.map) {\r\n      this.map = new google.maps.Map(mapElement, {\r\n        center: { lat: lat, lng: lng },\r\n        zoom: 15,\r\n        mapTypeId: 'roadmap',\r\n        mapTypeControl: false,\r\n        streetViewControl: false,\r\n        fullscreenControl: false\r\n      });\r\n    } else {\r\n      this.map.setCenter({ lat: lat, lng: lng });\r\n    }\r\n    \r\n    if (this.marker) {\r\n      this.marker.setPosition({ lat: lat, lng: lng });\r\n    } else {\r\n      this.marker = new google.maps.Marker({\r\n        position: { lat: lat, lng: lng },\r\n        map: this.map,\r\n        title: this.locationForm.get('name')?.value || 'Location',\r\n        draggable: true\r\n      });\r\n\r\n      // Add drag event listeners\r\n      this.marker.addListener('dragend', () => {\r\n        const position = this.marker.getPosition();\r\n        if (position) {\r\n          this.reverseGeocode(position.lat(), position.lng());\r\n        }\r\n      });\r\n\r\n      // Add click event listener to the map for placing marker\r\n      this.map.addListener('click', (event: any) => {\r\n        const position = event.latLng;\r\n        this.marker.setPosition(position);\r\n        this.reverseGeocode(position.lat(), position.lng());\r\n      });\r\n    }\r\n  }\r\n\r\n  reverseGeocode(lat: number, lng: number) {\r\n    if (!this.geocoder) {\r\n      this.geocoder = new google.maps.Geocoder();\r\n    }\r\n\r\n    this.geocoder.geocode({ location: { lat: lat, lng: lng } }, (results: any, status: any) => {\r\n      if (status === 'OK' && results && results.length > 0) {\r\n        const address = results[0].formatted_address;\r\n        this.locationForm.patchValue({ address: address });\r\n      }\r\n    });\r\n  }\r\n}","<!-- Modal Backdrop -->\r\n<div *ngIf=\"isOpen\" \r\n     class=\"fixed inset-0 bg-[#00000085] flex items-center justify-center z-50 p-4 animate-fade-in\"\r\n     [@backdropAnimation]>\r\n  <!-- Modal Container -->\r\n  <div class=\"bg-white rounded-2xl shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\"\r\n       [@modalAnimation]>\r\n    <!-- Modal Header -->\r\n    <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n      <div class=\"flex items-center space-x-3\">\r\n        <div class=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n          <svg class=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path>\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h2 class=\"text-xl font-semibold text-gray-900\">Add New Location</h2>\r\n      </div>\r\n      <button\r\n        (click)=\"closeModalHandler()\"\r\n        class=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\">\r\n        <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Modal Content -->\r\n    <div class=\"p-6\">\r\n      <!-- Add New Facility Section -->\r\n      <div class=\"text-center mb-8\">\r\n        <div class=\"w-16 h-16 bg-blue-50 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n          <svg class=\"w-8 h-8 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n          </svg>\r\n        </div>\r\n        <h3 class=\"text-lg font-semibold text-gray-900 mb-2\">\r\n          {{parentLocation ? 'Add New Sub-location' : 'Add New Facility'}}\r\n        </h3>\r\n        <p class=\"text-gray-600 text-sm\">\r\n          {{parentLocation ? 'Create a new sub-location under ' + parentLocation.name : 'Create a new top-level facility or community'}}\r\n        </p>\r\n\r\n        <!-- Location Hierarchy Info -->\r\n        <div *ngIf=\"!parentLocation\" class=\"mt-4 p-4 bg-blue-50 rounded-lg\">\r\n          <p class=\"text-sm font-medium text-blue-900 mb-2\">Location Hierarchy:</p>\r\n          <div class=\"text-xs text-blue-700 space-y-1\">\r\n            <div><strong>Level 0:</strong> Communities, Campuses, Buildings</div>\r\n            <div><strong>Level 1:</strong> Buildings, Floors</div>\r\n            <div><strong>Level 2+:</strong> Rooms, Areas, Amenities</div>\r\n          </div>\r\n          <p class=\"text-xs text-blue-600 mt-2\">Available types: 16 options including Community, Campus, and Buildings</p>\r\n        </div>\r\n        \r\n        <!-- Parent Location Info -->\r\n        <div *ngIf=\"parentLocation\" class=\"mt-4 p-4 bg-green-50 rounded-lg\">\r\n          <div class=\"flex items-center space-x-3\">\r\n            <div class=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">\r\n              <img [src]=\"parentLocation.type.icon\" [alt]=\"parentLocation.type.name\" class=\"w-6 h-6\">\r\n            </div>\r\n            <div class=\"text-left\">\r\n              <p class=\"text-sm font-medium text-green-900\">Parent Location:</p>\r\n              <p class=\"text-sm text-green-700\">{{parentLocation.name}} ({{parentLocation.type.name}})</p>\r\n              <p class=\"text-xs text-green-600\">Creating Level {{parentLocation.hierarchy_level + 1}} location</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <form [formGroup]=\"locationForm\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- Basic Information Section -->\r\n        <div class=\"mb-8\">\r\n          <div class=\"flex items-center space-x-2 mb-4\">\r\n            <svg class=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n            </svg>\r\n            <h4 class=\"text-lg font-semibold text-gray-900\">Basic Information</h4>\r\n          </div>\r\n\r\n          <!-- Location Name -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Location Name <span class=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              placeholder=\"Enter location name\"\r\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400\"\r\n              [class.border-red-300]=\"locationForm.get('name')?.invalid && locationForm.get('name')?.touched\">\r\n          </div>\r\n\r\n          <!-- Description -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"description\" class=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\r\n            <textarea\r\n              id=\"description\"\r\n              formControlName=\"description\"\r\n              rows=\"3\"\r\n              placeholder=\"Brief description of this location\"\r\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400 resize-none\"></textarea>\r\n          </div>\r\n\r\n          <!-- Address -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"address\" class=\"block text-sm font-medium text-gray-700 mb-2\">Address</label>\r\n            <div class=\"relative\">\r\n              <svg class=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path>\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n              </svg>\r\n              <input\r\n                id=\"address\"\r\n                type=\"text\"\r\n                #addressInput\r\n                formControlName=\"address\"\r\n                placeholder=\"Enter location address\"\r\n                class=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400\"\r\n                autocomplete=\"off\"\r\n                (blur)=\"onAddressChanged()\">\r\n            </div>\r\n            <div class=\"text-xs text-gray-500 mt-1\">Enter the physical address of the location</div>\r\n            \r\n            <!-- Interactive Map -->\r\n            <div *ngIf=\"showMap\" class=\"mt-4\">\r\n              <div class=\"text-xs text-gray-600 mb-2 flex items-center\">\r\n                <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"></path>\r\n                </svg>\r\n                Drag the marker or click on the map to adjust the location\r\n              </div>\r\n              <div id=\"location-map\" style=\"height: 300px; width: 100%; border-radius: 0.5rem; border: 1px solid #e5e7eb;\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Location Type Section -->\r\n        <div class=\"mb-8\">\r\n          <div class=\"flex items-center space-x-2 mb-4\">\r\n            <svg class=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n            </svg>\r\n            <h4 class=\"text-lg font-semibold text-gray-900\">Location Type</h4>\r\n          </div>\r\n\r\n\r\n          <!-- Location Type Grid -->\r\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n            <div\r\n              *ngFor=\"let type of getDisplayedTypes()\"\r\n              (click)=\"selectLocationType(type)\"\r\n              [class]=\"selectedTypeId === type.id ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-gray-300'\"\r\n              class=\"border-2 rounded-lg p-4 cursor-pointer transition-all hover:shadow-sm\">\r\n              <div class=\"text-center\">\r\n                <div class=\"mb-2 flex justify-center\">\r\n                  <img [src]=\"type.icon\" [alt]=\"type.name\" class=\"w-8 h-8 text-gray-600\">\r\n                </div>\r\n                <div class=\"font-medium text-gray-900 mb-1\">{{type.name}}</div>\r\n                <div class=\"text-xs text-gray-500\">{{getTypeDescription(type)}}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Show More Types Button -->\r\n          <div *ngIf=\"locationTypes.length > 6\" class=\"text-center\">\r\n            <button\r\n              type=\"button\"\r\n              (click)=\"toggleShowAllTypes()\"\r\n              class=\"flex items-center space-x-2 mx-auto px-4 py-2 text-sm text-gray-600 hover:text-gray-800 transition-colors\">\r\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n              </svg>\r\n              <span>{{showAllTypes ? 'Show Less' : locationTypes.length - 6 + ' More Types'}}</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Error Message -->\r\n        <div *ngIf=\"errorMessage\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n          <p class=\"text-red-600 text-sm\">{{errorMessage}}</p>\r\n        </div>\r\n\r\n        <!-- Modal Footer -->\r\n        <div class=\"flex items-center justify-between pt-6 border-t border-gray-200\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"closeModalHandler()\"\r\n            class=\"px-6 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors\">\r\n            Use Template\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"locationForm.invalid || isLoading\"\r\n            class=\"px-6 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all disabled:opacity-50 disabled:cursor-not-allowed\">\r\n            <span *ngIf=\"!isLoading\">Create Location</span>\r\n            <span *ngIf=\"isLoading\" class=\"flex items-center space-x-2\">\r\n              <svg class=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              <span>Creating...</span>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { LocationService, LocationType, Location } from '../../services/location.service';\r\nimport { GooglePlacesService, PlaceResult } from '../../../shared/services/google-places.service';\r\nimport { AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Google Maps types\r\ndeclare var google: any;\r\n\r\n@Component({\r\n  selector: 'app-edit-location-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './edit-location-modal.component.html',\r\n  styleUrl: './edit-location-modal.component.scss',\r\n  animations: [\r\n    trigger('backdropAnimation', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('150ms ease-out', style({ opacity: 1 }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('150ms ease-in', style({ opacity: 0 }))\r\n      ])\r\n    ]),\r\n    trigger('modalAnimation', [\r\n      transition(':enter', [\r\n        style({ \r\n          opacity: 0, \r\n          transform: 'scale(0.7) translateY(-50px)' \r\n        }),\r\n        animate('200ms ease-out', style({ \r\n          opacity: 1, \r\n          transform: 'scale(1) translateY(0)' \r\n        }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('150ms ease-in', style({ \r\n          opacity: 0, \r\n          transform: 'scale(0.7) translateY(-50px)' \r\n        }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class EditLocationModalComponent implements OnInit, OnChanges, AfterViewInit {\r\n  @Input() isOpen = false;\r\n  @Input() location: Location | null = null;\r\n  @Output() closeModal = new EventEmitter<void>();\r\n  @Output() locationUpdated = new EventEmitter<Location>();\r\n  @ViewChild('addressInput', { static: false }) addressInput!: ElementRef<HTMLInputElement>;\r\n\r\n  editForm: FormGroup;\r\n  locationTypes: LocationType[] = [];\r\n  selectedTypeId: number | null = null;\r\n  loading = false;\r\n  errorMessage = '';\r\n  showAllTypes = false;\r\n  autocomplete: any;\r\n\r\n  // Google Maps properties\r\n  showMap = false;\r\n  map: any;\r\n  marker: any;\r\n  geocoder: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private locationService: LocationService,\r\n    private googlePlacesService: GooglePlacesService,\r\n    private http: HttpClient\r\n  ) {\r\n    this.editForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(2)]],\r\n      description: [''],\r\n      address: [''],\r\n      location_type_id: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadLocationTypes();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.isOpen) {\r\n      this.initializeAutocomplete();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['location'] && this.location) {\r\n      this.populateForm();\r\n    }\r\n    \r\n    // Reinitialize autocomplete when modal opens\r\n    if (changes['isOpen'] && this.isOpen && !changes['isOpen'].firstChange) {\r\n      setTimeout(() => {\r\n        this.initializeAutocomplete();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  private async initializeAutocomplete() {\r\n    // Wait for the view to be fully rendered\r\n    setTimeout(async () => {\r\n      if (this.addressInput?.nativeElement && this.isOpen) {\r\n        try {\r\n          // Clear any existing autocomplete\r\n          if (this.autocomplete) {\r\n            this.autocomplete = null;\r\n          }\r\n\r\n                     this.autocomplete = await this.googlePlacesService.initializeAutocomplete(\r\n             this.addressInput.nativeElement,\r\n             (place: PlaceResult) => {\r\n               this.editForm.patchValue({\r\n                 address: place.formatted_address\r\n               });\r\n               \r\n               // Trigger map display when address is selected\r\n               if (place.geometry && place.geometry.location) {\r\n                 const lat = place.geometry.location.lat();\r\n                 const lng = place.geometry.location.lng();\r\n                 this.showMap = true;\r\n                 setTimeout(() => this.showMapOnCoords(lat, lng), 100);\r\n               }\r\n             },\r\n                         {\r\n               types: ['geocode']\r\n             }\r\n          );\r\n        } catch (error) {\r\n          console.error('Failed to initialize Google Places Autocomplete:', error);\r\n        }\r\n      }\r\n    }, 300);\r\n  }\r\n\r\n  loadLocationTypes() {\r\n    // Get location types based on current location's hierarchy level\r\n    const hierarchyLevel = this.location?.hierarchy_level;\r\n    this.locationService.getLocationTypes(hierarchyLevel).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.locationTypes = response.data.types;\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading location types:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n     populateForm() {\r\n     if (this.location) {\r\n       this.editForm.patchValue({\r\n         name: this.location.name,\r\n         description: this.location.description || '',\r\n         address: this.location.address || '',\r\n         location_type_id: this.location.location_type_id\r\n       });\r\n       this.selectedTypeId = this.location?.location_type_id || null;\r\n       \r\n               // Show map if location has coordinates\r\n        if (this.location && this.location.latitude !== undefined && this.location.longitude !== undefined) {\r\n          this.showMap = true;\r\n          const lat = this.location.latitude;\r\n          const lng = this.location.longitude;\r\n          setTimeout(() => this.showMapOnCoords(lat, lng), 100);\r\n        } else if (this.location && this.location.address) {\r\n          // Geocode the address to show on map\r\n          this.geocodeAddress();\r\n        }\r\n     }\r\n   }\r\n\r\n  getDisplayedTypes() {\r\n    return this.showAllTypes ? this.locationTypes : this.locationTypes.slice(0, 6);\r\n  }\r\n\r\n  selectLocationType(type: LocationType) {\r\n    this.selectedTypeId = type.id;\r\n    this.editForm.patchValue({ location_type_id: type.id });\r\n  }\r\n\r\n  getTypeDescription(type: LocationType): string {\r\n    return type.description || `${type.category}`;\r\n  }\r\n\r\n  getTypeIcon(type: LocationType): string {\r\n    return `assets/icons/${type.icon}.svg`;\r\n  }\r\n\r\n  public onSubmit() {\r\n    if (this.editForm.valid && !this.loading && this.location) {\r\n      this.loading = true;\r\n      this.errorMessage = '';\r\n\r\n      const updateData = {\r\n        ...this.editForm.value\r\n      };\r\n\r\n      this.locationService.updateLocation(this.location.id, updateData).subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.locationUpdated.emit(response.data.location);\r\n            this.closeModalHandler();\r\n          } else {\r\n            this.errorMessage = response.message || 'Failed to update location';\r\n          }\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          this.errorMessage = error.error?.message || 'An error occurred while updating the location';\r\n          this.loading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public closeModalHandler() {\r\n    // Clear autocomplete when closing\r\n    if (this.autocomplete) {\r\n      this.autocomplete = null;\r\n    }\r\n    \r\n    // Clean up map resources\r\n    this.cleanupMap();\r\n    \r\n    this.isOpen = false;\r\n    this.closeModal.emit();\r\n    this.resetForm();\r\n  }\r\n\r\n  private cleanupMap() {\r\n    // Remove event listeners and clean up map resources\r\n    if (this.marker && typeof google !== 'undefined' && google.maps) {\r\n      try {\r\n        google.maps.event.clearInstanceListeners(this.marker);\r\n        this.marker.setMap(null);\r\n      } catch (error) {\r\n        console.warn('Error cleaning up marker:', error);\r\n      }\r\n      this.marker = undefined;\r\n    }\r\n    \r\n    if (this.map && typeof google !== 'undefined' && google.maps) {\r\n      try {\r\n        google.maps.event.clearInstanceListeners(this.map);\r\n      } catch (error) {\r\n        console.warn('Error cleaning up map:', error);\r\n      }\r\n      this.map = undefined;\r\n    }\r\n    \r\n    // Clear the map container\r\n    const mapElement = document.getElementById('edit-location-map');\r\n    if (mapElement) {\r\n      mapElement.innerHTML = '';\r\n    }\r\n    \r\n    this.geocoder = undefined;\r\n    this.showMap = false;\r\n  }\r\n\r\n  public resetForm() {\r\n    this.editForm.reset();\r\n    this.selectedTypeId = null;\r\n    this.errorMessage = '';\r\n    this.showAllTypes = false;\r\n  }\r\n\r\n  public toggleShowAllTypes() {\r\n    this.showAllTypes = !this.showAllTypes;\r\n  }\r\n\r\n  // Map methods\r\n  onAddressChanged() {\r\n    const address = this.editForm.get('address')?.value;\r\n    if (address && address.trim().length > 0) {\r\n      this.geocodeAddress();\r\n    } else {\r\n      this.showMap = false;\r\n      if (this.map) {\r\n        this.map = undefined;\r\n        this.marker = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  geocodeAddress() {\r\n    const address = this.editForm.get('address')?.value;\r\n    if (!address) return;\r\n\r\n    // Check if Google Maps is loaded\r\n    if (typeof google === 'undefined' || !google.maps) {\r\n      console.warn('Google Maps not loaded yet');\r\n      return;\r\n    }\r\n\r\n    if (!this.geocoder) {\r\n      this.geocoder = new google.maps.Geocoder();\r\n    }\r\n\r\n    this.geocoder.geocode({ address: address }, (results: any, status: any) => {\r\n      if (status === 'OK' && results && results.length > 0) {\r\n        const location = results[0].geometry.location;\r\n        const lat = location.lat();\r\n        const lng = location.lng();\r\n        this.showMap = true;\r\n        setTimeout(() => this.showMapOnCoords(lat, lng), 100);\r\n      }\r\n    });\r\n  }\r\n\r\n  showMapOnCoords(lat: number, lng: number) {\r\n    const mapElement = document.getElementById('edit-location-map');\r\n    if (!mapElement) {\r\n      console.warn('Map element not found');\r\n      return;\r\n    }\r\n\r\n    // Check if Google Maps is loaded\r\n    if (typeof google === 'undefined' || !google.maps) {\r\n      console.warn('Google Maps not loaded yet');\r\n      return;\r\n    }\r\n\r\n    // Ensure map element is visible and has dimensions\r\n    if (mapElement.offsetWidth === 0 || mapElement.offsetHeight === 0) {\r\n      console.warn('Map element has no dimensions');\r\n      return;\r\n    }\r\n\r\n    if (!this.map) {\r\n      this.map = new google.maps.Map(mapElement, {\r\n        center: { lat: lat, lng: lng },\r\n        zoom: 15,\r\n        mapTypeId: 'roadmap',\r\n        mapTypeControl: false,\r\n        streetViewControl: false,\r\n        fullscreenControl: false\r\n      });\r\n    } else {\r\n      this.map.setCenter({ lat: lat, lng: lng });\r\n    }\r\n    \r\n    if (this.marker) {\r\n      this.marker.setPosition({ lat: lat, lng: lng });\r\n    } else {\r\n      this.marker = new google.maps.Marker({\r\n        position: { lat: lat, lng: lng },\r\n        map: this.map,\r\n        title: this.editForm.get('name')?.value || 'Location',\r\n        draggable: true\r\n      });\r\n\r\n      // Add drag event listeners\r\n      this.marker.addListener('dragend', () => {\r\n        const position = this.marker.getPosition();\r\n        if (position) {\r\n          this.reverseGeocode(position.lat(), position.lng());\r\n        }\r\n      });\r\n\r\n      // Add click event listener to the map for placing marker\r\n      this.map.addListener('click', (event: any) => {\r\n        const position = event.latLng;\r\n        this.marker.setPosition(position);\r\n        this.reverseGeocode(position.lat(), position.lng());\r\n      });\r\n    }\r\n  }\r\n\r\n  reverseGeocode(lat: number, lng: number) {\r\n    if (!this.geocoder) {\r\n      this.geocoder = new google.maps.Geocoder();\r\n    }\r\n\r\n    this.geocoder.geocode({ location: { lat: lat, lng: lng } }, (results: any, status: any) => {\r\n      if (status === 'OK' && results && results.length > 0) {\r\n        const address = results[0].formatted_address;\r\n        this.editForm.patchValue({ address: address });\r\n      }\r\n    });\r\n  }\r\n}","<!-- Edit Location Modal Component HTML -->\r\n<div *ngIf=\"isOpen\" \r\n     class=\"fixed inset-0 bg-[#00000085] flex items-center justify-center z-50 p-4 animate-fade-in\"\r\n     [@backdropAnimation]>\r\n  <!-- Modal Container -->\r\n  <div class=\"bg-white rounded-2xl shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\"\r\n       [@modalAnimation]>\r\n    <!-- Modal Header -->\r\n    <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n      <div class=\"flex items-center space-x-3\">\r\n        <div class=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n          <svg class=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h2 class=\"text-xl font-semibold text-gray-900\">Edit Location</h2>\r\n      </div>\r\n      <button\r\n        (click)=\"closeModalHandler()\"\r\n        class=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\">\r\n        <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Modal Content -->\r\n    <div class=\"p-6\">\r\n      <!-- Error Message -->\r\n      <div *ngIf=\"errorMessage\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n        <p class=\"text-red-600 text-sm\">{{errorMessage}}</p>\r\n      </div>\r\n\r\n      <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- Basic Information Section -->\r\n        <div class=\"mb-8\">\r\n          <div class=\"flex items-center space-x-2 mb-4\">\r\n            <svg class=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n            </svg>\r\n            <h4 class=\"text-lg font-semibold text-gray-900\">Basic Information</h4>\r\n          </div>\r\n\r\n          <!-- Location Name -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Location Name <span class=\"text-red-500\">*</span>\r\n            </label>\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              placeholder=\"Enter location name\"\r\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400\"\r\n              [class.border-red-300]=\"editForm.get('name')?.invalid && editForm.get('name')?.touched\"\r\n              required>\r\n          </div>\r\n\r\n          <!-- Description -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"description\" class=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\r\n            <textarea\r\n              id=\"description\"\r\n              formControlName=\"description\"\r\n              rows=\"3\"\r\n              placeholder=\"Brief description of this location\"\r\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400 resize-none\"></textarea>\r\n          </div>\r\n\r\n          <!-- Address -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"address\" class=\"block text-sm font-medium text-gray-700 mb-2\">Address</label>\r\n            <div class=\"relative\">\r\n              <svg class=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path>\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n              </svg>\r\n              <input\r\n                id=\"address\"\r\n                type=\"text\"\r\n                #addressInput\r\n                formControlName=\"address\"\r\n                placeholder=\"Start typing address...\"\r\n                class=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400\"\r\n                autocomplete=\"off\"\r\n                (blur)=\"onAddressChanged()\">\r\n            </div>\r\n            <p class=\"text-xs text-gray-500 mt-1\">\r\n              <svg class=\"w-3 h-3 inline mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n              </svg>\r\n              Address suggestions powered by Google Places\r\n            </p>\r\n            \r\n            <!-- Interactive Map -->\r\n            <div *ngIf=\"showMap\" class=\"mt-4\">\r\n              <div class=\"text-xs text-gray-600 mb-2 flex items-center\">\r\n                <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"></path>\r\n                </svg>\r\n                Drag the marker or click on the map to adjust the location\r\n              </div>\r\n              <div id=\"edit-location-map\" style=\"height: 300px; width: 100%; border-radius: 0.5rem; border: 1px solid #e5e7eb;\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Location Type Section -->\r\n        <div class=\"mb-8\">\r\n          <div class=\"flex items-center space-x-2 mb-4\">\r\n            <svg class=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n            </svg>\r\n            <h4 class=\"text-lg font-semibold text-gray-900\">Location Type</h4>\r\n          </div>\r\n\r\n          <!-- Current Type Display -->\r\n          <div *ngIf=\"location\" class=\"mb-4 p-4 bg-gray-50 rounded-lg\">\r\n            <div class=\"flex items-center space-x-3\">\r\n              <div class=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n                <img [src]=\"location.type.icon\" [alt]=\"location.type.name\" class=\"w-6 h-6\">\r\n              </div>\r\n              <div>\r\n                <div class=\"font-medium text-gray-900\">{{location.type.name}}</div>\r\n                <div class=\"text-sm text-gray-500\">Current location type</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Location Type Grid -->\r\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n            <div\r\n              *ngFor=\"let type of getDisplayedTypes()\"\r\n              (click)=\"selectLocationType(type)\"\r\n              [class]=\"selectedTypeId === type.id ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-gray-300'\"\r\n              class=\"border-2 rounded-lg p-4 cursor-pointer transition-all hover:shadow-sm\">\r\n              <div class=\"text-center\">\r\n                <div class=\"mb-2 flex justify-center\">\r\n                  <img [src]=\"type.icon\" [alt]=\"type.name\" class=\"w-8 h-8 text-gray-600\">\r\n                </div>\r\n                <div class=\"font-medium text-gray-900 mb-1\">{{type.name}}</div>\r\n                <div class=\"text-xs text-gray-500\">{{getTypeDescription(type)}}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Show More Types Button -->\r\n          <div *ngIf=\"locationTypes.length > 6\" class=\"text-center\">\r\n            <button\r\n              type=\"button\"\r\n              (click)=\"toggleShowAllTypes()\"\r\n              class=\"flex items-center space-x-2 mx-auto px-4 py-2 text-sm text-gray-600 hover:text-gray-800 transition-colors\">\r\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n              </svg>\r\n              <span>{{showAllTypes ? 'Show Less' : locationTypes.length - 6 + ' More Types'}}</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Modal Footer -->\r\n        <div class=\"flex items-center justify-between pt-6 border-t border-gray-200\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"closeModalHandler()\"\r\n            class=\"px-6 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors\">\r\n            Cancel\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"editForm.invalid || loading\"\r\n            class=\"px-6 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all disabled:opacity-50 disabled:cursor-not-allowed\">\r\n            <span *ngIf=\"!loading\">Update Location</span>\r\n            <span *ngIf=\"loading\" class=\"flex items-center space-x-2\">\r\n              <svg class=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              <span>Updating...</span>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { trigger, transition, style, animate } from '@angular/animations';\r\nimport { LocationService, Location } from '../../services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-confirmation-modal',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './delete-confirmation-modal.component.html',\r\n  styleUrl: './delete-confirmation-modal.component.scss',\r\n  animations: [\r\n    trigger('backdropAnimation', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('150ms ease-out', style({ opacity: 1 }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('150ms ease-in', style({ opacity: 0 }))\r\n      ])\r\n    ]),\r\n    trigger('modalAnimation', [\r\n      transition(':enter', [\r\n        style({ \r\n          opacity: 0, \r\n          transform: 'scale(0.7) translateY(-50px)' \r\n        }),\r\n        animate('200ms ease-out', style({ \r\n          opacity: 1, \r\n          transform: 'scale(1) translateY(0)' \r\n        }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('150ms ease-in', style({ \r\n          opacity: 0, \r\n          transform: 'scale(0.7) translateY(-50px)' \r\n        }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class DeleteConfirmationModalComponent {\r\n  @Input() isOpen = false;\r\n  @Input() location: Location | null = null;\r\n  @Output() closeModal = new EventEmitter<void>();\r\n  @Output() locationDeleted = new EventEmitter<Location>();\r\n\r\n  loading = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private locationService: LocationService) {}\r\n\r\n  confirmDelete() {\r\n    if (!this.location || this.loading) return;\r\n\r\n    this.loading = true;\r\n    this.errorMessage = '';\r\n\r\n    this.locationService.deleteLocation(this.location.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.locationDeleted.emit(this.location!);\r\n          this.closeModalHandler();\r\n        } else {\r\n          this.errorMessage = response.message || 'Failed to delete location';\r\n        }\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        this.errorMessage = error.error?.message || 'An error occurred while deleting the location';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  closeModalHandler() {\r\n    if (this.loading) return;\r\n    \r\n    this.isOpen = false;\r\n    this.closeModal.emit();\r\n    this.resetModal();\r\n  }\r\n\r\n  private resetModal() {\r\n    this.errorMessage = '';\r\n    this.loading = false;\r\n  }\r\n}","<!-- Delete Confirmation Modal -->\r\n<div *ngIf=\"isOpen\"\r\n     class=\"fixed inset-0 bg-[#00000085] flex items-center justify-center z-50 p-4\"\r\n     [@backdropAnimation]>\r\n  <!-- Modal Container -->\r\n  <div class=\"bg-white rounded-2xl shadow-xl max-w-md w-full\"\r\n       [@modalAnimation]>\r\n    <!-- Modal Header -->\r\n    <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n      <div class=\"flex items-center space-x-3\">\r\n        <div class=\"w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center\">\r\n          <svg class=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h2 class=\"text-xl font-semibold text-gray-900\">Delete Location</h2>\r\n      </div>\r\n      <button\r\n        (click)=\"closeModalHandler()\"\r\n        class=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\">\r\n        <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Modal Content -->\r\n    <div class=\"p-6\">\r\n      <!-- Warning Icon -->\r\n      <div class=\"flex justify-center mb-4\">\r\n        <div class=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center\">\r\n          <svg class=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Warning Message -->\r\n      <div class=\"text-center mb-6\">\r\n        <h3 class=\"text-lg font-semibold text-gray-900 mb-2\">Are you sure?</h3>\r\n        <p class=\"text-gray-600 mb-4\">\r\n          You are about to delete the location <strong>\"{{location?.name}}\"</strong>.\r\n          This action cannot be undone.\r\n        </p>\r\n\r\n        <!-- Location Details -->\r\n        <div *ngIf=\"location\" class=\"bg-gray-50 rounded-lg p-4 mb-4\">\r\n          <div class=\"flex items-center space-x-3\">\r\n            <div class=\"w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center\">\r\n              <img [src]=\"location.type.icon\" [alt]=\"location.type.name\" class=\"w-6 h-6\">\r\n            </div>\r\n            <div class=\"text-left\">\r\n              <div class=\"font-medium text-gray-900\">{{location.name}}</div>\r\n              <div class=\"text-sm text-gray-500\">{{location.type.name}}</div>\r\n              <div *ngIf=\"location.children?.length\" class=\"text-xs text-red-600 mt-1\">\r\n                ⚠️ This location has {{location.children?.length}} child location(s)\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Error Message -->\r\n      <div *ngIf=\"errorMessage\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n        <p class=\"text-red-600 text-sm\">{{errorMessage}}</p>\r\n      </div>\r\n\r\n      <!-- Action Buttons -->\r\n      <div class=\"flex items-center justify-end space-x-3\">\r\n        <button\r\n          (click)=\"closeModalHandler()\"\r\n          [disabled]=\"loading\"\r\n          class=\"px-6 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors disabled:opacity-50\">\r\n          Cancel\r\n        </button>\r\n\r\n        <button\r\n          (click)=\"confirmDelete()\"\r\n          [disabled]=\"loading\"\r\n          class=\"px-6 py-2 bg-red-600 text-white font-medium rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition-all disabled:opacity-50 disabled:cursor-not-allowed\">\r\n          <span *ngIf=\"!loading\">Delete Location</span>\r\n          <span *ngIf=\"loading\" class=\"flex items-center space-x-2\">\r\n            <svg class=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            <span>Deleting...</span>\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, FormArray, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { LocationService, LocationType, Location } from '../../services/location.service';\r\nimport { GooglePlacesService, PlaceResult } from '../../../shared/services/google-places.service';\r\nimport { AfterViewInit, ViewChild, ElementRef, QueryList, ViewChildren } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bulk-create-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './bulk-create-modal.component.html',\r\n  styleUrl: './bulk-create-modal.component.scss',\r\n  animations: [\r\n    trigger('backdropAnimation', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('150ms ease-out', style({ opacity: 1 }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('150ms ease-in', style({ opacity: 0 }))\r\n      ])\r\n    ]),\r\n    trigger('modalAnimation', [\r\n      transition(':enter', [\r\n        style({ \r\n          opacity: 0, \r\n          transform: 'scale(0.7) translateY(-50px)' \r\n        }),\r\n        animate('200ms ease-out', style({ \r\n          opacity: 1, \r\n          transform: 'scale(1) translateY(0)' \r\n        }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('150ms ease-in', style({ \r\n          opacity: 0, \r\n          transform: 'scale(0.7) translateY(-50px)' \r\n        }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BulkCreateModalComponent implements OnInit, AfterViewInit {\r\n  @Input() isOpen = false;\r\n  @Output() closeModal = new EventEmitter<void>();\r\n  @Output() locationsCreated = new EventEmitter<Location[]>();\r\n  @ViewChildren('addressInput') addressInputs!: QueryList<ElementRef<HTMLInputElement>>;\r\n\r\n  bulkForm: FormGroup;\r\n  locationTypes: LocationType[] = [];\r\n  isLoading = false;\r\n  errorMessage = '';\r\n  successCount = 0;\r\n  autocompleteInstances: any[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private locationService: LocationService,\r\n    private googlePlacesService: GooglePlacesService\r\n  ) {\r\n    this.bulkForm = this.fb.group({\r\n      locations: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadLocationTypes();\r\n    // Start with 3 rows as shown in the design\r\n    this.addLocationRow();\r\n    this.addLocationRow();\r\n    this.addLocationRow();\r\n    \r\n    // Listen for form value changes to update validation\r\n    this.bulkForm.valueChanges.subscribe(() => {\r\n      // Trigger change detection for the count display\r\n      this.locationsArray.updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.isOpen) {\r\n      this.initializeAllAutocomplete();\r\n    }\r\n  }\r\n\r\n  get locationsArray(): FormArray {\r\n    return this.bulkForm.get('locations') as FormArray;\r\n  }\r\n\r\n  loadLocationTypes() {\r\n    this.locationService.getLocationTypes(0).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.locationTypes = response.data.types;\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading location types:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  createLocationFormGroup(): FormGroup {\r\n    return this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(2)]],\r\n      description: [''],\r\n      address: [''],\r\n      location_type_id: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  addLocationRow() {\r\n    if (this.locationsArray.length >= 5) {\r\n      return; // Don't add more than 5 locations\r\n    }\r\n    this.locationsArray.push(this.createLocationFormGroup());\r\n  }\r\n\r\n  private async initializeAllAutocomplete() {\r\n    // Wait for view to update\r\n    setTimeout(async () => {\r\n      if (this.addressInputs) {\r\n        this.addressInputs.forEach(async (inputRef, index) => {\r\n          if (inputRef?.nativeElement) {\r\n            try {\r\n              const autocomplete = await this.googlePlacesService.initializeAutocomplete(\r\n                inputRef.nativeElement,\r\n                (place: PlaceResult) => {\r\n                  const locationControl = this.locationsArray.at(index);\r\n                  if (locationControl) {\r\n                    locationControl.patchValue({\r\n                      address: place.formatted_address\r\n                    });\r\n                  }\r\n                },\r\n                {\r\n                  types: ['geocode']\r\n                }\r\n              );\r\n              this.autocompleteInstances[index] = autocomplete;\r\n            } catch (error) {\r\n              console.error('Failed to initialize Google Places Autocomplete:', error);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  duplicateLocationRow(index: number) {\r\n    if (this.locationsArray.length >= 5) {\r\n      return; // Don't add more than 5 locations\r\n    }\r\n    \r\n    const sourceLocation = this.locationsArray.at(index);\r\n    if (sourceLocation) {\r\n      const duplicatedLocation = this.createLocationFormGroup();\r\n      // Copy values from source location\r\n      duplicatedLocation.patchValue(sourceLocation.value);\r\n      this.locationsArray.push(duplicatedLocation);\r\n    }\r\n    \r\n    // Reinitialize autocomplete for new row\r\n    setTimeout(() => this.initializeAllAutocomplete(), 100);\r\n  }\r\n\r\n  removeLocationRow(index: number) {\r\n    if (this.locationsArray.length > 1) {\r\n      this.locationsArray.removeAt(index);\r\n    }\r\n  }\r\n\r\n  getLocationTypeName(typeId: number): string {\r\n    const type = this.locationTypes.find(t => t.id === typeId);\r\n    return type ? type.name : 'Unknown';\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.bulkForm.valid && !this.isLoading) {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n      this.successCount = 0;\r\n\r\n      const locationsData = this.locationsArray.value.map((location: any) => ({\r\n        ...location,\r\n        parent_id: null // For now, creating top-level locations\r\n      }));\r\n\r\n      this.locationService.bulkCreateLocations(locationsData).subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.successCount = locationsData.length;\r\n            this.locationsCreated.emit(response.data.location ? [response.data.location] : []);\r\n            setTimeout(() => {\r\n              this.closeModalHandler();\r\n            }, 2000);\r\n          } else {\r\n            this.errorMessage = response.message || 'Failed to create locations';\r\n          }\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          this.errorMessage = error.error?.message || 'An error occurred while creating locations';\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  closeModalHandler() {\r\n    this.isOpen = false;\r\n    this.closeModal.emit();\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm() {\r\n    // Clear all rows and start with 3 empty rows\r\n    while (this.locationsArray.length > 0) {\r\n      this.locationsArray.removeAt(0);\r\n    }\r\n    // Add 3 new empty rows\r\n    this.addLocationRow();\r\n    this.addLocationRow();\r\n    this.addLocationRow();\r\n    this.errorMessage = '';\r\n    this.successCount = 0;\r\n  }\r\n\r\n  getValidLocationsCount(): number {\r\n    return this.locationsArray.controls.filter(control => {\r\n      // Check if the control is valid and has required fields filled\r\n      const name = control.get('name')?.value;\r\n      const locationTypeId = control.get('location_type_id')?.value;\r\n      return control.valid && name && name.trim().length >= 2 && locationTypeId;\r\n    }).length;\r\n  }\r\n\r\n  getTotalLocationsCount(): number {\r\n    return this.locationsArray.length;\r\n  }\r\n}","<!-- Bulk Create Modal -->\r\n<div *ngIf=\"isOpen\" \r\n     class=\"fixed inset-0 bg-[#00000085] flex items-center justify-center z-50 p-4 animate-fade-in\"\r\n     [@backdropAnimation]>\r\n  <!-- Modal Container -->\r\n  <div class=\"bg-white rounded-2xl shadow-xl max-w-4xl w-full max-h-[90vh] overflow-hidden\"\r\n       [@modalAnimation]>\r\n    <!-- Modal Header -->\r\n    <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n      <div>\r\n        <h2 class=\"text-xl font-semibold text-gray-900\">Create up to 5 locations at once ({{getTotalLocationsCount()}}/5)</h2>\r\n      </div>\r\n      <div class=\"flex items-center space-x-3\">\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"addLocationRow()\"\r\n          class=\"flex items-center space-x-2 px-4 py-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n          </svg>\r\n          <span>Add Location</span>\r\n        </button>\r\n        <button\r\n          (click)=\"closeModalHandler()\"\r\n          class=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\">\r\n          <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal Content -->\r\n    <div class=\"flex flex-col h-full max-h-[calc(90vh-140px)]\">\r\n      <!-- Success Message -->\r\n      <div *ngIf=\"successCount > 0\" class=\"p-4 bg-green-50 border-b border-green-200\">\r\n        <div class=\"flex items-center space-x-2\">\r\n          <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n          </svg>\r\n          <span class=\"text-green-800 font-medium\">Successfully created {{successCount}} locations!</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Error Message -->\r\n      <div *ngIf=\"errorMessage\" class=\"p-4 bg-red-50 border-b border-red-200\">\r\n        <p class=\"text-red-600 text-sm\">{{errorMessage}}</p>\r\n      </div>\r\n\r\n      <!-- Locations Container -->\r\n      <div class=\"flex-1 overflow-auto p-6\">\r\n        <form [formGroup]=\"bulkForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div formArrayName=\"locations\" class=\"space-y-6\">\r\n            <!-- Location Cards -->\r\n            <div *ngFor=\"let locationControl of locationsArray.controls; let i = index\" \r\n                 [formGroupName]=\"i\"\r\n                 class=\"bg-white border border-gray-200 rounded-lg p-6 relative\">\r\n              \r\n              <!-- Card Header -->\r\n              <div class=\"flex items-center justify-between mb-6\">\r\n                <h3 class=\"text-lg font-semibold text-gray-900\">Location {{i + 1}}</h3>\r\n                <div class=\"flex items-center space-x-2\">\r\n                  <!-- Copy Button -->\r\n                  <button\r\n                    type=\"button\"\r\n                   (click)=\"duplicateLocationRow(i)\"\r\n                    class=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded-lg transition-colors\">\r\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"></path>\r\n                    </svg>\r\n                  </button>\r\n                  \r\n                  <!-- Delete Button -->\r\n                  <button\r\n                    type=\"button\"\r\n                    (click)=\"removeLocationRow(i)\"\r\n                    [disabled]=\"locationsArray.length <= 1\"\r\n                    class=\"p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\">\r\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Form Fields -->\r\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <!-- Name Field -->\r\n                <div>\r\n                  <label class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Name <span class=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"name\"\r\n                    placeholder=\"Enter location name\"\r\n                    class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400\"\r\n                    [class.border-red-300]=\"locationControl.get('name')?.invalid && locationControl.get('name')?.touched\">\r\n                </div>\r\n\r\n                <!-- Type Field -->\r\n                <div>\r\n                  <label class=\"block text-sm font-medium text-gray-700 mb-2\">Type</label>\r\n                  <div class=\"relative\">\r\n                    <select\r\n                      formControlName=\"location_type_id\"\r\n                      class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none bg-white\"\r\n                      [class.border-red-300]=\"locationControl.get('location_type_id')?.invalid && locationControl.get('location_type_id')?.touched\">\r\n                      <option value=\"\">Select type</option>\r\n                      <option *ngFor=\"let type of locationTypes\" [value]=\"type.id\">{{type.name}}</option>\r\n                    </select>\r\n                    <div class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\r\n                      <svg class=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Address Field -->\r\n              <div class=\"mt-6\">\r\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  #addressInput\r\n                  formControlName=\"address\"\r\n                  placeholder=\"Enter location address\"\r\n                  class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400\"\r\n                  autocomplete=\"off\">\r\n              </div>\r\n\r\n              <!-- Description Field -->\r\n              <div class=\"mt-6\">\r\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\r\n                <textarea\r\n                  formControlName=\"description\"\r\n                  rows=\"3\"\r\n                  placeholder=\"Enter location description\"\r\n                  class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent placeholder-gray-400 resize-none\"></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Modal Footer -->\r\n      <div class=\"flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50\">\r\n        <div class=\"text-sm text-gray-600\">\r\n          <span class=\"font-medium\">{{getValidLocationsCount()}}</span> of <span class=\"font-medium\">{{getTotalLocationsCount()}}</span> locations ready\r\n        </div>\r\n\r\n        <div class=\"flex items-center space-x-3\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"closeModalHandler()\"\r\n            [disabled]=\"isLoading\"\r\n            class=\"px-6 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors disabled:opacity-50\">\r\n            Cancel\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            (click)=\"onSubmit()\"\r\n            [disabled]=\"bulkForm.invalid || isLoading || getValidLocationsCount() === 0\"\r\n            class=\"px-6 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all disabled:opacity-50 disabled:cursor-not-allowed\">\r\n            <span *ngIf=\"!isLoading\">Create {{getValidLocationsCount()}} Locations</span>\r\n            <span *ngIf=\"isLoading\" class=\"flex items-center space-x-2\">\r\n              <svg class=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              <span>Creating...</span>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","let shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n  if (shadowDomIsSupported == null) {\n    const head = typeof document !== 'undefined' ? document.head : null;\n    shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n  }\n  return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n  if (_supportsShadowDom()) {\n    const rootNode = element.getRootNode ? element.getRootNode() : null;\n    // Note that this should be caught by `_supportsShadowDom`, but some\n    // teams have been able to hit this code path on unsupported browsers.\n    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n      return rootNode;\n    }\n  }\n  return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n  let activeElement = typeof document !== 'undefined' && document ? document.activeElement : null;\n  while (activeElement && activeElement.shadowRoot) {\n    const newActiveElement = activeElement.shadowRoot.activeElement;\n    if (newActiveElement === activeElement) {\n      break;\n    } else {\n      activeElement = newActiveElement;\n    }\n  }\n  return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n  // If an event is bound outside the Shadow DOM, the `event.target` will\n  // point to the shadow root so we have to use `composedPath` instead.\n  return event.composedPath ? event.composedPath()[0] : event.target;\n}\nexport { _getEventTarget as _, _getShadowRoot as a, _supportsShadowDom as b, _getFocusedElementPierceShadowDom as c };\n","/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n  // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n  // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n  // `event.detail` is zero depending on the browser:\n  // - `event.buttons` works on Firefox, but fails on Chrome.\n  // - `detail` works on Chrome, but fails on Firefox.\n  return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n  const touch = event.touches && event.touches[0] || event.changedTouches && event.changedTouches[0];\n  // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n  // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n  // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n  // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n  return !!touch && touch.identifier === -1 && (touch.radiusX == null || touch.radiusX === 1) && (touch.radiusY == null || touch.radiusY === 1);\n}\nexport { isFakeTouchstartFromScreenReader as a, isFakeMousedownFromScreenReader as i };\n","import { ElementRef } from '@angular/core';\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n  if (_isNumberValue(value)) {\n    return Number(value);\n  }\n  return arguments.length === 2 ? fallbackValue : 0;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n  return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\nexport { _isNumberValue as _, coerceElement as a, coerceNumberProperty as c };\n","import { VERSION } from '@angular/core';\n\n// TODO(crisbeto): remove this function when making breaking changes for v20.\n/**\n * Binds an event listener with specific options in a backwards-compatible way.\n * This function is necessary, because `Renderer2.listen` only supports listener options\n * after 19.1 and during the v19 period we support any 19.x version.\n * @docs-private\n */\nfunction _bindEventWithOptions(renderer, target, eventName, callback, options) {\n  const major = parseInt(VERSION.major);\n  const minor = parseInt(VERSION.minor);\n  // Event options in `listen` are only supported in 19.1 and beyond.\n  // We also allow 0.0.x, because that indicates a build at HEAD.\n  if (major > 19 || major === 19 && minor > 0 || major === 0 && minor === 0) {\n    return renderer.listen(target, eventName, callback, options);\n  }\n  target.addEventListener(eventName, callback, options);\n  return () => {\n    target.removeEventListener(eventName, callback, options);\n  };\n}\nexport { _bindEventWithOptions as _ };\n","import * as i0 from '@angular/core';\nimport { inject, Injector, EnvironmentInjector, ApplicationRef, createComponent, Injectable } from '@angular/core';\n\n/** Apps in which we've loaded styles. */\nconst appsWithLoaders = new WeakMap();\n/**\n * Service that loads structural styles dynamically\n * and ensures that they're only loaded once per app.\n */\nclass _CdkPrivateStyleLoader {\n  _appRef;\n  _injector = inject(Injector);\n  _environmentInjector = inject(EnvironmentInjector);\n  /**\n   * Loads a set of styles.\n   * @param loader Component which will be instantiated to load the styles.\n   */\n  load(loader) {\n    // Resolve the app ref lazily to avoid circular dependency errors if this is called too early.\n    const appRef = this._appRef = this._appRef || this._injector.get(ApplicationRef);\n    let data = appsWithLoaders.get(appRef);\n    // If we haven't loaded for this app before, we have to initialize it.\n    if (!data) {\n      data = {\n        loaders: new Set(),\n        refs: []\n      };\n      appsWithLoaders.set(appRef, data);\n      // When the app is destroyed, we need to clean up all the related loaders.\n      appRef.onDestroy(() => {\n        appsWithLoaders.get(appRef)?.refs.forEach(ref => ref.destroy());\n        appsWithLoaders.delete(appRef);\n      });\n    }\n    // If the loader hasn't been loaded before, we need to instatiate it.\n    if (!data.loaders.has(loader)) {\n      data.loaders.add(loader);\n      data.refs.push(createComponent(loader, {\n        environmentInjector: this._environmentInjector\n      }));\n    }\n  }\n  static ɵfac = function _CdkPrivateStyleLoader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _CdkPrivateStyleLoader)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _CdkPrivateStyleLoader,\n    factory: _CdkPrivateStyleLoader.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_CdkPrivateStyleLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nexport { _CdkPrivateStyleLoader as _ };\n","import * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n} catch {\n  hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n  _platformId = inject(PLATFORM_ID);\n  // We want to use the Angular platform check because if the Document is shimmed\n  // without the navigator, the following checks will fail. This is preferred because\n  // sometimes the Document may be shimmed without the user's knowledge or intention\n  /** Whether the Angular application is being rendered in the browser. */\n  isBrowser = this._platformId ? isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n  /** Whether the current browser is Microsoft Edge. */\n  EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n  /** Whether the current rendering engine is Microsoft Trident. */\n  TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  /** Whether the current rendering engine is Blink. */\n  BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  /** Whether the current rendering engine is WebKit. */\n  WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n  /** Whether the current platform is Apple iOS. */\n  IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  /** Whether the current browser is Firefox. */\n  FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n  /** Whether the current platform is Android. */\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n  // Safari browser should also use Webkit as its layout engine.\n  /** Whether the current browser is Safari. */\n  SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n  constructor() {}\n  static ɵfac = function Platform_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Platform)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Platform,\n    factory: Platform.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Platform, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nexport { Platform as P };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n  const value = rawValue?.toLowerCase() || '';\n  if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n    return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n  }\n  return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n  /** The current 'ltr' or 'rtl' value. */\n  value = 'ltr';\n  /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n  change = new EventEmitter();\n  constructor() {\n    const _document = inject(DIR_DOCUMENT, {\n      optional: true\n    });\n    if (_document) {\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n    }\n  }\n  ngOnDestroy() {\n    this.change.complete();\n  }\n  static ɵfac = function Directionality_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Directionality)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Directionality,\n    factory: Directionality.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Directionality, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nexport { Directionality as D, _resolveDirectionality as _, DIR_DOCUMENT as a };\n","/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nvar RtlScrollAxisType;\n(function (RtlScrollAxisType) {\n  /**\n   * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"NORMAL\"] = 0] = \"NORMAL\";\n  /**\n   * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"NEGATED\"] = 1] = \"NEGATED\";\n  /**\n   * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"INVERTED\"] = 2] = \"INVERTED\";\n})(RtlScrollAxisType || (RtlScrollAxisType = {}));\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n  if (scrollBehaviorSupported == null) {\n    // If we're not in the browser, it can't be supported. Also check for `Element`, because\n    // some projects stub out the global `document` during SSR which can throw us off.\n    if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n      scrollBehaviorSupported = false;\n      return scrollBehaviorSupported;\n    }\n    // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n    if ('scrollBehavior' in document.documentElement.style) {\n      scrollBehaviorSupported = true;\n    } else {\n      // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n      // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n      const scrollToFunction = Element.prototype.scrollTo;\n      if (scrollToFunction) {\n        // We can detect if the function has been polyfilled by calling `toString` on it. Native\n        // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n        // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n        // polyfilled functions as supporting scroll behavior.\n        scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n      } else {\n        scrollBehaviorSupported = false;\n      }\n    }\n  }\n  return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n  if (typeof document !== 'object' || !document) {\n    return RtlScrollAxisType.NORMAL;\n  }\n  if (rtlScrollAxisType == null) {\n    // Create a 1px wide scrolling container and a 2px wide content element.\n    const scrollContainer = document.createElement('div');\n    const containerStyle = scrollContainer.style;\n    scrollContainer.dir = 'rtl';\n    containerStyle.width = '1px';\n    containerStyle.overflow = 'auto';\n    containerStyle.visibility = 'hidden';\n    containerStyle.pointerEvents = 'none';\n    containerStyle.position = 'absolute';\n    const content = document.createElement('div');\n    const contentStyle = content.style;\n    contentStyle.width = '2px';\n    contentStyle.height = '1px';\n    scrollContainer.appendChild(content);\n    document.body.appendChild(scrollContainer);\n    rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n    // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n    // dealing with one of the other two types of browsers.\n    if (scrollContainer.scrollLeft === 0) {\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n      // return 0 when we read it again.\n      scrollContainer.scrollLeft = 1;\n      rtlScrollAxisType = scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n    }\n    scrollContainer.remove();\n  }\n  return rtlScrollAxisType;\n}\nexport { RtlScrollAxisType as R, getRtlScrollAxisType as g, supportsScrollBehavior as s };\n","import { _ as _resolveDirectionality, D as Directionality } from './directionality-CBXD4hga.mjs';\nexport { a as DIR_DOCUMENT } from './directionality-CBXD4hga.mjs';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport '@angular/common';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n  /** Normalized direction that accounts for invalid/unsupported values. */\n  _dir = 'ltr';\n  /** Whether the `value` has been set to its initial value. */\n  _isInitialized = false;\n  /** Direction as passed in by the consumer. */\n  _rawDir;\n  /** Event emitted when the direction changes. */\n  change = new EventEmitter();\n  /** @docs-private */\n  get dir() {\n    return this._dir;\n  }\n  set dir(value) {\n    const previousValue = this._dir;\n    // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n    // whereas the browser does it based on the content of the element. Since doing so based\n    // on the content can be expensive, for now we're doing the simpler matching.\n    this._dir = _resolveDirectionality(value);\n    this._rawDir = value;\n    if (previousValue !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n  /** Current layout direction of the element. */\n  get value() {\n    return this.dir;\n  }\n  /** Initialize once default value has been set. */\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n  ngOnDestroy() {\n    this.change.complete();\n  }\n  static ɵfac = function Dir_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Dir)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: Dir,\n    selectors: [[\"\", \"dir\", \"\"]],\n    hostVars: 1,\n    hostBindings: function Dir_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"dir\", ctx._rawDir);\n      }\n    },\n    inputs: {\n      dir: \"dir\"\n    },\n    outputs: {\n      change: \"dirChange\"\n    },\n    exportAs: [\"dir\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Directionality,\n      useExisting: Dir\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dir, [{\n    type: Directive,\n    args: [{\n      selector: '[dir]',\n      providers: [{\n        provide: Directionality,\n        useExisting: Dir\n      }],\n      host: {\n        '[attr.dir]': '_rawDir'\n      },\n      exportAs: 'dir'\n    }]\n  }], null, {\n    change: [{\n      type: Output,\n      args: ['dirChange']\n    }],\n    dir: [{\n      type: Input\n    }]\n  });\n})();\nclass BidiModule {\n  static ɵfac = function BidiModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BidiModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BidiModule,\n    imports: [Dir],\n    exports: [Dir]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BidiModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Dir],\n      exports: [Dir]\n    }]\n  }], null, null);\n})();\nexport { BidiModule, Dir, Directionality };\n","import { ConnectableObservable } from 'rxjs';\nclass DataSource {}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n  // Check if the value is a DataSource by observing if it has a connect function. Cannot\n  // be checked as an `instanceof DataSource` since people could create their own sources\n  // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n  // here, because of some internal apps.\n  return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\nexport { DataSource as D, isDataSource as i };\n","import { isObservable, of } from 'rxjs';\nimport { D as DataSource } from './data-source-D34wiQZj.mjs';\nimport { InjectionToken } from '@angular/core';\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n  _data;\n  constructor(_data) {\n    super();\n    this._data = _data;\n  }\n  connect() {\n    return isObservable(this._data) ? this._data : of(this._data);\n  }\n  disconnect() {}\n}\n\n/** Indicates how a view was changed by a {@link _ViewRepeater}. */\nvar _ViewRepeaterOperation;\n(function (_ViewRepeaterOperation) {\n  /** The content of an existing view was replaced with another item. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n  /** A new view was created with `createEmbeddedView`. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n  /** The position of a view changed, but the content remains the same. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n  /** A view was detached from the view container. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n})(_ViewRepeaterOperation || (_ViewRepeaterOperation = {}));\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n  /**\n   * The size of the cache used to store unused views.\n   * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n   */\n  viewCacheSize = 20;\n  /**\n   * View cache that stores embedded view instances that have been previously stamped out,\n   * but don't are not currently rendered. The view repeater will reuse these views rather than\n   * creating brand new ones.\n   *\n   * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n   */\n  _viewCache = [];\n  /** Apply changes to the DOM. */\n  applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n    // Rearrange the views to put them in the right location.\n    changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n      let view;\n      let operation;\n      if (record.previousIndex == null) {\n        // Item added.\n        const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n        view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n        operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n      } else if (currentIndex == null) {\n        // Item removed.\n        this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n        operation = _ViewRepeaterOperation.REMOVED;\n      } else {\n        // Item moved.\n        view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n        operation = _ViewRepeaterOperation.MOVED;\n      }\n      if (itemViewChanged) {\n        itemViewChanged({\n          context: view?.context,\n          operation,\n          record\n        });\n      }\n    });\n  }\n  detach() {\n    for (const view of this._viewCache) {\n      view.destroy();\n    }\n    this._viewCache = [];\n  }\n  /**\n   * Inserts a view for a new item, either from the cache or by creating a new\n   * one. Returns `undefined` if the item was inserted into a cached view.\n   */\n  _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n    const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n    if (cachedView) {\n      cachedView.context.$implicit = value;\n      return undefined;\n    }\n    const viewArgs = viewArgsFactory();\n    return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n  }\n  /** Detaches the view at the given index and inserts into the view cache. */\n  _detachAndCacheView(index, viewContainerRef) {\n    const detachedView = viewContainerRef.detach(index);\n    this._maybeCacheView(detachedView, viewContainerRef);\n  }\n  /** Moves view at the previous index to the current index. */\n  _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n    const view = viewContainerRef.get(adjustedPreviousIndex);\n    viewContainerRef.move(view, currentIndex);\n    view.context.$implicit = value;\n    return view;\n  }\n  /**\n   * Cache the given detached view. If the cache is full, the view will be\n   * destroyed.\n   */\n  _maybeCacheView(view, viewContainerRef) {\n    if (this._viewCache.length < this.viewCacheSize) {\n      this._viewCache.push(view);\n    } else {\n      const index = viewContainerRef.indexOf(view);\n      // The host component could remove views from the container outside of\n      // the view repeater. It's unlikely this will occur, but just in case,\n      // destroy the view on its own, otherwise destroy it through the\n      // container to ensure that all the references are removed.\n      if (index === -1) {\n        view.destroy();\n      } else {\n        viewContainerRef.remove(index);\n      }\n    }\n  }\n  /** Inserts a recycled view from the cache at the given index. */\n  _insertViewFromCache(index, viewContainerRef) {\n    const cachedView = this._viewCache.pop();\n    if (cachedView) {\n      viewContainerRef.insert(cachedView, index);\n    }\n    return cachedView || null;\n  }\n}\nexport { ArrayDataSource as A, _RecycleViewRepeaterStrategy as _, _ViewRepeaterOperation as a, _VIEW_REPEATER_STRATEGY as b };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, inject, NgZone, RendererFactory2, Injectable, ElementRef, Renderer2, ChangeDetectorRef, Injector, afterNextRender, booleanAttribute, Optional, Inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, NgModule } from '@angular/core';\nimport { Subject, of, Observable, Subscription, animationFrameScheduler, asapScheduler, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, startWith, takeUntil, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { c as coerceNumberProperty, a as coerceElement } from './element-x4z00URv.mjs';\nimport { P as Platform } from './platform-DmdVEw_C.mjs';\nimport { D as Directionality } from './directionality-CBXD4hga.mjs';\nimport { g as getRtlScrollAxisType, R as RtlScrollAxisType, s as supportsScrollBehavior } from './scrolling-BkvA05C8.mjs';\nimport { BidiModule } from './bidi.mjs';\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nexport { Dir as ɵɵDir } from './bidi.mjs';\nimport { DOCUMENT } from '@angular/common';\nimport { b as _VIEW_REPEATER_STRATEGY, A as ArrayDataSource, _ as _RecycleViewRepeaterStrategy } from './recycle-view-repeater-strategy-DoWdPqVw.mjs';\nimport { i as isDataSource } from './data-source-D34wiQZj.mjs';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n  _scrolledIndexChange = new Subject();\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n  /** The attached viewport. */\n  _viewport = null;\n  /** The size of the items in the virtually scrolling list. */\n  _itemSize;\n  /** The minimum amount of buffer rendered beyond the viewport (in pixels). */\n  _minBufferPx;\n  /** The number of buffer items to render beyond the edge of the viewport (in pixels). */\n  _maxBufferPx;\n  /**\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  constructor(itemSize, minBufferPx, maxBufferPx) {\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n  }\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport) {\n    this._viewport = viewport;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach() {\n    this._scrolledIndexChange.complete();\n    this._viewport = null;\n  }\n  /**\n   * Update the item size and buffer size.\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n    if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n    }\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentScrolled() {\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onDataLengthChanged() {\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentRendered() {\n    /* no-op */\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onRenderedOffsetChanged() {\n    /* no-op */\n  }\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index, behavior) {\n    if (this._viewport) {\n      this._viewport.scrollToOffset(index * this._itemSize, behavior);\n    }\n  }\n  /** Update the viewport's total content size. */\n  _updateTotalContentSize() {\n    if (!this._viewport) {\n      return;\n    }\n    this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n  }\n  /** Update the viewport's rendered range. */\n  _updateRenderedRange() {\n    if (!this._viewport) {\n      return;\n    }\n    const renderedRange = this._viewport.getRenderedRange();\n    const newRange = {\n      start: renderedRange.start,\n      end: renderedRange.end\n    };\n    const viewportSize = this._viewport.getViewportSize();\n    const dataLength = this._viewport.getDataLength();\n    let scrollOffset = this._viewport.measureScrollOffset();\n    // Prevent NaN as result when dividing by zero.\n    let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n    // If user scrolls to the bottom of the list and data changes to a smaller list\n    if (newRange.end > dataLength) {\n      // We have to recalculate the first visible index based on new data length and viewport size.\n      const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n      const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n      // If first visible index changed we must update scroll offset to handle start/end buffers\n      // Current range must also be adjusted to cover the new position (bottom of new list).\n      if (firstVisibleIndex != newVisibleIndex) {\n        firstVisibleIndex = newVisibleIndex;\n        scrollOffset = newVisibleIndex * this._itemSize;\n        newRange.start = Math.floor(firstVisibleIndex);\n      }\n      newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n    }\n    const startBuffer = scrollOffset - newRange.start * this._itemSize;\n    if (startBuffer < this._minBufferPx && newRange.start != 0) {\n      const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n      newRange.start = Math.max(0, newRange.start - expandStart);\n      newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n    } else {\n      const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n      if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n        const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n        if (expandEnd > 0) {\n          newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n          newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n        }\n      }\n    }\n    this._viewport.setRenderedRange(newRange);\n    this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n    this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n  }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n  return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n  /** The size of the items in the list (in pixels). */\n  get itemSize() {\n    return this._itemSize;\n  }\n  set itemSize(value) {\n    this._itemSize = coerceNumberProperty(value);\n  }\n  _itemSize = 20;\n  /**\n   * The minimum amount of buffer rendered beyond the viewport (in pixels).\n   * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n   */\n  get minBufferPx() {\n    return this._minBufferPx;\n  }\n  set minBufferPx(value) {\n    this._minBufferPx = coerceNumberProperty(value);\n  }\n  _minBufferPx = 100;\n  /**\n   * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n   */\n  get maxBufferPx() {\n    return this._maxBufferPx;\n  }\n  set maxBufferPx(value) {\n    this._maxBufferPx = coerceNumberProperty(value);\n  }\n  _maxBufferPx = 200;\n  /** The scroll strategy used by this directive. */\n  _scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n  ngOnChanges() {\n    this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n  }\n  static ɵfac = function CdkFixedSizeVirtualScroll_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkFixedSizeVirtualScroll)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkFixedSizeVirtualScroll,\n    selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]],\n    inputs: {\n      itemSize: \"itemSize\",\n      minBufferPx: \"minBufferPx\",\n      maxBufferPx: \"maxBufferPx\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: VIRTUAL_SCROLL_STRATEGY,\n      useFactory: _fixedSizeVirtualScrollStrategyFactory,\n      deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n    }]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-virtual-scroll-viewport[itemSize]',\n      providers: [{\n        provide: VIRTUAL_SCROLL_STRATEGY,\n        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n      }]\n    }]\n  }], null, {\n    itemSize: [{\n      type: Input\n    }],\n    minBufferPx: [{\n      type: Input\n    }],\n    maxBufferPx: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n  _ngZone = inject(NgZone);\n  _platform = inject(Platform);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  _cleanupGlobalListener;\n  constructor() {}\n  /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n  _scrolled = new Subject();\n  /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n  _scrolledCount = 0;\n  /**\n   * Map of all the scrollable references that are registered with the service and their\n   * scroll event subscriptions.\n   */\n  scrollContainers = new Map();\n  /**\n   * Registers a scrollable instance with the service and listens for its scrolled events. When the\n   * scrollable is scrolled, the service emits the event to its scrolled observable.\n   * @param scrollable Scrollable instance to be registered.\n   */\n  register(scrollable) {\n    if (!this.scrollContainers.has(scrollable)) {\n      this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n    }\n  }\n  /**\n   * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n   * @param scrollable Scrollable instance to be deregistered.\n   */\n  deregister(scrollable) {\n    const scrollableReference = this.scrollContainers.get(scrollable);\n    if (scrollableReference) {\n      scrollableReference.unsubscribe();\n      this.scrollContainers.delete(scrollable);\n    }\n  }\n  /**\n   * Returns an observable that emits an event whenever any of the registered Scrollable\n   * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n   * to override the default \"throttle\" time.\n   *\n   * **Note:** in order to avoid hitting change detection for every scroll event,\n   * all of the events emitted from this stream will be run outside the Angular zone.\n   * If you need to update any data bindings as a result of a scroll event, you have\n   * to run the callback using `NgZone.run`.\n   */\n  scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n    if (!this._platform.isBrowser) {\n      return of();\n    }\n    return new Observable(observer => {\n      if (!this._cleanupGlobalListener) {\n        this._cleanupGlobalListener = this._ngZone.runOutsideAngular(() => this._renderer.listen('document', 'scroll', () => this._scrolled.next()));\n      }\n      // In the case of a 0ms delay, use an observable without auditTime\n      // since it does add a perceptible delay in processing overhead.\n      const subscription = auditTimeInMs > 0 ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) : this._scrolled.subscribe(observer);\n      this._scrolledCount++;\n      return () => {\n        subscription.unsubscribe();\n        this._scrolledCount--;\n        if (!this._scrolledCount) {\n          this._cleanupGlobalListener?.();\n          this._cleanupGlobalListener = undefined;\n        }\n      };\n    });\n  }\n  ngOnDestroy() {\n    this._cleanupGlobalListener?.();\n    this._cleanupGlobalListener = undefined;\n    this.scrollContainers.forEach((_, container) => this.deregister(container));\n    this._scrolled.complete();\n  }\n  /**\n   * Returns an observable that emits whenever any of the\n   * scrollable ancestors of an element are scrolled.\n   * @param elementOrElementRef Element whose ancestors to listen for.\n   * @param auditTimeInMs Time to throttle the scroll events.\n   */\n  ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n    const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n    return this.scrolled(auditTimeInMs).pipe(filter(target => !target || ancestors.indexOf(target) > -1));\n  }\n  /** Returns all registered Scrollables that contain the provided element. */\n  getAncestorScrollContainers(elementOrElementRef) {\n    const scrollingContainers = [];\n    this.scrollContainers.forEach((_subscription, scrollable) => {\n      if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n        scrollingContainers.push(scrollable);\n      }\n    });\n    return scrollingContainers;\n  }\n  /** Returns true if the element is contained within the provided Scrollable. */\n  _scrollableContainsElement(scrollable, elementOrElementRef) {\n    let element = coerceElement(elementOrElementRef);\n    let scrollableElement = scrollable.getElementRef().nativeElement;\n    // Traverse through the element parents until we reach null, checking if any of the elements\n    // are the scrollable's element.\n    do {\n      if (element == scrollableElement) {\n        return true;\n      }\n    } while (element = element.parentElement);\n    return false;\n  }\n  static ɵfac = function ScrollDispatcher_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ScrollDispatcher)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ScrollDispatcher,\n    factory: ScrollDispatcher.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollDispatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n  elementRef = inject(ElementRef);\n  scrollDispatcher = inject(ScrollDispatcher);\n  ngZone = inject(NgZone);\n  dir = inject(Directionality, {\n    optional: true\n  });\n  _scrollElement = this.elementRef.nativeElement;\n  _destroyed = new Subject();\n  _renderer = inject(Renderer2);\n  _cleanupScroll;\n  _elementScrolled = new Subject();\n  constructor() {}\n  ngOnInit() {\n    this._cleanupScroll = this.ngZone.runOutsideAngular(() => this._renderer.listen(this._scrollElement, 'scroll', event => this._elementScrolled.next(event)));\n    this.scrollDispatcher.register(this);\n  }\n  ngOnDestroy() {\n    this._cleanupScroll?.();\n    this._elementScrolled.complete();\n    this.scrollDispatcher.deregister(this);\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Returns observable that emits when a scroll event is fired on the host element. */\n  elementScrolled() {\n    return this._elementScrolled;\n  }\n  /** Gets the ElementRef for the viewport. */\n  getElementRef() {\n    return this.elementRef;\n  }\n  /**\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param options specified the offsets to scroll to.\n   */\n  scrollTo(options) {\n    const el = this.elementRef.nativeElement;\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    // Rewrite start & end offsets as right or left offsets.\n    if (options.left == null) {\n      options.left = isRtl ? options.end : options.start;\n    }\n    if (options.right == null) {\n      options.right = isRtl ? options.start : options.end;\n    }\n    // Rewrite the bottom offset as a top offset.\n    if (options.bottom != null) {\n      options.top = el.scrollHeight - el.clientHeight - options.bottom;\n    }\n    // Rewrite the right offset as a left offset.\n    if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n      if (options.left != null) {\n        options.right = el.scrollWidth - el.clientWidth - options.left;\n      }\n      if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n        options.left = options.right;\n      } else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n        options.left = options.right ? -options.right : options.right;\n      }\n    } else {\n      if (options.right != null) {\n        options.left = el.scrollWidth - el.clientWidth - options.right;\n      }\n    }\n    this._applyScrollToOptions(options);\n  }\n  _applyScrollToOptions(options) {\n    const el = this.elementRef.nativeElement;\n    if (supportsScrollBehavior()) {\n      el.scrollTo(options);\n    } else {\n      if (options.top != null) {\n        el.scrollTop = options.top;\n      }\n      if (options.left != null) {\n        el.scrollLeft = options.left;\n      }\n    }\n  }\n  /**\n   * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n   * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n   * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param from The edge to measure from.\n   */\n  measureScrollOffset(from) {\n    const LEFT = 'left';\n    const RIGHT = 'right';\n    const el = this.elementRef.nativeElement;\n    if (from == 'top') {\n      return el.scrollTop;\n    }\n    if (from == 'bottom') {\n      return el.scrollHeight - el.clientHeight - el.scrollTop;\n    }\n    // Rewrite start & end as left or right offsets.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    if (from == 'start') {\n      from = isRtl ? RIGHT : LEFT;\n    } else if (from == 'end') {\n      from = isRtl ? LEFT : RIGHT;\n    }\n    if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n      // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      } else {\n        return el.scrollLeft;\n      }\n    } else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n      // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n      // 0 when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft + el.scrollWidth - el.clientWidth;\n      } else {\n        return -el.scrollLeft;\n      }\n    } else {\n      // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n      // (scrollWidth - clientWidth) when scrolled all the way right.\n      if (from == LEFT) {\n        return el.scrollLeft;\n      } else {\n        return el.scrollWidth - el.clientWidth - el.scrollLeft;\n      }\n    }\n  }\n  static ɵfac = function CdkScrollable_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkScrollable)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkScrollable,\n    selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkScrollable, [{\n    type: Directive,\n    args: [{\n      selector: '[cdk-scrollable], [cdkScrollable]'\n    }]\n  }], () => [], null);\n})();\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n  _platform = inject(Platform);\n  _listeners;\n  /** Cached viewport dimensions. */\n  _viewportSize;\n  /** Stream of viewport change events. */\n  _change = new Subject();\n  /** Used to reference correct document/window */\n  _document = inject(DOCUMENT, {\n    optional: true\n  });\n  constructor() {\n    const ngZone = inject(NgZone);\n    const renderer = inject(RendererFactory2).createRenderer(null, null);\n    ngZone.runOutsideAngular(() => {\n      if (this._platform.isBrowser) {\n        const changeListener = event => this._change.next(event);\n        this._listeners = [renderer.listen('window', 'resize', changeListener), renderer.listen('window', 'orientationchange', changeListener)];\n      }\n      // Clear the cached position so that the viewport is re-measured next time it is required.\n      // We don't need to keep track of the subscription, because it is completed on destroy.\n      this.change().subscribe(() => this._viewportSize = null);\n    });\n  }\n  ngOnDestroy() {\n    this._listeners?.forEach(cleanup => cleanup());\n    this._change.complete();\n  }\n  /** Returns the viewport's width and height. */\n  getViewportSize() {\n    if (!this._viewportSize) {\n      this._updateViewportSize();\n    }\n    const output = {\n      width: this._viewportSize.width,\n      height: this._viewportSize.height\n    };\n    // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n    if (!this._platform.isBrowser) {\n      this._viewportSize = null;\n    }\n    return output;\n  }\n  /** Gets a DOMRect for the viewport's bounds. */\n  getViewportRect() {\n    // Use the document element's bounding rect rather than the window scroll properties\n    // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n    // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n    // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n    // can disagree when the page is pinch-zoomed (on devices that support touch).\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n    // We use the documentElement instead of the body because, by default (without a css reset)\n    // browsers typically give the document body an 8px margin, which is not included in\n    // getBoundingClientRect().\n    const scrollPosition = this.getViewportScrollPosition();\n    const {\n      width,\n      height\n    } = this.getViewportSize();\n    return {\n      top: scrollPosition.top,\n      left: scrollPosition.left,\n      bottom: scrollPosition.top + height,\n      right: scrollPosition.left + width,\n      height,\n      width\n    };\n  }\n  /** Gets the (top, left) scroll position of the viewport. */\n  getViewportScrollPosition() {\n    // While we can get a reference to the fake document\n    // during SSR, it doesn't have getBoundingClientRect.\n    if (!this._platform.isBrowser) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const document = this._document;\n    const window = this._getWindow();\n    const documentElement = document.documentElement;\n    const documentRect = documentElement.getBoundingClientRect();\n    const top = -documentRect.top || document.body.scrollTop || window.scrollY || documentElement.scrollTop || 0;\n    const left = -documentRect.left || document.body.scrollLeft || window.scrollX || documentElement.scrollLeft || 0;\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Returns a stream that emits whenever the size of the viewport changes.\n   * This stream emits outside of the Angular zone.\n   * @param throttleTime Time in milliseconds to throttle the stream.\n   */\n  change(throttleTime = DEFAULT_RESIZE_TIME) {\n    return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  _getWindow() {\n    return this._document.defaultView || window;\n  }\n  /** Updates the cached viewport size. */\n  _updateViewportSize() {\n    const window = this._getWindow();\n    this._viewportSize = this._platform.isBrowser ? {\n      width: window.innerWidth,\n      height: window.innerHeight\n    } : {\n      width: 0,\n      height: 0\n    };\n  }\n  static ɵfac = function ViewportRuler_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ViewportRuler)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ViewportRuler,\n    factory: ViewportRuler.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewportRuler, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n  constructor() {\n    super();\n  }\n  /**\n   * Measure the viewport size for the provided orientation.\n   *\n   * @param orientation The orientation to measure the size from.\n   */\n  measureViewportSize(orientation) {\n    const viewportEl = this.elementRef.nativeElement;\n    return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n  }\n  static ɵfac = function CdkVirtualScrollable_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkVirtualScrollable)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkVirtualScrollable,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkVirtualScrollable, [{\n    type: Directive\n  }], () => [], null);\n})();\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n  return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n  elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _scrollStrategy = inject(VIRTUAL_SCROLL_STRATEGY, {\n    optional: true\n  });\n  scrollable = inject(VIRTUAL_SCROLLABLE, {\n    optional: true\n  });\n  _platform = inject(Platform);\n  /** Emits when the viewport is detached from a CdkVirtualForOf. */\n  _detachedSubject = new Subject();\n  /** Emits when the rendered range changes. */\n  _renderedRangeSubject = new Subject();\n  /** The direction the viewport scrolls. */\n  get orientation() {\n    return this._orientation;\n  }\n  set orientation(orientation) {\n    if (this._orientation !== orientation) {\n      this._orientation = orientation;\n      this._calculateSpacerSize();\n    }\n  }\n  _orientation = 'vertical';\n  /**\n   * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n   * will be removed.\n   */\n  appendOnly = false;\n  // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n  // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n  // depending on how the strategy calculates the scrolled index, it may come at a cost to\n  // performance.\n  /** Emits when the index of the first element visible in the viewport changes. */\n  scrolledIndexChange = new Observable(observer => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n  /** The element that wraps the rendered content. */\n  _contentWrapper;\n  /** A stream that emits whenever the rendered range changes. */\n  renderedRangeStream = this._renderedRangeSubject;\n  /**\n   * The total size of all content (in pixels), including content that is not currently rendered.\n   */\n  _totalContentSize = 0;\n  /** A string representing the `style.width` property value to be used for the spacer element. */\n  _totalContentWidth = '';\n  /** A string representing the `style.height` property value to be used for the spacer element. */\n  _totalContentHeight = '';\n  /**\n   * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n   * of the visible viewport.\n   */\n  _renderedContentTransform;\n  /** The currently rendered range of indices. */\n  _renderedRange = {\n    start: 0,\n    end: 0\n  };\n  /** The length of the data bound to this viewport (in number of items). */\n  _dataLength = 0;\n  /** The size of the viewport (in pixels). */\n  _viewportSize = 0;\n  /** the currently attached CdkVirtualScrollRepeater. */\n  _forOf;\n  /** The last rendered content offset that was set. */\n  _renderedContentOffset = 0;\n  /**\n   * Whether the last rendered content offset was to the end of the content (and therefore needs to\n   * be rewritten as an offset to the start of the content).\n   */\n  _renderedContentOffsetNeedsRewrite = false;\n  /** Whether there is a pending change detection cycle. */\n  _isChangeDetectionPending = false;\n  /** A list of functions to run after the next change detection cycle. */\n  _runAfterChangeDetection = [];\n  /** Subscription to changes in the viewport size. */\n  _viewportChanges = Subscription.EMPTY;\n  _injector = inject(Injector);\n  _isDestroyed = false;\n  constructor() {\n    super();\n    const viewportRuler = inject(ViewportRuler);\n    if (!this._scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n    }\n    this._viewportChanges = viewportRuler.change().subscribe(() => {\n      this.checkViewportSize();\n    });\n    if (!this.scrollable) {\n      // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n      this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n      this.scrollable = this;\n    }\n  }\n  ngOnInit() {\n    // Scrolling depends on the element dimensions which we can't get during SSR.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n    if (this.scrollable === this) {\n      super.ngOnInit();\n    }\n    // It's still too early to measure the viewport at this point. Deferring with a promise allows\n    // the Viewport to be rendered with the correct size before we measure. We run this outside the\n    // zone to avoid causing more change detection cycles. We handle the change detection loop\n    // ourselves instead.\n    this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n      this._measureViewportSize();\n      this._scrollStrategy.attach(this);\n      this.scrollable.elementScrolled().pipe(\n      // Start off with a fake scroll event so we properly detect our initial position.\n      startWith(null),\n      // Collect multiple events into one until the next animation frame. This way if\n      // there are multiple scroll events in the same frame we only need to recheck\n      // our layout once.\n      auditTime(0, SCROLL_SCHEDULER),\n      // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n      // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n      // to unsubscribe here just in case.\n      takeUntil(this._destroyed)).subscribe(() => this._scrollStrategy.onContentScrolled());\n      this._markChangeDetectionNeeded();\n    }));\n  }\n  ngOnDestroy() {\n    this.detach();\n    this._scrollStrategy.detach();\n    // Complete all subjects\n    this._renderedRangeSubject.complete();\n    this._detachedSubject.complete();\n    this._viewportChanges.unsubscribe();\n    this._isDestroyed = true;\n    super.ngOnDestroy();\n  }\n  /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n  attach(forOf) {\n    if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkVirtualScrollViewport is already attached.');\n    }\n    // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n    // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n    // change detection loop ourselves.\n    this.ngZone.runOutsideAngular(() => {\n      this._forOf = forOf;\n      this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n        const newLength = data.length;\n        if (newLength !== this._dataLength) {\n          this._dataLength = newLength;\n          this._scrollStrategy.onDataLengthChanged();\n        }\n        this._doChangeDetection();\n      });\n    });\n  }\n  /** Detaches the current `CdkVirtualForOf`. */\n  detach() {\n    this._forOf = null;\n    this._detachedSubject.next();\n  }\n  /** Gets the length of the data bound to this viewport (in number of items). */\n  getDataLength() {\n    return this._dataLength;\n  }\n  /** Gets the size of the viewport (in pixels). */\n  getViewportSize() {\n    return this._viewportSize;\n  }\n  // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n  // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n  // setting it to something else, but its error prone and should probably be split into\n  // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n  /** Get the current rendered range of items. */\n  getRenderedRange() {\n    return this._renderedRange;\n  }\n  measureBoundingClientRectWithScrollOffset(from) {\n    return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n  }\n  /**\n   * Sets the total size of all content (in pixels), including content that is not currently\n   * rendered.\n   */\n  setTotalContentSize(size) {\n    if (this._totalContentSize !== size) {\n      this._totalContentSize = size;\n      this._calculateSpacerSize();\n      this._markChangeDetectionNeeded();\n    }\n  }\n  /** Sets the currently rendered range of indices. */\n  setRenderedRange(range) {\n    if (!rangesEqual(this._renderedRange, range)) {\n      if (this.appendOnly) {\n        range = {\n          start: 0,\n          end: Math.max(this._renderedRange.end, range.end)\n        };\n      }\n      this._renderedRangeSubject.next(this._renderedRange = range);\n      this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n    }\n  }\n  /**\n   * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n   */\n  getOffsetToRenderedContentStart() {\n    return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n  }\n  /**\n   * Sets the offset from the start of the viewport to either the start or end of the rendered data\n   * (in pixels).\n   */\n  setRenderedContentOffset(offset, to = 'to-start') {\n    // In appendOnly, we always start from the top\n    offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n    // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n    // in the negative direction.\n    const isRtl = this.dir && this.dir.value == 'rtl';\n    const isHorizontal = this.orientation == 'horizontal';\n    const axis = isHorizontal ? 'X' : 'Y';\n    const axisDirection = isHorizontal && isRtl ? -1 : 1;\n    let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n    this._renderedContentOffset = offset;\n    if (to === 'to-end') {\n      transform += ` translate${axis}(-100%)`;\n      // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n      // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n      // expand upward).\n      this._renderedContentOffsetNeedsRewrite = true;\n    }\n    if (this._renderedContentTransform != transform) {\n      // We know this value is safe because we parse `offset` with `Number()` before passing it\n      // into the string.\n      this._renderedContentTransform = transform;\n      this._markChangeDetectionNeeded(() => {\n        if (this._renderedContentOffsetNeedsRewrite) {\n          this._renderedContentOffset -= this.measureRenderedContentSize();\n          this._renderedContentOffsetNeedsRewrite = false;\n          this.setRenderedContentOffset(this._renderedContentOffset);\n        } else {\n          this._scrollStrategy.onRenderedOffsetChanged();\n        }\n      });\n    }\n  }\n  /**\n   * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n   * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n   * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n   * @param offset The offset to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n   */\n  scrollToOffset(offset, behavior = 'auto') {\n    const options = {\n      behavior\n    };\n    if (this.orientation === 'horizontal') {\n      options.start = offset;\n    } else {\n      options.top = offset;\n    }\n    this.scrollable.scrollTo(options);\n  }\n  /**\n   * Scrolls to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n   */\n  scrollToIndex(index, behavior = 'auto') {\n    this._scrollStrategy.scrollToIndex(index, behavior);\n  }\n  /**\n   * Gets the current scroll offset from the start of the scrollable (in pixels).\n   * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n   *     in horizontal mode.\n   */\n  measureScrollOffset(from) {\n    // This is to break the call cycle\n    let measureScrollOffset;\n    if (this.scrollable == this) {\n      measureScrollOffset = _from => super.measureScrollOffset(_from);\n    } else {\n      measureScrollOffset = _from => this.scrollable.measureScrollOffset(_from);\n    }\n    return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) - this.measureViewportOffset());\n  }\n  /**\n   * Measures the offset of the viewport from the scrolling container\n   * @param from The edge to measure from.\n   */\n  measureViewportOffset(from) {\n    let fromRect;\n    const LEFT = 'left';\n    const RIGHT = 'right';\n    const isRtl = this.dir?.value == 'rtl';\n    if (from == 'start') {\n      fromRect = isRtl ? RIGHT : LEFT;\n    } else if (from == 'end') {\n      fromRect = isRtl ? LEFT : RIGHT;\n    } else if (from) {\n      fromRect = from;\n    } else {\n      fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n    }\n    const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n    const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n    return viewportClientRect - scrollerClientRect;\n  }\n  /** Measure the combined size of all of the rendered items. */\n  measureRenderedContentSize() {\n    const contentEl = this._contentWrapper.nativeElement;\n    return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n  }\n  /**\n   * Measure the total combined size of the given range. Throws if the range includes items that are\n   * not rendered.\n   */\n  measureRangeSize(range) {\n    if (!this._forOf) {\n      return 0;\n    }\n    return this._forOf.measureRangeSize(range, this.orientation);\n  }\n  /** Update the viewport dimensions and re-render. */\n  checkViewportSize() {\n    // TODO: Cleanup later when add logic for handling content resize\n    this._measureViewportSize();\n    this._scrollStrategy.onDataLengthChanged();\n  }\n  /** Measure the viewport size. */\n  _measureViewportSize() {\n    this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n  }\n  /** Queue up change detection to run. */\n  _markChangeDetectionNeeded(runAfter) {\n    if (runAfter) {\n      this._runAfterChangeDetection.push(runAfter);\n    }\n    // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n    // properties sequentially we only have to run `_doChangeDetection` once at the end.\n    if (!this._isChangeDetectionPending) {\n      this._isChangeDetectionPending = true;\n      this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n        this._doChangeDetection();\n      }));\n    }\n  }\n  /** Run change detection. */\n  _doChangeDetection() {\n    if (this._isDestroyed) {\n      return;\n    }\n    this.ngZone.run(() => {\n      // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n      // from the root, since the repeated items are content projected in. Calling `detectChanges`\n      // instead does not properly check the projected content.\n      this._changeDetectorRef.markForCheck();\n      // Apply the content transform. The transform can't be set via an Angular binding because\n      // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n      // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n      // the `Number` function first to coerce it to a numeric value.\n      this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n      afterNextRender(() => {\n        this._isChangeDetectionPending = false;\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n          fn();\n        }\n      }, {\n        injector: this._injector\n      });\n    });\n  }\n  /** Calculates the `style.width` and `style.height` for the spacer element. */\n  _calculateSpacerSize() {\n    this._totalContentHeight = this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n    this._totalContentWidth = this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n  }\n  static ɵfac = function CdkVirtualScrollViewport_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkVirtualScrollViewport)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkVirtualScrollViewport,\n    selectors: [[\"cdk-virtual-scroll-viewport\"]],\n    viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n      }\n    },\n    hostAttrs: [1, \"cdk-virtual-scroll-viewport\"],\n    hostVars: 4,\n    hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n      }\n    },\n    inputs: {\n      orientation: \"orientation\",\n      appendOnly: [2, \"appendOnly\", \"appendOnly\", booleanAttribute]\n    },\n    outputs: {\n      scrolledIndexChange: \"scrolledIndexChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkScrollable,\n      useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n      deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport]\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 4,\n    consts: [[\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-content-wrapper\"], [1, \"cdk-virtual-scroll-spacer\"]],\n    template: function CdkVirtualScrollViewport_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"div\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n      }\n    },\n    styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-virtual-scroll-viewport',\n      host: {\n        'class': 'cdk-virtual-scroll-viewport',\n        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: CdkScrollable,\n        useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n        deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport]\n      }],\n      template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n      styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"]\n    }]\n  }], () => [], {\n    orientation: [{\n      type: Input\n    }],\n    appendOnly: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    scrolledIndexChange: [{\n      type: Output\n    }],\n    _contentWrapper: [{\n      type: ViewChild,\n      args: ['contentWrapper', {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n  const el = node;\n  if (!el.getBoundingClientRect) {\n    return 0;\n  }\n  const rect = el.getBoundingClientRect();\n  if (orientation === 'horizontal') {\n    return direction === 'start' ? rect.left : rect.right;\n  }\n  return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n  _viewContainerRef = inject(ViewContainerRef);\n  _template = inject(TemplateRef);\n  _differs = inject(IterableDiffers);\n  _viewRepeater = inject(_VIEW_REPEATER_STRATEGY);\n  _viewport = inject(CdkVirtualScrollViewport, {\n    skipSelf: true\n  });\n  /** Emits when the rendered view of the data changes. */\n  viewChange = new Subject();\n  /** Subject that emits when a new DataSource instance is given. */\n  _dataSourceChanges = new Subject();\n  /** The DataSource to display. */\n  get cdkVirtualForOf() {\n    return this._cdkVirtualForOf;\n  }\n  set cdkVirtualForOf(value) {\n    this._cdkVirtualForOf = value;\n    if (isDataSource(value)) {\n      this._dataSourceChanges.next(value);\n    } else {\n      // If value is an an NgIterable, convert it to an array.\n      this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n    }\n  }\n  _cdkVirtualForOf;\n  /**\n   * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n   * the item and produces a value to be used as the item's identity when tracking changes.\n   */\n  get cdkVirtualForTrackBy() {\n    return this._cdkVirtualForTrackBy;\n  }\n  set cdkVirtualForTrackBy(fn) {\n    this._needsUpdate = true;\n    this._cdkVirtualForTrackBy = fn ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) : undefined;\n  }\n  _cdkVirtualForTrackBy;\n  /** The template used to stamp out new elements. */\n  set cdkVirtualForTemplate(value) {\n    if (value) {\n      this._needsUpdate = true;\n      this._template = value;\n    }\n  }\n  /**\n   * The size of the cache used to store templates that are not being used for re-use later.\n   * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n   */\n  get cdkVirtualForTemplateCacheSize() {\n    return this._viewRepeater.viewCacheSize;\n  }\n  set cdkVirtualForTemplateCacheSize(size) {\n    this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n  }\n  /** Emits whenever the data in the current DataSource changes. */\n  dataStream = this._dataSourceChanges.pipe(\n  // Start off with null `DataSource`.\n  startWith(null),\n  // Bundle up the previous and current data sources so we can work with both.\n  pairwise(),\n  // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n  // new one, passing back a stream of data changes which we run through `switchMap` to give\n  // us a data stream that emits the latest data from whatever the current `DataSource` is.\n  switchMap(([prev, cur]) => this._changeDataSource(prev, cur)),\n  // Replay the last emitted data when someone subscribes.\n  shareReplay(1));\n  /** The differ used to calculate changes to the data. */\n  _differ = null;\n  /** The most recent data emitted from the DataSource. */\n  _data;\n  /** The currently rendered items. */\n  _renderedItems;\n  /** The currently rendered range of indices. */\n  _renderedRange;\n  /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n  _needsUpdate = false;\n  _destroyed = new Subject();\n  constructor() {\n    const ngZone = inject(NgZone);\n    this.dataStream.subscribe(data => {\n      this._data = data;\n      this._onRenderedDataChange();\n    });\n    this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n      this._renderedRange = range;\n      if (this.viewChange.observers.length) {\n        ngZone.run(() => this.viewChange.next(this._renderedRange));\n      }\n      this._onRenderedDataChange();\n    });\n    this._viewport.attach(this);\n  }\n  /**\n   * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n   * in the specified range. Throws an error if the range includes items that are not currently\n   * rendered.\n   */\n  measureRangeSize(range, orientation) {\n    if (range.start >= range.end) {\n      return 0;\n    }\n    if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Error: attempted to measure an item that isn't rendered.`);\n    }\n    // The index into the list of rendered views for the first item in the range.\n    const renderedStartIndex = range.start - this._renderedRange.start;\n    // The length of the range we're measuring.\n    const rangeLen = range.end - range.start;\n    // Loop over all the views, find the first and land node and compute the size by subtracting\n    // the top of the first node from the bottom of the last one.\n    let firstNode;\n    let lastNode;\n    // Find the first node by starting from the beginning and going forwards.\n    for (let i = 0; i < rangeLen; i++) {\n      const view = this._viewContainerRef.get(i + renderedStartIndex);\n      if (view && view.rootNodes.length) {\n        firstNode = lastNode = view.rootNodes[0];\n        break;\n      }\n    }\n    // Find the last node by starting from the end and going backwards.\n    for (let i = rangeLen - 1; i > -1; i--) {\n      const view = this._viewContainerRef.get(i + renderedStartIndex);\n      if (view && view.rootNodes.length) {\n        lastNode = view.rootNodes[view.rootNodes.length - 1];\n        break;\n      }\n    }\n    return firstNode && lastNode ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n  }\n  ngDoCheck() {\n    if (this._differ && this._needsUpdate) {\n      // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n      // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n      // changing (need to do this diff).\n      const changes = this._differ.diff(this._renderedItems);\n      if (!changes) {\n        this._updateContext();\n      } else {\n        this._applyChanges(changes);\n      }\n      this._needsUpdate = false;\n    }\n  }\n  ngOnDestroy() {\n    this._viewport.detach();\n    this._dataSourceChanges.next(undefined);\n    this._dataSourceChanges.complete();\n    this.viewChange.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._viewRepeater.detach();\n  }\n  /** React to scroll state changes in the viewport. */\n  _onRenderedDataChange() {\n    if (!this._renderedRange) {\n      return;\n    }\n    this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n    if (!this._differ) {\n      // Use a wrapper function for the `trackBy` so any new values are\n      // picked up automatically without having to recreate the differ.\n      this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n        return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n      });\n    }\n    this._needsUpdate = true;\n  }\n  /** Swap out one `DataSource` for another. */\n  _changeDataSource(oldDs, newDs) {\n    if (oldDs) {\n      oldDs.disconnect(this);\n    }\n    this._needsUpdate = true;\n    return newDs ? newDs.connect(this) : of();\n  }\n  /** Update the `CdkVirtualForOfContext` for all views. */\n  _updateContext() {\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      const view = this._viewContainerRef.get(i);\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n      view.detectChanges();\n    }\n  }\n  /** Apply changes to the DOM. */\n  _applyChanges(changes) {\n    this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n    // Update $implicit for any items that had an identity change.\n    changes.forEachIdentityChange(record => {\n      const view = this._viewContainerRef.get(record.currentIndex);\n      view.context.$implicit = record.item;\n    });\n    // Update the context variables on all items.\n    const count = this._data.length;\n    let i = this._viewContainerRef.length;\n    while (i--) {\n      const view = this._viewContainerRef.get(i);\n      view.context.index = this._renderedRange.start + i;\n      view.context.count = count;\n      this._updateComputedContextProperties(view.context);\n    }\n  }\n  /** Update the computed properties on the `CdkVirtualForOfContext`. */\n  _updateComputedContextProperties(context) {\n    context.first = context.index === 0;\n    context.last = context.index === context.count - 1;\n    context.even = context.index % 2 === 0;\n    context.odd = !context.even;\n  }\n  _getEmbeddedViewArgs(record, index) {\n    // Note that it's important that we insert the item directly at the proper index,\n    // rather than inserting it and the moving it in place, because if there's a directive\n    // on the same node that injects the `ViewContainerRef`, Angular will insert another\n    // comment node which can throw off the move when it's being repeated for all items.\n    return {\n      templateRef: this._template,\n      context: {\n        $implicit: record.item,\n        // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n        // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n        cdkVirtualForOf: this._cdkVirtualForOf,\n        index: -1,\n        count: -1,\n        first: false,\n        last: false,\n        odd: false,\n        even: false\n      },\n      index\n    };\n  }\n  static ngTemplateContextGuard(directive, context) {\n    return true;\n  }\n  static ɵfac = function CdkVirtualForOf_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkVirtualForOf)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkVirtualForOf,\n    selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]],\n    inputs: {\n      cdkVirtualForOf: \"cdkVirtualForOf\",\n      cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\",\n      cdkVirtualForTemplate: \"cdkVirtualForTemplate\",\n      cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: _VIEW_REPEATER_STRATEGY,\n      useClass: _RecycleViewRepeaterStrategy\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkVirtualForOf, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkVirtualFor][cdkVirtualForOf]',\n      providers: [{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }]\n    }]\n  }], () => [], {\n    cdkVirtualForOf: [{\n      type: Input\n    }],\n    cdkVirtualForTrackBy: [{\n      type: Input\n    }],\n    cdkVirtualForTemplate: [{\n      type: Input\n    }],\n    cdkVirtualForTemplateCacheSize: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n  constructor() {\n    super();\n  }\n  measureBoundingClientRectWithScrollOffset(from) {\n    return this.getElementRef().nativeElement.getBoundingClientRect()[from] - this.measureScrollOffset(from);\n  }\n  static ɵfac = function CdkVirtualScrollableElement_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkVirtualScrollableElement)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkVirtualScrollableElement,\n    selectors: [[\"\", \"cdkVirtualScrollingElement\", \"\"]],\n    hostAttrs: [1, \"cdk-virtual-scrollable\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: VIRTUAL_SCROLLABLE,\n      useExisting: CdkVirtualScrollableElement\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkVirtualScrollableElement, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkVirtualScrollingElement]',\n      providers: [{\n        provide: VIRTUAL_SCROLLABLE,\n        useExisting: CdkVirtualScrollableElement\n      }],\n      host: {\n        'class': 'cdk-virtual-scrollable'\n      }\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n  constructor() {\n    super();\n    const document = inject(DOCUMENT);\n    this.elementRef = new ElementRef(document.documentElement);\n    this._scrollElement = document;\n  }\n  measureBoundingClientRectWithScrollOffset(from) {\n    return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n  }\n  static ɵfac = function CdkVirtualScrollableWindow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkVirtualScrollableWindow)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkVirtualScrollableWindow,\n    selectors: [[\"cdk-virtual-scroll-viewport\", \"scrollWindow\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: VIRTUAL_SCROLLABLE,\n      useExisting: CdkVirtualScrollableWindow\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkVirtualScrollableWindow, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n      providers: [{\n        provide: VIRTUAL_SCROLLABLE,\n        useExisting: CdkVirtualScrollableWindow\n      }]\n    }]\n  }], () => [], null);\n})();\nclass CdkScrollableModule {\n  static ɵfac = function CdkScrollableModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkScrollableModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CdkScrollableModule,\n    imports: [CdkScrollable],\n    exports: [CdkScrollable]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkScrollableModule, [{\n    type: NgModule,\n    args: [{\n      exports: [CdkScrollable],\n      imports: [CdkScrollable]\n    }]\n  }], null, null);\n})();\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n  static ɵfac = function ScrollingModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ScrollingModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ScrollingModule,\n    imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollableWindow, CdkVirtualScrollableElement],\n    exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollableWindow, CdkVirtualScrollableElement]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [BidiModule, CdkScrollableModule, BidiModule, CdkScrollableModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollableWindow, CdkVirtualScrollableElement],\n      exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollableWindow, CdkVirtualScrollableElement]\n    }]\n  }], null, null);\n})();\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable } from '@angular/core';\n\n/**\n * Keeps track of the ID count per prefix. This helps us make the IDs a bit more deterministic\n * like they were before the service was introduced. Note that ideally we wouldn't have to do\n * this, but there are some internal tests that rely on the IDs.\n */\nconst counters = {};\n/** Service that generates unique IDs for DOM nodes. */\nclass _IdGenerator {\n  _appId = inject(APP_ID);\n  /**\n   * Generates a unique ID with a specific prefix.\n   * @param prefix Prefix to add to the ID.\n   */\n  getId(prefix) {\n    // Omit the app ID if it's the default `ng`. Since the vast majority of pages have one\n    // Angular app on them, we can reduce the amount of breakages by not adding it.\n    if (this._appId !== 'ng') {\n      prefix += this._appId;\n    }\n    if (!counters.hasOwnProperty(prefix)) {\n      counters[prefix] = 0;\n    }\n    return `${prefix}${counters[prefix]++}`;\n  }\n  static ɵfac = function _IdGenerator_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _IdGenerator)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _IdGenerator,\n    factory: _IdGenerator.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_IdGenerator, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nexport { _IdGenerator as _ };\n","function coerceArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nexport { coerceArray as c };\n","import * as i0 from '@angular/core';\nimport { signal, Component, ViewEncapsulation, ChangeDetectionStrategy, inject, NgZone, RendererFactory2, Injectable, InjectionToken, ElementRef, booleanAttribute, Directive, Input, ViewContainerRef, ChangeDetectorRef, EventEmitter, Injector, afterNextRender, numberAttribute, Output, TemplateRef, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge, BehaviorSubject } from 'rxjs';\nimport { _ as _getEventTarget, a as _getShadowRoot } from './shadow-dom-B0oHn41l.mjs';\nimport { a as isFakeTouchstartFromScreenReader, i as isFakeMousedownFromScreenReader } from './fake-event-detection-DWOdFTFz.mjs';\nimport { a as coerceElement, c as coerceNumberProperty } from './element-x4z00URv.mjs';\nimport { _ as _bindEventWithOptions } from './backwards-compatibility-DHR38MsD.mjs';\nimport { takeUntil, map, take, tap, switchMap, startWith } from 'rxjs/operators';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-Cu9AvjH9.mjs';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from './scrolling.mjs';\nexport { CdkScrollable as ɵɵCdkScrollable } from './scrolling.mjs';\nimport { D as Directionality } from './directionality-CBXD4hga.mjs';\nimport { _ as _IdGenerator } from './id-generator-Dw_9dSDu.mjs';\nimport { c as coerceArray } from './array-I1yfCXUO.mjs';\nimport './platform-DmdVEw_C.mjs';\nimport './scrolling-BkvA05C8.mjs';\nimport './bidi.mjs';\nimport './recycle-view-repeater-strategy-DoWdPqVw.mjs';\nimport './data-source-D34wiQZj.mjs';\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n  const clone = node.cloneNode(true);\n  const descendantsWithId = clone.querySelectorAll('[id]');\n  const nodeName = node.nodeName.toLowerCase();\n  // Remove the `id` to avoid having multiple elements with the same id on the page.\n  clone.removeAttribute('id');\n  for (let i = 0; i < descendantsWithId.length; i++) {\n    descendantsWithId[i].removeAttribute('id');\n  }\n  if (nodeName === 'canvas') {\n    transferCanvasData(node, clone);\n  } else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n    transferInputData(node, clone);\n  }\n  transferData('canvas', node, clone, transferCanvasData);\n  transferData('input, textarea, select', node, clone, transferInputData);\n  return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n  const descendantElements = node.querySelectorAll(selector);\n  if (descendantElements.length) {\n    const cloneElements = clone.querySelectorAll(selector);\n    for (let i = 0; i < descendantElements.length; i++) {\n      callback(descendantElements[i], cloneElements[i]);\n    }\n  }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n  // Browsers throw an error when assigning the value of a file input programmatically.\n  if (clone.type !== 'file') {\n    clone.value = source.value;\n  }\n  // Radio button `name` attributes must be unique for radio button groups\n  // otherwise original radio buttons can lose their checked state\n  // once the clone is inserted in the DOM.\n  if (clone.type === 'radio' && clone.name) {\n    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n  }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n  const context = clone.getContext('2d');\n  if (context) {\n    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n    // We can't do much about it so just ignore the error.\n    try {\n      context.drawImage(source, 0, 0);\n    } catch {}\n  }\n}\n\n/** Gets a mutable version of an element's bounding `DOMRect`. */\nfunction getMutableClientRect(element) {\n  const rect = element.getBoundingClientRect();\n  // We need to clone the `clientRect` here, because all the values on it are readonly\n  // and we need to be able to update them. Also we can't use a spread here, because\n  // the values on a `DOMRect` aren't own properties. See:\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n  return {\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    x: rect.x,\n    y: rect.y\n  };\n}\n/**\n * Checks whether some coordinates are within a `DOMRect`.\n * @param clientRect DOMRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = clientRect;\n  return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `DOMRect`, as well as their bottom/right counterparts.\n * @param domRect `DOMRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustDomRect(domRect, top, left) {\n  domRect.top += top;\n  domRect.bottom = domRect.top + domRect.height;\n  domRect.left += left;\n  domRect.right = domRect.left + domRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a DOMRect.\n * @param rect DOMRect to check against.\n * @param threshold Threshold around the DOMRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearDomRect(rect, threshold, pointerX, pointerY) {\n  const {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height\n  } = rect;\n  const xThreshold = width * threshold;\n  const yThreshold = height * threshold;\n  return pointerY > top - yThreshold && pointerY < bottom + yThreshold && pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n  _document;\n  /** Cached positions of the scrollable parent elements. */\n  positions = new Map();\n  constructor(_document) {\n    this._document = _document;\n  }\n  /** Clears the cached positions. */\n  clear() {\n    this.positions.clear();\n  }\n  /** Caches the positions. Should be called at the beginning of a drag sequence. */\n  cache(elements) {\n    this.clear();\n    this.positions.set(this._document, {\n      scrollPosition: this.getViewportScrollPosition()\n    });\n    elements.forEach(element => {\n      this.positions.set(element, {\n        scrollPosition: {\n          top: element.scrollTop,\n          left: element.scrollLeft\n        },\n        clientRect: getMutableClientRect(element)\n      });\n    });\n  }\n  /** Handles scrolling while a drag is taking place. */\n  handleScroll(event) {\n    const target = _getEventTarget(event);\n    const cachedPosition = this.positions.get(target);\n    if (!cachedPosition) {\n      return null;\n    }\n    const scrollPosition = cachedPosition.scrollPosition;\n    let newTop;\n    let newLeft;\n    if (target === this._document) {\n      const viewportScrollPosition = this.getViewportScrollPosition();\n      newTop = viewportScrollPosition.top;\n      newLeft = viewportScrollPosition.left;\n    } else {\n      newTop = target.scrollTop;\n      newLeft = target.scrollLeft;\n    }\n    const topDifference = scrollPosition.top - newTop;\n    const leftDifference = scrollPosition.left - newLeft;\n    // Go through and update the cached positions of the scroll\n    // parents that are inside the element that was scrolled.\n    this.positions.forEach((position, node) => {\n      if (position.clientRect && target !== node && target.contains(node)) {\n        adjustDomRect(position.clientRect, topDifference, leftDifference);\n      }\n    });\n    scrollPosition.top = newTop;\n    scrollPosition.left = newLeft;\n    return {\n      top: topDifference,\n      left: leftDifference\n    };\n  }\n  /**\n   * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n   * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n   * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n   * if the element is offset by something like the `BlockScrollStrategy`.\n   */\n  getViewportScrollPosition() {\n    return {\n      top: window.scrollY,\n      left: window.scrollX\n    };\n  }\n}\n\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n  const rootNodes = viewRef.rootNodes;\n  if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n    return rootNodes[0];\n  }\n  const wrapper = _document.createElement('div');\n  rootNodes.forEach(node => wrapper.appendChild(node));\n  return wrapper;\n}\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      if (value) {\n        dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n      } else {\n        dest.removeProperty(key);\n      }\n    }\n  }\n  return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n  const userSelect = enable ? '' : 'none';\n  extendStyles(element.style, {\n    'touch-action': enable ? '' : 'none',\n    '-webkit-user-drag': enable ? '' : 'none',\n    '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n    'user-select': userSelect,\n    '-ms-user-select': userSelect,\n    '-webkit-user-select': userSelect,\n    '-moz-user-select': userSelect\n  });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n  extendStyles(element.style, {\n    position: enable ? '' : 'fixed',\n    top: enable ? '' : '0',\n    opacity: enable ? '' : '0',\n    left: enable ? '' : '-999em'\n  }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n  return initialTransform && initialTransform != 'none' ? transform + ' ' + initialTransform : transform;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n  target.style.width = `${sourceRect.width}px`;\n  target.style.height = `${sourceRect.height}px`;\n  target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n  // Round the transforms since some browsers will\n  // blur the elements for sub-pixel transforms.\n  return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n  // Some browsers will return it in seconds, whereas others will return milliseconds.\n  const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n  return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n  const computedStyle = getComputedStyle(element);\n  const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n  const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n  // If there's no transition for `all` or `transform`, we shouldn't do anything.\n  if (!property) {\n    return 0;\n  }\n  // Get the index of the property that we're interested in and match\n  // it up to the same index in `transition-delay` and `transition-duration`.\n  const propertyIndex = transitionedProperties.indexOf(property);\n  const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n  const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n  return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) + parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n  const value = computedStyle.getPropertyValue(name);\n  return value.split(',').map(part => part.trim());\n}\n\n/** Inline styles to be set as `!important` while dragging. */\nconst importantProperties = new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\nclass PreviewRef {\n  _document;\n  _rootElement;\n  _direction;\n  _initialDomRect;\n  _previewTemplate;\n  _previewClass;\n  _pickupPositionOnPage;\n  _initialTransform;\n  _zIndex;\n  _renderer;\n  /** Reference to the view of the preview element. */\n  _previewEmbeddedView;\n  /** Reference to the preview element. */\n  _preview;\n  get element() {\n    return this._preview;\n  }\n  constructor(_document, _rootElement, _direction, _initialDomRect, _previewTemplate, _previewClass, _pickupPositionOnPage, _initialTransform, _zIndex, _renderer) {\n    this._document = _document;\n    this._rootElement = _rootElement;\n    this._direction = _direction;\n    this._initialDomRect = _initialDomRect;\n    this._previewTemplate = _previewTemplate;\n    this._previewClass = _previewClass;\n    this._pickupPositionOnPage = _pickupPositionOnPage;\n    this._initialTransform = _initialTransform;\n    this._zIndex = _zIndex;\n    this._renderer = _renderer;\n  }\n  attach(parent) {\n    this._preview = this._createPreview();\n    parent.appendChild(this._preview);\n    // The null check is necessary for browsers that don't support the popover API.\n    // Note that we use a string access for compatibility with Closure.\n    if (supportsPopover(this._preview)) {\n      this._preview['showPopover']();\n    }\n  }\n  destroy() {\n    this._preview.remove();\n    this._previewEmbeddedView?.destroy();\n    this._preview = this._previewEmbeddedView = null;\n  }\n  setTransform(value) {\n    this._preview.style.transform = value;\n  }\n  getBoundingClientRect() {\n    return this._preview.getBoundingClientRect();\n  }\n  addClass(className) {\n    this._preview.classList.add(className);\n  }\n  getTransitionDuration() {\n    return getTransformTransitionDurationInMs(this._preview);\n  }\n  addEventListener(name, handler) {\n    return this._renderer.listen(this._preview, name, handler);\n  }\n  _createPreview() {\n    const previewConfig = this._previewTemplate;\n    const previewClass = this._previewClass;\n    const previewTemplate = previewConfig ? previewConfig.template : null;\n    let preview;\n    if (previewTemplate && previewConfig) {\n      // Measure the element before we've inserted the preview\n      // since the insertion could throw off the measurement.\n      const rootRect = previewConfig.matchSize ? this._initialDomRect : null;\n      const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n      viewRef.detectChanges();\n      preview = getRootNode(viewRef, this._document);\n      this._previewEmbeddedView = viewRef;\n      if (previewConfig.matchSize) {\n        matchElementSize(preview, rootRect);\n      } else {\n        preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n      }\n    } else {\n      preview = deepCloneNode(this._rootElement);\n      matchElementSize(preview, this._initialDomRect);\n      if (this._initialTransform) {\n        preview.style.transform = this._initialTransform;\n      }\n    }\n    extendStyles(preview.style, {\n      // It's important that we disable the pointer events on the preview, because\n      // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n      'pointer-events': 'none',\n      // If the preview has a margin, it can throw off our positioning so we reset it. The reset\n      // value for `margin-right` needs to be `auto` when opened as a popover, because our\n      // positioning is always top/left based, but native popover seems to position itself\n      // to the top/right if `<html>` or `<body>` have `dir=\"rtl\"` (see #29604). Setting it\n      // to `auto` pushed it to the top/left corner in RTL and is a noop in LTR.\n      'margin': supportsPopover(preview) ? '0 auto 0 0' : '0',\n      'position': 'fixed',\n      'top': '0',\n      'left': '0',\n      'z-index': this._zIndex + ''\n    }, importantProperties);\n    toggleNativeDragInteractions(preview, false);\n    preview.classList.add('cdk-drag-preview');\n    preview.setAttribute('popover', 'manual');\n    preview.setAttribute('dir', this._direction);\n    if (previewClass) {\n      if (Array.isArray(previewClass)) {\n        previewClass.forEach(className => preview.classList.add(className));\n      } else {\n        preview.classList.add(previewClass);\n      }\n    }\n    return preview;\n  }\n}\n/** Checks whether a specific element supports the popover API. */\nfunction supportsPopover(element) {\n  return 'showPopover' in element;\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = {\n  passive: true\n};\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = {\n  passive: false\n};\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions$1 = {\n  passive: false,\n  capture: true\n};\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n  _config;\n  _document;\n  _ngZone;\n  _viewportRuler;\n  _dragDropRegistry;\n  _renderer;\n  _rootElementCleanups;\n  _cleanupShadowRootSelectStart;\n  /** Element displayed next to the user's pointer while the element is dragged. */\n  _preview;\n  /** Container into which to insert the preview. */\n  _previewContainer;\n  /** Reference to the view of the placeholder element. */\n  _placeholderRef;\n  /** Element that is rendered instead of the draggable item while it is being sorted. */\n  _placeholder;\n  /** Coordinates within the element at which the user picked up the element. */\n  _pickupPositionInElement;\n  /** Coordinates on the page at which the user picked up the element. */\n  _pickupPositionOnPage;\n  /**\n   * Anchor node used to save the place in the DOM where the element was\n   * picked up so that it can be restored at the end of the drag sequence.\n   */\n  _anchor;\n  /**\n   * CSS `transform` applied to the element when it isn't being dragged. We need a\n   * passive transform in order for the dragged element to retain its new position\n   * after the user has stopped dragging and because we need to know the relative\n   * position in case they start dragging again. This corresponds to `element.style.transform`.\n   */\n  _passiveTransform = {\n    x: 0,\n    y: 0\n  };\n  /** CSS `transform` that is applied to the element while it's being dragged. */\n  _activeTransform = {\n    x: 0,\n    y: 0\n  };\n  /** Inline `transform` value that the element had before the first dragging sequence. */\n  _initialTransform;\n  /**\n   * Whether the dragging sequence has been started. Doesn't\n   * necessarily mean that the element has been moved.\n   */\n  _hasStartedDragging = signal(false);\n  /** Whether the element has moved since the user started dragging it. */\n  _hasMoved;\n  /** Drop container in which the DragRef resided when dragging began. */\n  _initialContainer;\n  /** Index at which the item started in its initial container. */\n  _initialIndex;\n  /** Cached positions of scrollable parent elements. */\n  _parentPositions;\n  /** Emits when the item is being moved. */\n  _moveEvents = new Subject();\n  /** Keeps track of the direction in which the user is dragging along each axis. */\n  _pointerDirectionDelta;\n  /** Pointer position at which the last change in the delta occurred. */\n  _pointerPositionAtLastDirectionChange;\n  /** Position of the pointer at the last pointer event. */\n  _lastKnownPointerPosition;\n  /**\n   * Root DOM node of the drag instance. This is the element that will\n   * be moved around as the user is dragging.\n   */\n  _rootElement;\n  /**\n   * Nearest ancestor SVG, relative to which coordinates are calculated if dragging SVGElement\n   */\n  _ownerSVGElement;\n  /**\n   * Inline style value of `-webkit-tap-highlight-color` at the time the\n   * dragging was started. Used to restore the value once we're done dragging.\n   */\n  _rootElementTapHighlight;\n  /** Subscription to pointer movement events. */\n  _pointerMoveSubscription = Subscription.EMPTY;\n  /** Subscription to the event that is dispatched when the user lifts their pointer. */\n  _pointerUpSubscription = Subscription.EMPTY;\n  /** Subscription to the viewport being scrolled. */\n  _scrollSubscription = Subscription.EMPTY;\n  /** Subscription to the viewport being resized. */\n  _resizeSubscription = Subscription.EMPTY;\n  /**\n   * Time at which the last touch event occurred. Used to avoid firing the same\n   * events multiple times on touch devices where the browser will fire a fake\n   * mouse event for each touch event, after a certain time.\n   */\n  _lastTouchEventTime;\n  /** Time at which the last dragging sequence was started. */\n  _dragStartTime;\n  /** Cached reference to the boundary element. */\n  _boundaryElement = null;\n  /** Whether the native dragging interactions have been enabled on the root element. */\n  _nativeInteractionsEnabled = true;\n  /** Client rect of the root element when the dragging sequence has started. */\n  _initialDomRect;\n  /** Cached dimensions of the preview element. Should be read via `_getPreviewRect`. */\n  _previewRect;\n  /** Cached dimensions of the boundary element. */\n  _boundaryRect;\n  /** Element that will be used as a template to create the draggable item's preview. */\n  _previewTemplate;\n  /** Template for placeholder element rendered to show where a draggable would be dropped. */\n  _placeholderTemplate;\n  /** Elements that can be used to drag the draggable item. */\n  _handles = [];\n  /** Registered handles that are currently disabled. */\n  _disabledHandles = new Set();\n  /** Droppable container that the draggable is a part of. */\n  _dropContainer;\n  /** Layout direction of the item. */\n  _direction = 'ltr';\n  /** Ref that the current drag item is nested in. */\n  _parentDragRef;\n  /**\n   * Cached shadow root that the element is placed in. `null` means that the element isn't in\n   * the shadow DOM and `undefined` means that it hasn't been resolved yet. Should be read via\n   * `_getShadowRoot`, not directly.\n   */\n  _cachedShadowRoot;\n  /** Axis along which dragging is locked. */\n  lockAxis;\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  dragStartDelay = 0;\n  /** Class to be added to the preview element. */\n  previewClass;\n  /**\n   * If the parent of the dragged element has a `scale` transform, it can throw off the\n   * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n   */\n  scale = 1;\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n  }\n  set disabled(value) {\n    if (value !== this._disabled) {\n      this._disabled = value;\n      this._toggleNativeDragInteractions();\n      this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n    }\n  }\n  _disabled = false;\n  /** Emits as the drag sequence is being prepared. */\n  beforeStarted = new Subject();\n  /** Emits when the user starts dragging the item. */\n  started = new Subject();\n  /** Emits when the user has released a drag item, before any animations have started. */\n  released = new Subject();\n  /** Emits when the user stops dragging an item in the container. */\n  ended = new Subject();\n  /** Emits when the user has moved the item into a new container. */\n  entered = new Subject();\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  exited = new Subject();\n  /** Emits when the user drops the item inside a container. */\n  dropped = new Subject();\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  moved = this._moveEvents;\n  /** Arbitrary data that can be attached to the drag item. */\n  data;\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page, a reference to the item being dragged and its dimensions.\n   * Should return a point describing where the item should be rendered.\n   */\n  constrainPosition;\n  constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry, _renderer) {\n    this._config = _config;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    this._dragDropRegistry = _dragDropRegistry;\n    this._renderer = _renderer;\n    this.withRootElement(element).withParent(_config.parentDragRef || null);\n    this._parentPositions = new ParentPositionTracker(_document);\n    _dragDropRegistry.registerDragItem(this);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._placeholder;\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._rootElement;\n  }\n  /**\n   * Gets the currently-visible element that represents the drag item.\n   * While dragging this is the placeholder, otherwise it's the root element.\n   */\n  getVisibleElement() {\n    return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n  }\n  /** Registers the handles that can be used to drag the element. */\n  withHandles(handles) {\n    this._handles = handles.map(handle => coerceElement(handle));\n    this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n    this._toggleNativeDragInteractions();\n    // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n    // the set, rather than iterate over it and filter out the destroyed handles, because while\n    // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n    // use an array internally which may throw an error.\n    const disabledHandles = new Set();\n    this._disabledHandles.forEach(handle => {\n      if (this._handles.indexOf(handle) > -1) {\n        disabledHandles.add(handle);\n      }\n    });\n    this._disabledHandles = disabledHandles;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag preview.\n   * @param template Template that from which to stamp out the preview.\n   */\n  withPreviewTemplate(template) {\n    this._previewTemplate = template;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag placeholder.\n   * @param template Template that from which to stamp out the placeholder.\n   */\n  withPlaceholderTemplate(template) {\n    this._placeholderTemplate = template;\n    return this;\n  }\n  /**\n   * Sets an alternate drag root element. The root element is the element that will be moved as\n   * the user is dragging. Passing an alternate root element is useful when trying to enable\n   * dragging on an element that you might not have access to.\n   */\n  withRootElement(rootElement) {\n    const element = coerceElement(rootElement);\n    if (element !== this._rootElement) {\n      this._removeRootElementListeners();\n      this._rootElementCleanups = this._ngZone.runOutsideAngular(() => [_bindEventWithOptions(this._renderer, element, 'mousedown', this._pointerDown, activeEventListenerOptions), _bindEventWithOptions(this._renderer, element, 'touchstart', this._pointerDown, passiveEventListenerOptions), _bindEventWithOptions(this._renderer, element, 'dragstart', this._nativeDragStart, activeEventListenerOptions)]);\n      this._initialTransform = undefined;\n      this._rootElement = element;\n    }\n    if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n      this._ownerSVGElement = this._rootElement.ownerSVGElement;\n    }\n    return this;\n  }\n  /**\n   * Element to which the draggable's position will be constrained.\n   */\n  withBoundaryElement(boundaryElement) {\n    this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n    this._resizeSubscription.unsubscribe();\n    if (boundaryElement) {\n      this._resizeSubscription = this._viewportRuler.change(10).subscribe(() => this._containInsideBoundaryOnResize());\n    }\n    return this;\n  }\n  /** Sets the parent ref that the ref is nested in.  */\n  withParent(parent) {\n    this._parentDragRef = parent;\n    return this;\n  }\n  /** Removes the dragging functionality from the DOM element. */\n  dispose() {\n    this._removeRootElementListeners();\n    // Do this check before removing from the registry since it'll\n    // stop being considered as dragged once it is removed.\n    if (this.isDragging()) {\n      // Since we move out the element to the end of the body while it's being\n      // dragged, we have to make sure that it's removed if it gets destroyed.\n      this._rootElement?.remove();\n    }\n    this._anchor?.remove();\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._dragDropRegistry.removeDragItem(this);\n    this._removeListeners();\n    this.beforeStarted.complete();\n    this.started.complete();\n    this.released.complete();\n    this.ended.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this._moveEvents.complete();\n    this._handles = [];\n    this._disabledHandles.clear();\n    this._dropContainer = undefined;\n    this._resizeSubscription.unsubscribe();\n    this._parentPositions.clear();\n    this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate = this._previewTemplate = this._anchor = this._parentDragRef = null;\n  }\n  /** Checks whether the element is currently being dragged. */\n  isDragging() {\n    return this._hasStartedDragging() && this._dragDropRegistry.isDragging(this);\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._rootElement.style.transform = this._initialTransform || '';\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform = {\n      x: 0,\n      y: 0\n    };\n  }\n  /**\n   * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n   * @param handle Handle element that should be disabled.\n   */\n  disableHandle(handle) {\n    if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n      this._disabledHandles.add(handle);\n      toggleNativeDragInteractions(handle, true);\n    }\n  }\n  /**\n   * Enables a handle, if it has been disabled.\n   * @param handle Handle element to be enabled.\n   */\n  enableHandle(handle) {\n    if (this._disabledHandles.has(handle)) {\n      this._disabledHandles.delete(handle);\n      toggleNativeDragInteractions(handle, this.disabled);\n    }\n  }\n  /** Sets the layout direction of the draggable item. */\n  withDirection(direction) {\n    this._direction = direction;\n    return this;\n  }\n  /** Sets the container that the item is part of. */\n  _withDropContainer(container) {\n    this._dropContainer = container;\n  }\n  /**\n   * Gets the current position in pixels the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n    return {\n      x: position.x,\n      y: position.y\n    };\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform.x = value.x;\n    this._passiveTransform.y = value.y;\n    if (!this._dropContainer) {\n      this._applyRootElementTransform(value.x, value.y);\n    }\n    return this;\n  }\n  /**\n   * Sets the container into which to insert the preview element.\n   * @param value Container into which to insert the preview.\n   */\n  withPreviewContainer(value) {\n    this._previewContainer = value;\n    return this;\n  }\n  /** Updates the item's sort order based on the last-known pointer position. */\n  _sortFromLastPointerPosition() {\n    const position = this._lastKnownPointerPosition;\n    if (position && this._dropContainer) {\n      this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n    }\n  }\n  /** Unsubscribes from the global subscriptions. */\n  _removeListeners() {\n    this._pointerMoveSubscription.unsubscribe();\n    this._pointerUpSubscription.unsubscribe();\n    this._scrollSubscription.unsubscribe();\n    this._cleanupShadowRootSelectStart?.();\n    this._cleanupShadowRootSelectStart = undefined;\n  }\n  /** Destroys the preview element and its ViewRef. */\n  _destroyPreview() {\n    this._preview?.destroy();\n    this._preview = null;\n  }\n  /** Destroys the placeholder element and its ViewRef. */\n  _destroyPlaceholder() {\n    this._placeholder?.remove();\n    this._placeholderRef?.destroy();\n    this._placeholder = this._placeholderRef = null;\n  }\n  /** Handler for the `mousedown`/`touchstart` events. */\n  _pointerDown = event => {\n    this.beforeStarted.next();\n    // Delegate the event based on whether it started from a handle or the element itself.\n    if (this._handles.length) {\n      const targetHandle = this._getTargetHandle(event);\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        this._initializeDragSequence(targetHandle, event);\n      }\n    } else if (!this.disabled) {\n      this._initializeDragSequence(this._rootElement, event);\n    }\n  };\n  /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n  _pointerMove = event => {\n    const pointerPosition = this._getPointerPositionOnPage(event);\n    if (!this._hasStartedDragging()) {\n      const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n      const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n      const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n      // Only start dragging after the user has moved more than the minimum distance in either\n      // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n      // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n      // per pixel of movement (e.g. if the user moves their pointer quickly).\n      if (isOverThreshold) {\n        const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n        const container = this._dropContainer;\n        if (!isDelayElapsed) {\n          this._endDragSequence(event);\n          return;\n        }\n        // Prevent other drag sequences from starting while something in the container is still\n        // being dragged. This can happen while we're waiting for the drop animation to finish\n        // and can cause errors, because some elements might still be moving around.\n        if (!container || !container.isDragging() && !container.isReceiving()) {\n          // Prevent the default action as soon as the dragging sequence is considered as\n          // \"started\" since waiting for the next event can allow the device to begin scrolling.\n          if (event.cancelable) {\n            event.preventDefault();\n          }\n          this._hasStartedDragging.set(true);\n          this._ngZone.run(() => this._startDragSequence(event));\n        }\n      }\n      return;\n    }\n    // We prevent the default action down here so that we know that dragging has started. This is\n    // important for touch devices where doing this too early can unnecessarily block scrolling,\n    // if there's a dragging delay.\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n    this._hasMoved = true;\n    this._lastKnownPointerPosition = pointerPosition;\n    this._updatePointerDirectionDelta(constrainedPointerPosition);\n    if (this._dropContainer) {\n      this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n    } else {\n      // If there's a position constraint function, we want the element's top/left to be at the\n      // specific position on the page. Use the initial position as a reference if that's the case.\n      const offset = this.constrainPosition ? this._initialDomRect : this._pickupPositionOnPage;\n      const activeTransform = this._activeTransform;\n      activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n      activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n      this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n    }\n    // Since this event gets fired for every pixel while dragging, we only\n    // want to fire it if the consumer opted into it. Also we have to\n    // re-enter the zone because we run all of the events on the outside.\n    if (this._moveEvents.observers.length) {\n      this._ngZone.run(() => {\n        this._moveEvents.next({\n          source: this,\n          pointerPosition: constrainedPointerPosition,\n          event,\n          distance: this._getDragDistance(constrainedPointerPosition),\n          delta: this._pointerDirectionDelta\n        });\n      });\n    }\n  };\n  /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n  _pointerUp = event => {\n    this._endDragSequence(event);\n  };\n  /**\n   * Clears subscriptions and stops the dragging sequence.\n   * @param event Browser event object that ended the sequence.\n   */\n  _endDragSequence(event) {\n    // Note that here we use `isDragging` from the service, rather than from `this`.\n    // The difference is that the one from the service reflects whether a dragging sequence\n    // has been initiated, whereas the one on `this` includes whether the user has passed\n    // the minimum dragging threshold.\n    if (!this._dragDropRegistry.isDragging(this)) {\n      return;\n    }\n    this._removeListeners();\n    this._dragDropRegistry.stopDragging(this);\n    this._toggleNativeDragInteractions();\n    if (this._handles) {\n      this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n    }\n    if (!this._hasStartedDragging()) {\n      return;\n    }\n    this.released.next({\n      source: this,\n      event\n    });\n    if (this._dropContainer) {\n      // Stop scrolling immediately, instead of waiting for the animation to finish.\n      this._dropContainer._stopScrolling();\n      this._animatePreviewToPlaceholder().then(() => {\n        this._cleanupDragArtifacts(event);\n        this._cleanupCachedDimensions();\n        this._dragDropRegistry.stopDragging(this);\n      });\n    } else {\n      // Convert the active transform into a passive one. This means that next time\n      // the user starts dragging the item, its position will be calculated relatively\n      // to the new passive transform.\n      this._passiveTransform.x = this._activeTransform.x;\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      this._passiveTransform.y = this._activeTransform.y;\n      this._ngZone.run(() => {\n        this.ended.next({\n          source: this,\n          distance: this._getDragDistance(pointerPosition),\n          dropPoint: pointerPosition,\n          event\n        });\n      });\n      this._cleanupCachedDimensions();\n      this._dragDropRegistry.stopDragging(this);\n    }\n  }\n  /** Starts the dragging sequence. */\n  _startDragSequence(event) {\n    if (isTouchEvent(event)) {\n      this._lastTouchEventTime = Date.now();\n    }\n    this._toggleNativeDragInteractions();\n    // Needs to happen before the root element is moved.\n    const shadowRoot = this._getShadowRoot();\n    const dropContainer = this._dropContainer;\n    if (shadowRoot) {\n      // In some browsers the global `selectstart` that we maintain in the `DragDropRegistry`\n      // doesn't cross the shadow boundary so we have to prevent it at the shadow root (see #28792).\n      this._ngZone.runOutsideAngular(() => {\n        this._cleanupShadowRootSelectStart = _bindEventWithOptions(this._renderer, shadowRoot, 'selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n      });\n    }\n    if (dropContainer) {\n      const element = this._rootElement;\n      const parent = element.parentNode;\n      const placeholder = this._placeholder = this._createPlaceholderElement();\n      const anchor = this._anchor = this._anchor || this._document.createComment(typeof ngDevMode === 'undefined' || ngDevMode ? 'cdk-drag-anchor' : '');\n      // Insert an anchor node so that we can restore the element's position in the DOM.\n      parent.insertBefore(anchor, element);\n      // There's no risk of transforms stacking when inside a drop container so\n      // we can keep the initial transform up to date any time dragging starts.\n      this._initialTransform = element.style.transform || '';\n      // Create the preview after the initial transform has\n      // been cached, because it can be affected by the transform.\n      this._preview = new PreviewRef(this._document, this._rootElement, this._direction, this._initialDomRect, this._previewTemplate || null, this.previewClass || null, this._pickupPositionOnPage, this._initialTransform, this._config.zIndex || 1000, this._renderer);\n      this._preview.attach(this._getPreviewInsertionPoint(parent, shadowRoot));\n      // We move the element out at the end of the body and we make it hidden, because keeping it in\n      // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n      // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n      toggleVisibility(element, false, dragImportantProperties);\n      this._document.body.appendChild(parent.replaceChild(placeholder, element));\n      this.started.next({\n        source: this,\n        event\n      }); // Emit before notifying the container.\n      dropContainer.start();\n      this._initialContainer = dropContainer;\n      this._initialIndex = dropContainer.getItemIndex(this);\n    } else {\n      this.started.next({\n        source: this,\n        event\n      });\n      this._initialContainer = this._initialIndex = undefined;\n    }\n    // Important to run after we've called `start` on the parent container\n    // so that it has had time to resolve its scrollable parents.\n    this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n  }\n  /**\n   * Sets up the different variables and subscriptions\n   * that will be necessary for the dragging sequence.\n   * @param referenceElement Element that started the drag sequence.\n   * @param event Browser event object that started the sequence.\n   */\n  _initializeDragSequence(referenceElement, event) {\n    // Stop propagation if the item is inside another\n    // draggable so we don't start multiple drag sequences.\n    if (this._parentDragRef) {\n      event.stopPropagation();\n    }\n    const isDragging = this.isDragging();\n    const isTouchSequence = isTouchEvent(event);\n    const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n    const rootElement = this._rootElement;\n    const target = _getEventTarget(event);\n    const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime && this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n    const isFakeEvent = isTouchSequence ? isFakeTouchstartFromScreenReader(event) : isFakeMousedownFromScreenReader(event);\n    // If the event started from an element with the native HTML drag&drop, it'll interfere\n    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n    // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n    // events from firing on touch devices.\n    if (target && target.draggable && event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Abort if the user is already dragging or is using a mouse button other than the primary one.\n    if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n      return;\n    }\n    // If we've got handles, we need to disable the tap highlight on the entire root element,\n    // otherwise iOS will still add it, even though all the drag interactions on the handle\n    // are disabled.\n    if (this._handles.length) {\n      const rootStyles = rootElement.style;\n      this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n      rootStyles.webkitTapHighlightColor = 'transparent';\n    }\n    this._hasMoved = false;\n    this._hasStartedDragging.set(this._hasMoved);\n    // Avoid multiple subscriptions and memory leaks when multi touch\n    // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n    this._removeListeners();\n    this._initialDomRect = this._rootElement.getBoundingClientRect();\n    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n    this._scrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n    if (this._boundaryElement) {\n      this._boundaryRect = getMutableClientRect(this._boundaryElement);\n    }\n    // If we have a custom preview we can't know ahead of time how large it'll be so we position\n    // it next to the cursor. The exception is when the consumer has opted into making the preview\n    // the same size as the root element, in which case we do know the size.\n    const previewTemplate = this._previewTemplate;\n    this._pickupPositionInElement = previewTemplate && previewTemplate.template && !previewTemplate.matchSize ? {\n      x: 0,\n      y: 0\n    } : this._getPointerPositionInElement(this._initialDomRect, referenceElement, event);\n    const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition = this._getPointerPositionOnPage(event);\n    this._pointerDirectionDelta = {\n      x: 0,\n      y: 0\n    };\n    this._pointerPositionAtLastDirectionChange = {\n      x: pointerPosition.x,\n      y: pointerPosition.y\n    };\n    this._dragStartTime = Date.now();\n    this._dragDropRegistry.startDragging(this, event);\n  }\n  /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n  _cleanupDragArtifacts(event) {\n    // Restore the element's visibility and insert it at its old position in the DOM.\n    // It's important that we maintain the position, because moving the element around in the DOM\n    // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n    // while moving the existing elements in all other cases.\n    toggleVisibility(this._rootElement, true, dragImportantProperties);\n    this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._initialDomRect = this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n    // Re-enter the NgZone since we bound `document` events on the outside.\n    this._ngZone.run(() => {\n      const container = this._dropContainer;\n      const currentIndex = container.getItemIndex(this);\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      const distance = this._getDragDistance(pointerPosition);\n      const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n      this.ended.next({\n        source: this,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      this.dropped.next({\n        item: this,\n        currentIndex,\n        previousIndex: this._initialIndex,\n        container: container,\n        previousContainer: this._initialContainer,\n        isPointerOverContainer,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n      this._dropContainer = this._initialContainer;\n    });\n  }\n  /**\n   * Updates the item's position in its drop container, or moves it\n   * into a new one, depending on its current drag position.\n   */\n  _updateActiveDropContainer({\n    x,\n    y\n  }, {\n    x: rawX,\n    y: rawY\n  }) {\n    // Drop container that draggable has been moved into.\n    let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n    // If we couldn't find a new container to move the item into, and the item has left its\n    // initial container, check whether the it's over the initial container. This handles the\n    // case where two containers are connected one way and the user tries to undo dragging an\n    // item into a new container.\n    if (!newContainer && this._dropContainer !== this._initialContainer && this._initialContainer._isOverContainer(x, y)) {\n      newContainer = this._initialContainer;\n    }\n    if (newContainer && newContainer !== this._dropContainer) {\n      this._ngZone.run(() => {\n        // Notify the old container that the item has left.\n        this.exited.next({\n          item: this,\n          container: this._dropContainer\n        });\n        this._dropContainer.exit(this);\n        // Notify the new container that the item has entered.\n        this._dropContainer = newContainer;\n        this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n        // If we're re-entering the initial container and sorting is disabled,\n        // put item the into its starting index to begin with.\n        newContainer.sortingDisabled ? this._initialIndex : undefined);\n        this.entered.next({\n          item: this,\n          container: newContainer,\n          currentIndex: newContainer.getItemIndex(this)\n        });\n      });\n    }\n    // Dragging may have been interrupted as a result of the events above.\n    if (this.isDragging()) {\n      this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n      this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n      if (this.constrainPosition) {\n        this._applyPreviewTransform(x, y);\n      } else {\n        this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n      }\n    }\n  }\n  /**\n   * Animates the preview element from its current position to the location of the drop placeholder.\n   * @returns Promise that resolves when the animation completes.\n   */\n  _animatePreviewToPlaceholder() {\n    // If the user hasn't moved yet, the transitionend event won't fire.\n    if (!this._hasMoved) {\n      return Promise.resolve();\n    }\n    const placeholderRect = this._placeholder.getBoundingClientRect();\n    // Apply the class that adds a transition to the preview.\n    this._preview.addClass('cdk-drag-animating');\n    // Move the preview to the placeholder position.\n    this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n    // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n    // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n    // apply its style, we take advantage of the available info to figure out whether we need to\n    // bind the event in the first place.\n    const duration = this._preview.getTransitionDuration();\n    if (duration === 0) {\n      return Promise.resolve();\n    }\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        const handler = event => {\n          if (!event || this._preview && _getEventTarget(event) === this._preview.element && event.propertyName === 'transform') {\n            cleanupListener();\n            resolve();\n            clearTimeout(timeout);\n          }\n        };\n        // If a transition is short enough, the browser might not fire the `transitionend` event.\n        // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n        // fire if the transition hasn't completed when it was supposed to.\n        const timeout = setTimeout(handler, duration * 1.5);\n        const cleanupListener = this._preview.addEventListener('transitionend', handler);\n      });\n    });\n  }\n  /** Creates an element that will be shown instead of the current element while dragging. */\n  _createPlaceholderElement() {\n    const placeholderConfig = this._placeholderTemplate;\n    const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n    let placeholder;\n    if (placeholderTemplate) {\n      this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n      this._placeholderRef.detectChanges();\n      placeholder = getRootNode(this._placeholderRef, this._document);\n    } else {\n      placeholder = deepCloneNode(this._rootElement);\n    }\n    // Stop pointer events on the preview so the user can't\n    // interact with it while the preview is animating.\n    placeholder.style.pointerEvents = 'none';\n    placeholder.classList.add('cdk-drag-placeholder');\n    return placeholder;\n  }\n  /**\n   * Figures out the coordinates at which an element was picked up.\n   * @param referenceElement Element that initiated the dragging.\n   * @param event Event that initiated the dragging.\n   */\n  _getPointerPositionInElement(elementRect, referenceElement, event) {\n    const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n    const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n    const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n    const scrollPosition = this._getViewportScrollPosition();\n    const x = point.pageX - referenceRect.left - scrollPosition.left;\n    const y = point.pageY - referenceRect.top - scrollPosition.top;\n    return {\n      x: referenceRect.left - elementRect.left + x,\n      y: referenceRect.top - elementRect.top + y\n    };\n  }\n  /** Determines the point of the page that was touched by the user. */\n  _getPointerPositionOnPage(event) {\n    const scrollPosition = this._getViewportScrollPosition();\n    const point = isTouchEvent(event) ?\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n    // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n    // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n    // throwing an error. The value returned here will be incorrect, but since this only\n    // breaks inside a developer tool and the value is only used for secondary information,\n    // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n    event.touches[0] || event.changedTouches[0] || {\n      pageX: 0,\n      pageY: 0\n    } : event;\n    const x = point.pageX - scrollPosition.left;\n    const y = point.pageY - scrollPosition.top;\n    // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n    // coordinate system\n    if (this._ownerSVGElement) {\n      const svgMatrix = this._ownerSVGElement.getScreenCTM();\n      if (svgMatrix) {\n        const svgPoint = this._ownerSVGElement.createSVGPoint();\n        svgPoint.x = x;\n        svgPoint.y = y;\n        return svgPoint.matrixTransform(svgMatrix.inverse());\n      }\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Gets the pointer position on the page, accounting for any position constraints. */\n  _getConstrainedPointerPosition(point) {\n    const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n    let {\n      x,\n      y\n    } = this.constrainPosition ? this.constrainPosition(point, this, this._initialDomRect, this._pickupPositionInElement) : point;\n    if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n      y = this._pickupPositionOnPage.y - (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n    } else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n      x = this._pickupPositionOnPage.x - (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n    }\n    if (this._boundaryRect) {\n      // If not using a custom constrain we need to account for the pickup position in the element\n      // otherwise we do not need to do this, as it has already been accounted for\n      const {\n        x: pickupX,\n        y: pickupY\n      } = !this.constrainPosition ? this._pickupPositionInElement : {\n        x: 0,\n        y: 0\n      };\n      const boundaryRect = this._boundaryRect;\n      const {\n        width: previewWidth,\n        height: previewHeight\n      } = this._getPreviewRect();\n      const minY = boundaryRect.top + pickupY;\n      const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n      const minX = boundaryRect.left + pickupX;\n      const maxX = boundaryRect.right - (previewWidth - pickupX);\n      x = clamp$1(x, minX, maxX);\n      y = clamp$1(y, minY, maxY);\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Updates the current drag delta, based on the user's current pointer position on the page. */\n  _updatePointerDirectionDelta(pointerPositionOnPage) {\n    const {\n      x,\n      y\n    } = pointerPositionOnPage;\n    const delta = this._pointerDirectionDelta;\n    const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n    // Amount of pixels the user has dragged since the last time the direction changed.\n    const changeX = Math.abs(x - positionSinceLastChange.x);\n    const changeY = Math.abs(y - positionSinceLastChange.y);\n    // Because we handle pointer events on a per-pixel basis, we don't want the delta\n    // to change for every pixel, otherwise anything that depends on it can look erratic.\n    // To make the delta more consistent, we track how much the user has moved since the last\n    // delta change and we only update it after it has reached a certain threshold.\n    if (changeX > this._config.pointerDirectionChangeThreshold) {\n      delta.x = x > positionSinceLastChange.x ? 1 : -1;\n      positionSinceLastChange.x = x;\n    }\n    if (changeY > this._config.pointerDirectionChangeThreshold) {\n      delta.y = y > positionSinceLastChange.y ? 1 : -1;\n      positionSinceLastChange.y = y;\n    }\n    return delta;\n  }\n  /** Toggles the native drag interactions, based on how many handles are registered. */\n  _toggleNativeDragInteractions() {\n    if (!this._rootElement || !this._handles) {\n      return;\n    }\n    const shouldEnable = this._handles.length > 0 || !this.isDragging();\n    if (shouldEnable !== this._nativeInteractionsEnabled) {\n      this._nativeInteractionsEnabled = shouldEnable;\n      toggleNativeDragInteractions(this._rootElement, shouldEnable);\n    }\n  }\n  /** Removes the manually-added event listeners from the root element. */\n  _removeRootElementListeners() {\n    this._rootElementCleanups?.forEach(cleanup => cleanup());\n    this._rootElementCleanups = undefined;\n  }\n  /**\n   * Applies a `transform` to the root element, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyRootElementTransform(x, y) {\n    const scale = 1 / this.scale;\n    const transform = getTransform(x * scale, y * scale);\n    const styles = this._rootElement.style;\n    // Cache the previous transform amount only after the first drag sequence, because\n    // we don't want our own transforms to stack on top of each other.\n    // Should be excluded none because none + translate3d(x, y, x) is invalid css\n    if (this._initialTransform == null) {\n      this._initialTransform = styles.transform && styles.transform != 'none' ? styles.transform : '';\n    }\n    // Preserve the previous `transform` value, if there was one. Note that we apply our own\n    // transform before the user's, because things like rotation can affect which direction\n    // the element will be translated towards.\n    styles.transform = combineTransforms(transform, this._initialTransform);\n  }\n  /**\n   * Applies a `transform` to the preview, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyPreviewTransform(x, y) {\n    // Only apply the initial transform if the preview is a clone of the original element, otherwise\n    // it could be completely different and the transform might not make sense anymore.\n    const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n    const transform = getTransform(x, y);\n    this._preview.setTransform(combineTransforms(transform, initialTransform));\n  }\n  /**\n   * Gets the distance that the user has dragged during the current drag sequence.\n   * @param currentPosition Current position of the user's pointer.\n   */\n  _getDragDistance(currentPosition) {\n    const pickupPosition = this._pickupPositionOnPage;\n    if (pickupPosition) {\n      return {\n        x: currentPosition.x - pickupPosition.x,\n        y: currentPosition.y - pickupPosition.y\n      };\n    }\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n  _cleanupCachedDimensions() {\n    this._boundaryRect = this._previewRect = undefined;\n    this._parentPositions.clear();\n  }\n  /**\n   * Checks whether the element is still inside its boundary after the viewport has been resized.\n   * If not, the position is adjusted so that the element fits again.\n   */\n  _containInsideBoundaryOnResize() {\n    let {\n      x,\n      y\n    } = this._passiveTransform;\n    if (x === 0 && y === 0 || this.isDragging() || !this._boundaryElement) {\n      return;\n    }\n    // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n    const elementRect = this._rootElement.getBoundingClientRect();\n    const boundaryRect = this._boundaryElement.getBoundingClientRect();\n    // It's possible that the element got hidden away after dragging (e.g. by switching to a\n    // different tab). Don't do anything in this case so we don't clear the user's position.\n    if (boundaryRect.width === 0 && boundaryRect.height === 0 || elementRect.width === 0 && elementRect.height === 0) {\n      return;\n    }\n    const leftOverflow = boundaryRect.left - elementRect.left;\n    const rightOverflow = elementRect.right - boundaryRect.right;\n    const topOverflow = boundaryRect.top - elementRect.top;\n    const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n    // If the element has become wider than the boundary, we can't\n    // do much to make it fit so we just anchor it to the left.\n    if (boundaryRect.width > elementRect.width) {\n      if (leftOverflow > 0) {\n        x += leftOverflow;\n      }\n      if (rightOverflow > 0) {\n        x -= rightOverflow;\n      }\n    } else {\n      x = 0;\n    }\n    // If the element has become taller than the boundary, we can't\n    // do much to make it fit so we just anchor it to the top.\n    if (boundaryRect.height > elementRect.height) {\n      if (topOverflow > 0) {\n        y += topOverflow;\n      }\n      if (bottomOverflow > 0) {\n        y -= bottomOverflow;\n      }\n    } else {\n      y = 0;\n    }\n    if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n      this.setFreeDragPosition({\n        y,\n        x\n      });\n    }\n  }\n  /** Gets the drag start delay, based on the event type. */\n  _getDragStartDelay(event) {\n    const value = this.dragStartDelay;\n    if (typeof value === 'number') {\n      return value;\n    } else if (isTouchEvent(event)) {\n      return value.touch;\n    }\n    return value ? value.mouse : 0;\n  }\n  /** Updates the internal state of the draggable element when scrolling has occurred. */\n  _updateOnScroll(event) {\n    const scrollDifference = this._parentPositions.handleScroll(event);\n    if (scrollDifference) {\n      const target = _getEventTarget(event);\n      // DOMRect dimensions are based on the scroll position of the page and its parent\n      // node so we have to update the cached boundary DOMRect if the user has scrolled.\n      if (this._boundaryRect && target !== this._boundaryElement && target.contains(this._boundaryElement)) {\n        adjustDomRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n      }\n      this._pickupPositionOnPage.x += scrollDifference.left;\n      this._pickupPositionOnPage.y += scrollDifference.top;\n      // If we're in free drag mode, we have to update the active transform, because\n      // it isn't relative to the viewport like the preview inside a drop list.\n      if (!this._dropContainer) {\n        this._activeTransform.x -= scrollDifference.left;\n        this._activeTransform.y -= scrollDifference.top;\n        this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n      }\n    }\n  }\n  /** Gets the scroll position of the viewport. */\n  _getViewportScrollPosition() {\n    return this._parentPositions.positions.get(this._document)?.scrollPosition || this._parentPositions.getViewportScrollPosition();\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (this._cachedShadowRoot === undefined) {\n      this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Gets the element into which the drag preview should be inserted. */\n  _getPreviewInsertionPoint(initialParent, shadowRoot) {\n    const previewContainer = this._previewContainer || 'global';\n    if (previewContainer === 'parent') {\n      return initialParent;\n    }\n    if (previewContainer === 'global') {\n      const documentRef = this._document;\n      // We can't use the body if the user is in fullscreen mode,\n      // because the preview will render under the fullscreen element.\n      // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n      return shadowRoot || documentRef.fullscreenElement || documentRef.webkitFullscreenElement || documentRef.mozFullScreenElement || documentRef.msFullscreenElement || documentRef.body;\n    }\n    return coerceElement(previewContainer);\n  }\n  /** Lazily resolves and returns the dimensions of the preview. */\n  _getPreviewRect() {\n    // Cache the preview element rect if we haven't cached it already or if\n    // we cached it too early before the element dimensions were computed.\n    if (!this._previewRect || !this._previewRect.width && !this._previewRect.height) {\n      this._previewRect = this._preview ? this._preview.getBoundingClientRect() : this._initialDomRect;\n    }\n    return this._previewRect;\n  }\n  /** Handles a native `dragstart` event. */\n  _nativeDragStart = event => {\n    if (this._handles.length) {\n      const targetHandle = this._getTargetHandle(event);\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        event.preventDefault();\n      }\n    } else if (!this.disabled) {\n      // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n      // but some cases like dragging of links can slip through (see #24403).\n      event.preventDefault();\n    }\n  };\n  /** Gets a handle that is the target of an event. */\n  _getTargetHandle(event) {\n    return this._handles.find(handle => {\n      return event.target && (event.target === handle || handle.contains(event.target));\n    });\n  }\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Callback invoked for `selectstart` events inside the shadow DOM. */\nfunction shadowDomSelectStart(event) {\n  event.preventDefault();\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n  const from = clamp(fromIndex, array.length - 1);\n  const to = clamp(toIndex, array.length - 1);\n  if (from === to) {\n    return;\n  }\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n  array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const from = clamp(currentIndex, currentArray.length - 1);\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n  }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray[currentIndex]);\n  }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n  return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n  _dragDropRegistry;\n  /** Root element container of the drop list. */\n  _element;\n  /** Function used to determine if an item can be sorted into a specific index. */\n  _sortPredicate;\n  /** Cache of the dimensions of all the items inside the container. */\n  _itemPositions = [];\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * that were there at the start of the sequence, as well as any items that have been dragged\n   * in, but haven't been dropped yet.\n   */\n  _activeDraggables;\n  /** Direction in which the list is oriented. */\n  orientation = 'vertical';\n  /** Layout direction of the drop list. */\n  direction;\n  constructor(_dragDropRegistry) {\n    this._dragDropRegistry = _dragDropRegistry;\n  }\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  _previousSwap = {\n    drag: null,\n    delta: 0,\n    overlaps: false\n  };\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const siblings = this._itemPositions;\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n    if (newIndex === -1 && siblings.length > 0) {\n      return null;\n    }\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n    const siblingAtNewPosition = siblings[newIndex];\n    const currentPosition = siblings[currentIndex].clientRect;\n    const newPosition = siblingAtNewPosition.clientRect;\n    const delta = currentIndex > newIndex ? 1 : -1;\n    // How many pixels the item's placeholder should be offset.\n    const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n    // How many pixels all the other items should be offset.\n    const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n    // Save the previous order of the items before moving the item to its new index.\n    // We use this to check whether an item has been moved as a result of the sorting.\n    const oldOrder = siblings.slice();\n    // Shuffle the array in place.\n    moveItemInArray(siblings, currentIndex, newIndex);\n    siblings.forEach((sibling, index) => {\n      // Don't do anything if the position hasn't changed.\n      if (oldOrder[index] === sibling) {\n        return;\n      }\n      const isDraggedItem = sibling.drag === item;\n      const offset = isDraggedItem ? itemOffset : siblingOffset;\n      const elementToOffset = isDraggedItem ? item.getPlaceholderElement() : sibling.drag.getRootElement();\n      // Update the offset to reflect the new position.\n      sibling.offset += offset;\n      const transformAmount = Math.round(sibling.offset * (1 / sibling.drag.scale));\n      // Since we're moving the items with a `transform`, we need to adjust their cached\n      // client rects to reflect their new position, as well as swap their positions in the cache.\n      // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n      // elements may be mid-animation which will give us a wrong result.\n      if (isHorizontal) {\n        // Round the transforms since some browsers will\n        // blur the elements, for sub-pixel transforms.\n        elementToOffset.style.transform = combineTransforms(`translate3d(${transformAmount}px, 0, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, 0, offset);\n      } else {\n        elementToOffset.style.transform = combineTransforms(`translate3d(0, ${transformAmount}px, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, offset, 0);\n      }\n    });\n    // Note that it's important that we do this after the client rects have been adjusted.\n    this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n    this._previousSwap.drag = siblingAtNewPosition.drag;\n    this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    return {\n      previousIndex: currentIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    const newIndex = index == null || index < 0 ?\n    // We use the coordinates of where the item entered the drop\n    // zone to figure out at which index it should be inserted.\n    this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    const activeDraggables = this._activeDraggables;\n    const currentIndex = activeDraggables.indexOf(item);\n    const placeholder = item.getPlaceholderElement();\n    let newPositionReference = activeDraggables[newIndex];\n    // If the item at the new position is the same as the item that is being dragged,\n    // it means that we're trying to restore the item to its initial position. In this\n    // case we should use the next item from the list as the reference.\n    if (newPositionReference === item) {\n      newPositionReference = activeDraggables[newIndex + 1];\n    }\n    // If we didn't find a new position reference, it means that either the item didn't start off\n    // in this container, or that the item requested to be inserted at the end of the list.\n    if (!newPositionReference && (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) && this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n      newPositionReference = activeDraggables[0];\n    }\n    // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n    // into another container and back again), we have to ensure that it isn't duplicated.\n    if (currentIndex > -1) {\n      activeDraggables.splice(currentIndex, 1);\n    }\n    // Don't use items that are being dragged as a reference, because\n    // their element has been moved down to the bottom of the body.\n    if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n      const element = newPositionReference.getRootElement();\n      element.parentElement.insertBefore(placeholder, element);\n      activeDraggables.splice(newIndex, 0, item);\n    } else {\n      this._element.appendChild(placeholder);\n      activeDraggables.push(item);\n    }\n    // The transform needs to be cleared so it doesn't throw off the measurements.\n    placeholder.style.transform = '';\n    // Note that usually `start` is called together with `enter` when an item goes into a new\n    // container. This will cache item positions, but we need to refresh them since the amount\n    // of items has changed.\n    this._cacheItemPositions();\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeDraggables = items.slice();\n    this._cacheItemPositions();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    // TODO(crisbeto): may have to wait for the animations to finish.\n    this._activeDraggables?.forEach(item => {\n      const rootElement = item.getRootElement();\n      if (rootElement) {\n        const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n        rootElement.style.transform = initialTransform || '';\n      }\n    });\n    this._itemPositions = [];\n    this._activeDraggables = [];\n    this._previousSwap.drag = null;\n    this._previousSwap.delta = 0;\n    this._previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeDraggables;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n    // The rest of the logic still stands no matter what orientation we're in, however\n    // we need to invert the array when determining the index.\n    const items = this.orientation === 'horizontal' && this.direction === 'rtl' ? this._itemPositions.slice().reverse() : this._itemPositions;\n    return items.findIndex(currentItem => currentItem.drag === item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll(topDifference, leftDifference) {\n    // Since we know the amount that the user has scrolled we can shift all of the\n    // client rectangles ourselves. This is cheaper than re-measuring everything and\n    // we can avoid inconsistent behavior where we might be measuring the element before\n    // its position has changed.\n    this._itemPositions.forEach(({\n      clientRect\n    }) => {\n      adjustDomRect(clientRect, topDifference, leftDifference);\n    });\n    // We need two loops for this, because we want all of the cached\n    // positions to be up-to-date before we re-sort the item.\n    this._itemPositions.forEach(({\n      drag\n    }) => {\n      if (this._dragDropRegistry.isDragging(drag)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        drag._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    this._element = container;\n  }\n  /** Refreshes the position cache of the items and sibling containers. */\n  _cacheItemPositions() {\n    const isHorizontal = this.orientation === 'horizontal';\n    this._itemPositions = this._activeDraggables.map(drag => {\n      const elementToMeasure = drag.getVisibleElement();\n      return {\n        drag,\n        offset: 0,\n        initialTransform: elementToMeasure.style.transform || '',\n        clientRect: getMutableClientRect(elementToMeasure)\n      };\n    }).sort((a, b) => {\n      return isHorizontal ? a.clientRect.left - b.clientRect.left : a.clientRect.top - b.clientRect.top;\n    });\n  }\n  /**\n   * Gets the offset in pixels by which the item that is being dragged should be moved.\n   * @param currentPosition Current position of the item.\n   * @param newPosition Position of the item where the current item should be moved.\n   * @param delta Direction in which the user is moving.\n   */\n  _getItemOffsetPx(currentPosition, newPosition, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    let itemOffset = isHorizontal ? newPosition.left - currentPosition.left : newPosition.top - currentPosition.top;\n    // Account for differences in the item width/height.\n    if (delta === -1) {\n      itemOffset += isHorizontal ? newPosition.width - currentPosition.width : newPosition.height - currentPosition.height;\n    }\n    return itemOffset;\n  }\n  /**\n   * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n   * @param currentIndex Index of the item currently being dragged.\n   * @param siblings All of the items in the list.\n   * @param delta Direction in which the user is moving.\n   */\n  _getSiblingOffsetPx(currentIndex, siblings, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentPosition = siblings[currentIndex].clientRect;\n    const immediateSibling = siblings[currentIndex + delta * -1];\n    let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n    if (immediateSibling) {\n      const start = isHorizontal ? 'left' : 'top';\n      const end = isHorizontal ? 'right' : 'bottom';\n      // Get the spacing between the start of the current item and the end of the one immediately\n      // after it in the direction in which the user is dragging, or vice versa. We add it to the\n      // offset in order to push the element to where it will be when it's inline and is influenced\n      // by the `margin` of its siblings.\n      if (delta === -1) {\n        siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n      } else {\n        siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n      }\n    }\n    return siblingOffset;\n  }\n  /**\n   * Checks if pointer is entering in the first position\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _shouldEnterAsFirstChild(pointerX, pointerY) {\n    if (!this._activeDraggables.length) {\n      return false;\n    }\n    const itemPositions = this._itemPositions;\n    const isHorizontal = this.orientation === 'horizontal';\n    // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n    // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n    const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n    if (reversed) {\n      const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n      return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n    } else {\n      const firstItemRect = itemPositions[0].clientRect;\n      return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const index = this._itemPositions.findIndex(({\n      drag,\n      clientRect\n    }) => {\n      // Skip the item itself.\n      if (drag === item) {\n        return false;\n      }\n      if (delta) {\n        const direction = isHorizontal ? delta.x : delta.y;\n        // If the user is still hovering over the same item as last time, their cursor hasn't left\n        // the item after we made the swap, and they didn't change the direction in which they're\n        // dragging, we don't consider it a direction swap.\n        if (drag === this._previousSwap.drag && this._previousSwap.overlaps && direction === this._previousSwap.delta) {\n          return false;\n        }\n      }\n      return isHorizontal ?\n      // Round these down since most browsers report client rects with\n      // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n      pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n    });\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n}\n\n/**\n * Strategy that only supports sorting on a list that might wrap.\n * Items are reordered by moving their DOM nodes around.\n * @docs-private\n */\nclass MixedSortStrategy {\n  _document;\n  _dragDropRegistry;\n  /** Root element container of the drop list. */\n  _element;\n  /** Function used to determine if an item can be sorted into a specific index. */\n  _sortPredicate;\n  /** Lazily-resolved root node containing the list. Use `_getRootNode` to read this. */\n  _rootNode;\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * that were there at the start of the sequence, as well as any items that have been dragged\n   * in, but haven't been dropped yet.\n   */\n  _activeItems;\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  _previousSwap = {\n    drag: null,\n    deltaX: 0,\n    deltaY: 0,\n    overlaps: false\n  };\n  /**\n   * Keeps track of the relationship between a node and its next sibling. This information\n   * is used to restore the DOM to the order it was in before dragging started.\n   */\n  _relatedNodes = [];\n  constructor(_document, _dragDropRegistry) {\n    this._document = _document;\n    this._dragDropRegistry = _dragDropRegistry;\n  }\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    const childNodes = this._element.childNodes;\n    this._relatedNodes = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i];\n      this._relatedNodes.push([node, node.nextSibling]);\n    }\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n    const previousSwap = this._previousSwap;\n    if (newIndex === -1 || this._activeItems[newIndex] === item) {\n      return null;\n    }\n    const toSwapWith = this._activeItems[newIndex];\n    // Prevent too many swaps over the same item.\n    if (previousSwap.drag === toSwapWith && previousSwap.overlaps && previousSwap.deltaX === pointerDelta.x && previousSwap.deltaY === pointerDelta.y) {\n      return null;\n    }\n    const previousIndex = this.getItemIndex(item);\n    const current = item.getPlaceholderElement();\n    const overlapElement = toSwapWith.getRootElement();\n    if (newIndex > previousIndex) {\n      overlapElement.after(current);\n    } else {\n      overlapElement.before(current);\n    }\n    moveItemInArray(this._activeItems, previousIndex, newIndex);\n    const newOverlapElement = this._getRootNode().elementFromPoint(pointerX, pointerY);\n    // Note: it's tempting to save the entire `pointerDelta` object here, however that'll\n    // break this functionality, because the same object is passed for all `sort` calls.\n    previousSwap.deltaX = pointerDelta.x;\n    previousSwap.deltaY = pointerDelta.y;\n    previousSwap.drag = toSwapWith;\n    previousSwap.overlaps = overlapElement === newOverlapElement || overlapElement.contains(newOverlapElement);\n    return {\n      previousIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    let enterIndex = index == null || index < 0 ? this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    // In some cases (e.g. when the container has padding) we might not be able to figure\n    // out which item to insert the dragged item next to, because the pointer didn't overlap\n    // with anything. In that case we find the item that's closest to the pointer.\n    if (enterIndex === -1) {\n      enterIndex = this._getClosestItemIndexToPointer(item, pointerX, pointerY);\n    }\n    const targetItem = this._activeItems[enterIndex];\n    const currentIndex = this._activeItems.indexOf(item);\n    if (currentIndex > -1) {\n      this._activeItems.splice(currentIndex, 1);\n    }\n    if (targetItem && !this._dragDropRegistry.isDragging(targetItem)) {\n      this._activeItems.splice(enterIndex, 0, item);\n      targetItem.getRootElement().before(item.getPlaceholderElement());\n    } else {\n      this._activeItems.push(item);\n      this._element.appendChild(item.getPlaceholderElement());\n    }\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeItems = items.slice();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    const root = this._element;\n    const previousSwap = this._previousSwap;\n    // Moving elements around in the DOM can break things like the `@for` loop, because it\n    // uses comment nodes to know where to insert elements. To avoid such issues, we restore\n    // the DOM nodes in the list to their original order when the list is reset.\n    // Note that this could be simpler if we just saved all the nodes, cleared the root\n    // and then appended them in the original order. We don't do it, because it can break\n    // down depending on when the snapshot was taken. E.g. we may end up snapshotting the\n    // placeholder element which is removed after dragging.\n    for (let i = this._relatedNodes.length - 1; i > -1; i--) {\n      const [node, nextSibling] = this._relatedNodes[i];\n      if (node.parentNode === root && node.nextSibling !== nextSibling) {\n        if (nextSibling === null) {\n          root.appendChild(node);\n        } else if (nextSibling.parentNode === root) {\n          root.insertBefore(node, nextSibling);\n        }\n      }\n    }\n    this._relatedNodes = [];\n    this._activeItems = [];\n    previousSwap.drag = null;\n    previousSwap.deltaX = previousSwap.deltaY = 0;\n    previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeItems;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    return this._activeItems.indexOf(item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll() {\n    this._activeItems.forEach(item => {\n      if (this._dragDropRegistry.isDragging(item)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        item._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    if (container !== this._element) {\n      this._element = container;\n      this._rootNode = undefined;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY) {\n    const elementAtPoint = this._getRootNode().elementFromPoint(Math.floor(pointerX), Math.floor(pointerY));\n    const index = elementAtPoint ? this._activeItems.findIndex(item => {\n      const root = item.getRootElement();\n      return elementAtPoint === root || root.contains(elementAtPoint);\n    }) : -1;\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n  /** Lazily resolves the list's root node. */\n  _getRootNode() {\n    // Resolve the root node lazily to ensure that the drop list is in its final place in the DOM.\n    if (!this._rootNode) {\n      this._rootNode = _getShadowRoot(this._element) || this._document;\n    }\n    return this._rootNode;\n  }\n  /**\n   * Finds the index of the item that's closest to the item being dragged.\n   * @param item Item being dragged.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _getClosestItemIndexToPointer(item, pointerX, pointerY) {\n    if (this._activeItems.length === 0) {\n      return -1;\n    }\n    if (this._activeItems.length === 1) {\n      return 0;\n    }\n    let minDistance = Infinity;\n    let minIndex = -1;\n    // Find the Euclidean distance (https://en.wikipedia.org/wiki/Euclidean_distance) between each\n    // item and the pointer, and return the smallest one. Note that this is a bit flawed in that DOM\n    // nodes are rectangles, not points, so we use the top/left coordinates. It should be enough\n    // for our purposes.\n    for (let i = 0; i < this._activeItems.length; i++) {\n      const current = this._activeItems[i];\n      if (current !== item) {\n        const {\n          x,\n          y\n        } = current.getRootElement().getBoundingClientRect();\n        const distance = Math.hypot(pointerX - x, pointerY - y);\n        if (distance < minDistance) {\n          minDistance = distance;\n          minIndex = i;\n        }\n      }\n    }\n    return minIndex;\n  }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/** Vertical direction in which we can auto-scroll. */\nvar AutoScrollVerticalDirection;\n(function (AutoScrollVerticalDirection) {\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"UP\"] = 1] = \"UP\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"DOWN\"] = 2] = \"DOWN\";\n})(AutoScrollVerticalDirection || (AutoScrollVerticalDirection = {}));\n/** Horizontal direction in which we can auto-scroll. */\nvar AutoScrollHorizontalDirection;\n(function (AutoScrollHorizontalDirection) {\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"LEFT\"] = 1] = \"LEFT\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"RIGHT\"] = 2] = \"RIGHT\";\n})(AutoScrollHorizontalDirection || (AutoScrollHorizontalDirection = {}));\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n  _dragDropRegistry;\n  _ngZone;\n  _viewportRuler;\n  /** Element that the drop list is attached to. */\n  element;\n  /** Whether starting a dragging sequence from this container is disabled. */\n  disabled = false;\n  /** Whether sorting items within the list is disabled. */\n  sortingDisabled = false;\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  lockAxis;\n  /**\n   * Whether auto-scrolling the view when the user\n   * moves their pointer close to the edges is disabled.\n   */\n  autoScrollDisabled = false;\n  /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n  autoScrollStep = 2;\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  enterPredicate = () => true;\n  /** Function that is used to determine whether an item can be sorted into a particular index. */\n  sortPredicate = () => true;\n  /** Emits right before dragging has started. */\n  beforeStarted = new Subject();\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  entered = new Subject();\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  exited = new Subject();\n  /** Emits when the user drops an item inside the container. */\n  dropped = new Subject();\n  /** Emits as the user is swapping items while actively dragging. */\n  sorted = new Subject();\n  /** Emits when a dragging sequence is started in a list connected to the current one. */\n  receivingStarted = new Subject();\n  /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n  receivingStopped = new Subject();\n  /** Arbitrary data that can be attached to the drop list. */\n  data;\n  /** Element that is the direct parent of the drag items. */\n  _container;\n  /** Whether an item in the list is being dragged. */\n  _isDragging = false;\n  /** Keeps track of the positions of any parent scrollable elements. */\n  _parentPositions;\n  /** Strategy being used to sort items within the list. */\n  _sortStrategy;\n  /** Cached `DOMRect` of the drop list. */\n  _domRect;\n  /** Draggable items in the container. */\n  _draggables = [];\n  /** Drop lists that are connected to the current one. */\n  _siblings = [];\n  /** Connected siblings that currently have a dragged item. */\n  _activeSiblings = new Set();\n  /** Subscription to the window being scrolled. */\n  _viewportScrollSubscription = Subscription.EMPTY;\n  /** Vertical direction in which the list is currently scrolling. */\n  _verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  /** Horizontal direction in which the list is currently scrolling. */\n  _horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  /** Node that is being auto-scrolled. */\n  _scrollNode;\n  /** Used to signal to the current auto-scroll sequence when to stop. */\n  _stopScrollTimers = new Subject();\n  /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n  _cachedShadowRoot = null;\n  /** Reference to the document. */\n  _document;\n  /** Elements that can be scrolled while the user is dragging. */\n  _scrollableElements = [];\n  /** Initial value for the element's `scroll-snap-type` style. */\n  _initialScrollSnap;\n  /** Direction of the list's layout. */\n  _direction = 'ltr';\n  constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n    this._dragDropRegistry = _dragDropRegistry;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    const coercedElement = this.element = coerceElement(element);\n    this._document = _document;\n    this.withOrientation('vertical').withElementContainer(coercedElement);\n    _dragDropRegistry.registerDropContainer(this);\n    this._parentPositions = new ParentPositionTracker(_document);\n  }\n  /** Removes the drop list functionality from the DOM element. */\n  dispose() {\n    this._stopScrolling();\n    this._stopScrollTimers.complete();\n    this._viewportScrollSubscription.unsubscribe();\n    this.beforeStarted.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this.sorted.complete();\n    this.receivingStarted.complete();\n    this.receivingStopped.complete();\n    this._activeSiblings.clear();\n    this._scrollNode = null;\n    this._parentPositions.clear();\n    this._dragDropRegistry.removeDropContainer(this);\n  }\n  /** Whether an item from this list is currently being dragged. */\n  isDragging() {\n    return this._isDragging;\n  }\n  /** Starts dragging an item. */\n  start() {\n    this._draggingStarted();\n    this._notifyReceivingSiblings();\n  }\n  /**\n   * Attempts to move an item into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    this._draggingStarted();\n    // If sorting is disabled, we want the item to return to its starting\n    // position if the user is returning it to its initial container.\n    if (index == null && this.sortingDisabled) {\n      index = this._draggables.indexOf(item);\n    }\n    this._sortStrategy.enter(item, pointerX, pointerY, index);\n    // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n    // can change when the sort strategy moves the item around inside `enter`.\n    this._cacheParentPositions();\n    // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n    this._notifyReceivingSiblings();\n    this.entered.next({\n      item,\n      container: this,\n      currentIndex: this.getItemIndex(item)\n    });\n  }\n  /**\n   * Removes an item from the container after it was dragged into another container by the user.\n   * @param item Item that was dragged out.\n   */\n  exit(item) {\n    this._reset();\n    this.exited.next({\n      item,\n      container: this\n    });\n  }\n  /**\n   * Drops an item into this container.\n   * @param item Item being dropped into the container.\n   * @param currentIndex Index at which the item should be inserted.\n   * @param previousIndex Index of the item when dragging started.\n   * @param previousContainer Container from which the item got dragged in.\n   * @param isPointerOverContainer Whether the user's pointer was over the\n   *    container when the item was dropped.\n   * @param distance Distance the user has dragged since the start of the dragging sequence.\n   * @param event Event that triggered the dropping sequence.\n   *\n   * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n   */\n  drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n    this._reset();\n    this.dropped.next({\n      item,\n      currentIndex,\n      previousIndex,\n      container: this,\n      previousContainer,\n      isPointerOverContainer,\n      distance,\n      dropPoint,\n      event\n    });\n  }\n  /**\n   * Sets the draggable items that are a part of this list.\n   * @param items Items that are a part of this list.\n   */\n  withItems(items) {\n    const previousItems = this._draggables;\n    this._draggables = items;\n    items.forEach(item => item._withDropContainer(this));\n    if (this.isDragging()) {\n      const draggedItems = previousItems.filter(item => item.isDragging());\n      // If all of the items being dragged were removed\n      // from the list, abort the current drag sequence.\n      if (draggedItems.every(item => items.indexOf(item) === -1)) {\n        this._reset();\n      } else {\n        this._sortStrategy.withItems(this._draggables);\n      }\n    }\n    return this;\n  }\n  /** Sets the layout direction of the drop list. */\n  withDirection(direction) {\n    this._direction = direction;\n    if (this._sortStrategy instanceof SingleAxisSortStrategy) {\n      this._sortStrategy.direction = direction;\n    }\n    return this;\n  }\n  /**\n   * Sets the containers that are connected to this one. When two or more containers are\n   * connected, the user will be allowed to transfer items between them.\n   * @param connectedTo Other containers that the current containers should be connected to.\n   */\n  connectedTo(connectedTo) {\n    this._siblings = connectedTo.slice();\n    return this;\n  }\n  /**\n   * Sets the orientation of the container.\n   * @param orientation New orientation for the container.\n   */\n  withOrientation(orientation) {\n    if (orientation === 'mixed') {\n      this._sortStrategy = new MixedSortStrategy(this._document, this._dragDropRegistry);\n    } else {\n      const strategy = new SingleAxisSortStrategy(this._dragDropRegistry);\n      strategy.direction = this._direction;\n      strategy.orientation = orientation;\n      this._sortStrategy = strategy;\n    }\n    this._sortStrategy.withElementContainer(this._container);\n    this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    return this;\n  }\n  /**\n   * Sets which parent elements are can be scrolled while the user is dragging.\n   * @param elements Elements that can be scrolled.\n   */\n  withScrollableParents(elements) {\n    const element = this._container;\n    // We always allow the current element to be scrollable\n    // so we need to ensure that it's in the array.\n    this._scrollableElements = elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n    return this;\n  }\n  /**\n   * Configures the drop list so that a different element is used as the container for the\n   * dragged items. This is useful for the cases when one might not have control over the\n   * full DOM that sets up the dragging.\n   * Note that the alternate container needs to be a descendant of the drop list.\n   * @param container New element container to be assigned.\n   */\n  withElementContainer(container) {\n    if (container === this._container) {\n      return this;\n    }\n    const element = coerceElement(this.element);\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && container !== element && !element.contains(container)) {\n      throw new Error('Invalid DOM structure for drop list. Alternate container element must be a descendant of the drop list.');\n    }\n    const oldContainerIndex = this._scrollableElements.indexOf(this._container);\n    const newContainerIndex = this._scrollableElements.indexOf(container);\n    if (oldContainerIndex > -1) {\n      this._scrollableElements.splice(oldContainerIndex, 1);\n    }\n    if (newContainerIndex > -1) {\n      this._scrollableElements.splice(newContainerIndex, 1);\n    }\n    if (this._sortStrategy) {\n      this._sortStrategy.withElementContainer(container);\n    }\n    this._cachedShadowRoot = null;\n    this._scrollableElements.unshift(container);\n    this._container = container;\n    return this;\n  }\n  /** Gets the scrollable parents that are registered with this drop container. */\n  getScrollableParents() {\n    return this._scrollableElements;\n  }\n  /**\n   * Figures out the index of an item in the container.\n   * @param item Item whose index should be determined.\n   */\n  getItemIndex(item) {\n    return this._isDragging ? this._sortStrategy.getItemIndex(item) : this._draggables.indexOf(item);\n  }\n  /**\n   * Whether the list is able to receive the item that\n   * is currently being dragged inside a connected drop list.\n   */\n  isReceiving() {\n    return this._activeSiblings.size > 0;\n  }\n  /**\n   * Sorts an item inside the container based on its position.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  _sortItem(item, pointerX, pointerY, pointerDelta) {\n    // Don't sort the item if sorting is disabled or it's out of range.\n    if (this.sortingDisabled || !this._domRect || !isPointerNearDomRect(this._domRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n      return;\n    }\n    const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n    if (result) {\n      this.sorted.next({\n        previousIndex: result.previousIndex,\n        currentIndex: result.currentIndex,\n        container: this,\n        item\n      });\n    }\n  }\n  /**\n   * Checks whether the user's pointer is close to the edges of either the\n   * viewport or the drop list and starts the auto-scroll sequence.\n   * @param pointerX User's pointer position along the x axis.\n   * @param pointerY User's pointer position along the y axis.\n   */\n  _startScrollingIfNecessary(pointerX, pointerY) {\n    if (this.autoScrollDisabled) {\n      return;\n    }\n    let scrollNode;\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    // Check whether we should start scrolling any of the parent containers.\n    this._parentPositions.positions.forEach((position, element) => {\n      // We have special handling for the `document` below. Also this would be\n      // nicer with a  for...of loop, but it requires changing a compiler flag.\n      if (element === this._document || !position.clientRect || scrollNode) {\n        return;\n      }\n      if (isPointerNearDomRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n        [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, this._direction, pointerX, pointerY);\n        if (verticalScrollDirection || horizontalScrollDirection) {\n          scrollNode = element;\n        }\n      }\n    });\n    // Otherwise check if we can start scrolling the viewport.\n    if (!verticalScrollDirection && !horizontalScrollDirection) {\n      const {\n        width,\n        height\n      } = this._viewportRuler.getViewportSize();\n      const domRect = {\n        width,\n        height,\n        top: 0,\n        right: width,\n        bottom: height,\n        left: 0\n      };\n      verticalScrollDirection = getVerticalScrollDirection(domRect, pointerY);\n      horizontalScrollDirection = getHorizontalScrollDirection(domRect, pointerX);\n      scrollNode = window;\n    }\n    if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection || horizontalScrollDirection !== this._horizontalScrollDirection || scrollNode !== this._scrollNode)) {\n      this._verticalScrollDirection = verticalScrollDirection;\n      this._horizontalScrollDirection = horizontalScrollDirection;\n      this._scrollNode = scrollNode;\n      if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n        this._ngZone.runOutsideAngular(this._startScrollInterval);\n      } else {\n        this._stopScrolling();\n      }\n    }\n  }\n  /** Stops any currently-running auto-scroll sequences. */\n  _stopScrolling() {\n    this._stopScrollTimers.next();\n  }\n  /** Starts the dragging sequence within the list. */\n  _draggingStarted() {\n    const styles = this._container.style;\n    this.beforeStarted.next();\n    this._isDragging = true;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n    // Prevent the check from running on apps not using an alternate container. Ideally we\n    // would always run it, but introducing it at this stage would be a breaking change.\n    this._container !== coerceElement(this.element)) {\n      for (const drag of this._draggables) {\n        if (!drag.isDragging() && drag.getVisibleElement().parentNode !== this._container) {\n          throw new Error('Invalid DOM structure for drop list. All items must be placed directly inside of the element container.');\n        }\n      }\n    }\n    // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n    // scrolling. The browser seems to round the value based on the snapping points which means\n    // that we can't increment/decrement the scroll position.\n    this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n    styles.scrollSnapType = styles.msScrollSnapType = 'none';\n    this._sortStrategy.start(this._draggables);\n    this._cacheParentPositions();\n    this._viewportScrollSubscription.unsubscribe();\n    this._listenToScrollEvents();\n  }\n  /** Caches the positions of the configured scrollable parents. */\n  _cacheParentPositions() {\n    this._parentPositions.cache(this._scrollableElements);\n    // The list element is always in the `scrollableElements`\n    // so we can take advantage of the cached `DOMRect`.\n    this._domRect = this._parentPositions.positions.get(this._container).clientRect;\n  }\n  /** Resets the container to its initial state. */\n  _reset() {\n    this._isDragging = false;\n    const styles = this._container.style;\n    styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n    this._siblings.forEach(sibling => sibling._stopReceiving(this));\n    this._sortStrategy.reset();\n    this._stopScrolling();\n    this._viewportScrollSubscription.unsubscribe();\n    this._parentPositions.clear();\n  }\n  /** Starts the interval that'll auto-scroll the element. */\n  _startScrollInterval = () => {\n    this._stopScrolling();\n    interval(0, animationFrameScheduler).pipe(takeUntil(this._stopScrollTimers)).subscribe(() => {\n      const node = this._scrollNode;\n      const scrollStep = this.autoScrollStep;\n      if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n        node.scrollBy(0, -scrollStep);\n      } else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n        node.scrollBy(0, scrollStep);\n      }\n      if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n        node.scrollBy(-scrollStep, 0);\n      } else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n        node.scrollBy(scrollStep, 0);\n      }\n    });\n  };\n  /**\n   * Checks whether the user's pointer is positioned over the container.\n   * @param x Pointer position along the X axis.\n   * @param y Pointer position along the Y axis.\n   */\n  _isOverContainer(x, y) {\n    return this._domRect != null && isInsideClientRect(this._domRect, x, y);\n  }\n  /**\n   * Figures out whether an item should be moved into a sibling\n   * drop container, based on its current position.\n   * @param item Drag item that is being moved.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _getSiblingContainerFromPosition(item, x, y) {\n    return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n  }\n  /**\n   * Checks whether the drop list can receive the passed-in item.\n   * @param item Item that is being dragged into the list.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _canReceive(item, x, y) {\n    if (!this._domRect || !isInsideClientRect(this._domRect, x, y) || !this.enterPredicate(item, this)) {\n      return false;\n    }\n    const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n    // If there's no element at the pointer position, then\n    // the client rect is probably scrolled out of the view.\n    if (!elementFromPoint) {\n      return false;\n    }\n    // The `DOMRect`, that we're using to find the container over which the user is\n    // hovering, doesn't give us any information on whether the element has been scrolled\n    // out of the view or whether it's overlapping with other containers. This means that\n    // we could end up transferring the item into a container that's invisible or is positioned\n    // below another one. We use the result from `elementFromPoint` to get the top-most element\n    // at the pointer position and to find whether it's one of the intersecting drop containers.\n    return elementFromPoint === this._container || this._container.contains(elementFromPoint);\n  }\n  /**\n   * Called by one of the connected drop lists when a dragging sequence has started.\n   * @param sibling Sibling in which dragging has started.\n   */\n  _startReceiving(sibling, items) {\n    const activeSiblings = this._activeSiblings;\n    if (!activeSiblings.has(sibling) && items.every(item => {\n      // Note that we have to add an exception to the `enterPredicate` for items that started off\n      // in this drop list. The drag ref has logic that allows an item to return to its initial\n      // container, if it has left the initial container and none of the connected containers\n      // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n      return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n    })) {\n      activeSiblings.add(sibling);\n      this._cacheParentPositions();\n      this._listenToScrollEvents();\n      this.receivingStarted.next({\n        initiator: sibling,\n        receiver: this,\n        items\n      });\n    }\n  }\n  /**\n   * Called by a connected drop list when dragging has stopped.\n   * @param sibling Sibling whose dragging has stopped.\n   */\n  _stopReceiving(sibling) {\n    this._activeSiblings.delete(sibling);\n    this._viewportScrollSubscription.unsubscribe();\n    this.receivingStopped.next({\n      initiator: sibling,\n      receiver: this\n    });\n  }\n  /**\n   * Starts listening to scroll events on the viewport.\n   * Used for updating the internal state of the list.\n   */\n  _listenToScrollEvents() {\n    this._viewportScrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(event => {\n      if (this.isDragging()) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n          this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n        }\n      } else if (this.isReceiving()) {\n        this._cacheParentPositions();\n      }\n    });\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (!this._cachedShadowRoot) {\n      const shadowRoot = _getShadowRoot(this._container);\n      this._cachedShadowRoot = shadowRoot || this._document;\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Notifies any siblings that may potentially receive the item. */\n  _notifyReceivingSiblings() {\n    const draggedItems = this._sortStrategy.getActiveItemsSnapshot().filter(item => item.isDragging());\n    this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n  }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n  const {\n    top,\n    bottom,\n    height\n  } = clientRect;\n  const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n    return AutoScrollVerticalDirection.UP;\n  } else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n    return AutoScrollVerticalDirection.DOWN;\n  }\n  return AutoScrollVerticalDirection.NONE;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n  const {\n    left,\n    right,\n    width\n  } = clientRect;\n  const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n    return AutoScrollHorizontalDirection.LEFT;\n  } else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n    return AutoScrollHorizontalDirection.RIGHT;\n  }\n  return AutoScrollHorizontalDirection.NONE;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param direction Layout direction of the drop list.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, direction, pointerX, pointerY) {\n  const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n  const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n  let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  // Note that we here we do some extra checks for whether the element is actually scrollable in\n  // a certain direction and we only assign the scroll direction if it is. We do this so that we\n  // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n  // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n  if (computedVertical) {\n    const scrollTop = element.scrollTop;\n    if (computedVertical === AutoScrollVerticalDirection.UP) {\n      if (scrollTop > 0) {\n        verticalScrollDirection = AutoScrollVerticalDirection.UP;\n      }\n    } else if (element.scrollHeight - scrollTop > element.clientHeight) {\n      verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n    }\n  }\n  if (computedHorizontal) {\n    const scrollLeft = element.scrollLeft;\n    if (direction === 'rtl') {\n      if (computedHorizontal === AutoScrollHorizontalDirection.RIGHT) {\n        // In RTL `scrollLeft` will be negative when scrolled.\n        if (scrollLeft < 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n        }\n      } else if (element.scrollWidth + scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n      }\n    } else {\n      if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n        if (scrollLeft > 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n        }\n      } else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n      }\n    }\n  }\n  return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind a capturing event. */\nconst capturingEventOptions = {\n  capture: true\n};\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = {\n  passive: false,\n  capture: true\n};\n/**\n * Component used to load the drag&drop reset styles.\n * @docs-private\n */\nclass _ResetsLoader {\n  static ɵfac = function _ResetsLoader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _ResetsLoader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _ResetsLoader,\n    selectors: [[\"ng-component\"]],\n    hostAttrs: [\"cdk-drag-resets-container\", \"\"],\n    decls: 0,\n    vars: 0,\n    template: function _ResetsLoader_Template(rf, ctx) {},\n    styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_ResetsLoader, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'cdk-drag-resets-container': ''\n      },\n      styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\\n\"]\n    }]\n  }], null, null);\n})();\n// TODO(crisbeto): remove generics when making breaking changes.\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\nclass DragDropRegistry {\n  _ngZone = inject(NgZone);\n  _document = inject(DOCUMENT);\n  _styleLoader = inject(_CdkPrivateStyleLoader);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  _cleanupDocumentTouchmove;\n  /** Registered drop container instances. */\n  _dropInstances = new Set();\n  /** Registered drag item instances. */\n  _dragInstances = new Set();\n  /** Drag item instances that are currently being dragged. */\n  _activeDragInstances = signal([]);\n  /** Keeps track of the event listeners that we've bound to the `document`. */\n  _globalListeners;\n  /**\n   * Predicate function to check if an item is being dragged.  Moved out into a property,\n   * because it'll be called a lot and we don't want to create a new function every time.\n   */\n  _draggingPredicate = item => item.isDragging();\n  /**\n   * Map tracking DOM nodes and their corresponding drag directives. Note that this is different\n   * from looking through the `_dragInstances` and getting their root node, because the root node\n   * isn't necessarily the node that the directive is set on.\n   */\n  _domNodesToDirectives = null;\n  /**\n   * Emits the `touchmove` or `mousemove` events that are dispatched\n   * while the user is dragging a drag item instance.\n   */\n  pointerMove = new Subject();\n  /**\n   * Emits the `touchend` or `mouseup` events that are dispatched\n   * while the user is dragging a drag item instance.\n   */\n  pointerUp = new Subject();\n  /**\n   * Emits when the viewport has been scrolled while the user is dragging an item.\n   * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n   * @breaking-change 13.0.0\n   */\n  scroll = new Subject();\n  constructor() {}\n  /** Adds a drop container to the registry. */\n  registerDropContainer(drop) {\n    if (!this._dropInstances.has(drop)) {\n      this._dropInstances.add(drop);\n    }\n  }\n  /** Adds a drag item instance to the registry. */\n  registerDragItem(drag) {\n    this._dragInstances.add(drag);\n    // The `touchmove` event gets bound once, ahead of time, because WebKit\n    // won't preventDefault on a dynamically-added `touchmove` listener.\n    // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n    if (this._dragInstances.size === 1) {\n      this._ngZone.runOutsideAngular(() => {\n        // The event handler has to be explicitly active,\n        // because newer browsers make it passive by default.\n        this._cleanupDocumentTouchmove?.();\n        this._cleanupDocumentTouchmove = _bindEventWithOptions(this._renderer, this._document, 'touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n      });\n    }\n  }\n  /** Removes a drop container from the registry. */\n  removeDropContainer(drop) {\n    this._dropInstances.delete(drop);\n  }\n  /** Removes a drag item instance from the registry. */\n  removeDragItem(drag) {\n    this._dragInstances.delete(drag);\n    this.stopDragging(drag);\n    if (this._dragInstances.size === 0) {\n      this._cleanupDocumentTouchmove?.();\n    }\n  }\n  /**\n   * Starts the dragging sequence for a drag instance.\n   * @param drag Drag instance which is being dragged.\n   * @param event Event that initiated the dragging.\n   */\n  startDragging(drag, event) {\n    // Do not process the same drag twice to avoid memory leaks and redundant listeners\n    if (this._activeDragInstances().indexOf(drag) > -1) {\n      return;\n    }\n    this._styleLoader.load(_ResetsLoader);\n    this._activeDragInstances.update(instances => [...instances, drag]);\n    if (this._activeDragInstances().length === 1) {\n      // We explicitly bind __active__ listeners here, because newer browsers will default to\n      // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n      // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n      const isTouchEvent = event.type.startsWith('touch');\n      const endEventHandler = e => this.pointerUp.next(e);\n      const toBind = [\n      // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n      // the document. See https://github.com/angular/components/issues/17144.\n      ['scroll', e => this.scroll.next(e), capturingEventOptions],\n      // Preventing the default action on `mousemove` isn't enough to disable text selection\n      // on Safari so we need to prevent the selection event as well. Alternatively this can\n      // be done by setting `user-select: none` on the `body`, however it has causes a style\n      // recalculation which can be expensive on pages with a lot of elements.\n      ['selectstart', this._preventDefaultWhileDragging, activeCapturingEventOptions]];\n      if (isTouchEvent) {\n        toBind.push(['touchend', endEventHandler, capturingEventOptions], ['touchcancel', endEventHandler, capturingEventOptions]);\n      } else {\n        toBind.push(['mouseup', endEventHandler, capturingEventOptions]);\n      }\n      // We don't have to bind a move event for touch drag sequences, because\n      // we already have a persistent global one bound from `registerDragItem`.\n      if (!isTouchEvent) {\n        toBind.push(['mousemove', e => this.pointerMove.next(e), activeCapturingEventOptions]);\n      }\n      this._ngZone.runOutsideAngular(() => {\n        this._globalListeners = toBind.map(([name, handler, options]) => _bindEventWithOptions(this._renderer, this._document, name, handler, options));\n      });\n    }\n  }\n  /** Stops dragging a drag item instance. */\n  stopDragging(drag) {\n    this._activeDragInstances.update(instances => {\n      const index = instances.indexOf(drag);\n      if (index > -1) {\n        instances.splice(index, 1);\n        return [...instances];\n      }\n      return instances;\n    });\n    if (this._activeDragInstances().length === 0) {\n      this._clearGlobalListeners();\n    }\n  }\n  /** Gets whether a drag item instance is currently being dragged. */\n  isDragging(drag) {\n    return this._activeDragInstances().indexOf(drag) > -1;\n  }\n  /**\n   * Gets a stream that will emit when any element on the page is scrolled while an item is being\n   * dragged.\n   * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n   *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n   *   be used to include an additional top-level listener at the shadow root level.\n   */\n  scrolled(shadowRoot) {\n    const streams = [this.scroll];\n    if (shadowRoot && shadowRoot !== this._document) {\n      // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n      // because we want to guarantee that the event is bound outside of the `NgZone`. With\n      // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n      streams.push(new Observable(observer => {\n        return this._ngZone.runOutsideAngular(() => {\n          const cleanup = _bindEventWithOptions(this._renderer, shadowRoot, 'scroll', event => {\n            if (this._activeDragInstances().length) {\n              observer.next(event);\n            }\n          }, capturingEventOptions);\n          return () => {\n            cleanup();\n          };\n        });\n      }));\n    }\n    return merge(...streams);\n  }\n  /**\n   * Tracks the DOM node which has a draggable directive.\n   * @param node Node to track.\n   * @param dragRef Drag directive set on the node.\n   */\n  registerDirectiveNode(node, dragRef) {\n    this._domNodesToDirectives ??= new WeakMap();\n    this._domNodesToDirectives.set(node, dragRef);\n  }\n  /**\n   * Stops tracking a draggable directive node.\n   * @param node Node to stop tracking.\n   */\n  removeDirectiveNode(node) {\n    this._domNodesToDirectives?.delete(node);\n  }\n  /**\n   * Gets the drag directive corresponding to a specific DOM node, if any.\n   * @param node Node for which to do the lookup.\n   */\n  getDragDirectiveForNode(node) {\n    return this._domNodesToDirectives?.get(node) || null;\n  }\n  ngOnDestroy() {\n    this._dragInstances.forEach(instance => this.removeDragItem(instance));\n    this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n    this._domNodesToDirectives = null;\n    this._clearGlobalListeners();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n  /**\n   * Event listener that will prevent the default browser action while the user is dragging.\n   * @param event Event whose default action should be prevented.\n   */\n  _preventDefaultWhileDragging = event => {\n    if (this._activeDragInstances().length > 0) {\n      event.preventDefault();\n    }\n  };\n  /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n  _persistentTouchmoveListener = event => {\n    if (this._activeDragInstances().length > 0) {\n      // Note that we only want to prevent the default action after dragging has actually started.\n      // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n      // but it could be pushed back if the user has set up a drag delay or threshold.\n      if (this._activeDragInstances().some(this._draggingPredicate)) {\n        event.preventDefault();\n      }\n      this.pointerMove.next(event);\n    }\n  };\n  /** Clears out the global event listeners from the `document`. */\n  _clearGlobalListeners() {\n    this._globalListeners?.forEach(cleanup => cleanup());\n    this._globalListeners = undefined;\n  }\n  static ɵfac = function DragDropRegistry_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDropRegistry)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DragDropRegistry,\n    factory: DragDropRegistry.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDropRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n  dragStartThreshold: 5,\n  pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n  _document = inject(DOCUMENT);\n  _ngZone = inject(NgZone);\n  _viewportRuler = inject(ViewportRuler);\n  _dragDropRegistry = inject(DragDropRegistry);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  constructor() {}\n  /**\n   * Turns an element into a draggable item.\n   * @param element Element to which to attach the dragging functionality.\n   * @param config Object used to configure the dragging behavior.\n   */\n  createDrag(element, config = DEFAULT_CONFIG) {\n    return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry, this._renderer);\n  }\n  /**\n   * Turns an element into a drop list.\n   * @param element Element to which to attach the drop list functionality.\n   */\n  createDropList(element) {\n    return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n  }\n  static ɵfac = function DragDrop_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDrop)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DragDrop,\n    factory: DragDrop.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDrop, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n  if (node.nodeType !== 1) {\n    throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n  }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n  element = inject(ElementRef);\n  _parentDrag = inject(CDK_DRAG_PARENT, {\n    optional: true,\n    skipSelf: true\n  });\n  _dragDropRegistry = inject(DragDropRegistry);\n  /** Emits when the state of the handle has changed. */\n  _stateChanges = new Subject();\n  /** Whether starting to drag through this handle is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._stateChanges.next(this);\n  }\n  _disabled = false;\n  constructor() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      assertElementNode(this.element.nativeElement, 'cdkDragHandle');\n    }\n    this._parentDrag?._addHandle(this);\n  }\n  ngAfterViewInit() {\n    if (!this._parentDrag) {\n      let parent = this.element.nativeElement.parentElement;\n      while (parent) {\n        const ref = this._dragDropRegistry.getDragDirectiveForNode(parent);\n        if (ref) {\n          this._parentDrag = ref;\n          ref._addHandle(this);\n          break;\n        }\n        parent = parent.parentElement;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._parentDrag?._removeHandle(this);\n    this._stateChanges.complete();\n  }\n  static ɵfac = function CdkDragHandle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragHandle)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDragHandle,\n    selectors: [[\"\", \"cdkDragHandle\", \"\"]],\n    hostAttrs: [1, \"cdk-drag-handle\"],\n    inputs: {\n      disabled: [2, \"cdkDragHandleDisabled\", \"disabled\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_HANDLE,\n      useExisting: CdkDragHandle\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDragHandle, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDragHandle]',\n      host: {\n        'class': 'cdk-drag-handle'\n      },\n      providers: [{\n        provide: CDK_DRAG_HANDLE,\n        useExisting: CdkDragHandle\n      }]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragHandleDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n  element = inject(ElementRef);\n  dropContainer = inject(CDK_DROP_LIST, {\n    optional: true,\n    skipSelf: true\n  });\n  _ngZone = inject(NgZone);\n  _viewContainerRef = inject(ViewContainerRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _selfHandle = inject(CDK_DRAG_HANDLE, {\n    optional: true,\n    self: true\n  });\n  _parentDrag = inject(CDK_DRAG_PARENT, {\n    optional: true,\n    skipSelf: true\n  });\n  _dragDropRegistry = inject(DragDropRegistry);\n  _destroyed = new Subject();\n  _handles = new BehaviorSubject([]);\n  _previewTemplate;\n  _placeholderTemplate;\n  /** Reference to the underlying drag instance. */\n  _dragRef;\n  /** Arbitrary data to attach to this drag instance. */\n  data;\n  /** Locks the position of the dragged element along the specified axis. */\n  lockAxis;\n  /**\n   * Selector that will be used to determine the root draggable element, starting from\n   * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n   * when trying to enable dragging on an element that you might not have access to.\n   */\n  rootElementSelector;\n  /**\n   * Node or selector that will be used to determine the element to which the draggable's\n   * position will be constrained. If a string is passed in, it'll be used as a selector that\n   * will be matched starting from the element's parent and going up the DOM until a match\n   * has been found.\n   */\n  boundaryElement;\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  dragStartDelay;\n  /**\n   * Sets the position of a `CdkDrag` that is outside of a drop container.\n   * Can be used to restore the element's position for a returning user.\n   */\n  freeDragPosition;\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this.dropContainer && this.dropContainer.disabled);\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._dragRef.disabled = this._disabled;\n  }\n  _disabled;\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page, a reference to the item being dragged and its dimensions.\n   * Should return a point describing where the item should be rendered.\n   */\n  constrainPosition;\n  /** Class to be added to the preview element. */\n  previewClass;\n  /**\n   * Configures the place into which the preview of the item will be inserted. Can be configured\n   * globally through `CDK_DROP_LIST`. Possible values:\n   * - `global` - Preview will be inserted at the bottom of the `<body>`. The advantage is that\n   * you don't have to worry about `overflow: hidden` or `z-index`, but the item won't retain\n   * its inherited styles.\n   * - `parent` - Preview will be inserted into the parent of the drag item. The advantage is that\n   * inherited styles will be preserved, but it may be clipped by `overflow: hidden` or not be\n   * visible due to `z-index`. Furthermore, the preview is going to have an effect over selectors\n   * like `:nth-child` and some flexbox configurations.\n   * - `ElementRef<HTMLElement> | HTMLElement` - Preview will be inserted into a specific element.\n   * Same advantages and disadvantages as `parent`.\n   */\n  previewContainer;\n  /**\n   * If the parent of the dragged element has a `scale` transform, it can throw off the\n   * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n   */\n  scale = 1;\n  /** Emits when the user starts dragging the item. */\n  started = new EventEmitter();\n  /** Emits when the user has released a drag item, before any animations have started. */\n  released = new EventEmitter();\n  /** Emits when the user stops dragging an item in the container. */\n  ended = new EventEmitter();\n  /** Emits when the user has moved the item into a new container. */\n  entered = new EventEmitter();\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  exited = new EventEmitter();\n  /** Emits when the user drops the item inside a container. */\n  dropped = new EventEmitter();\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  moved = new Observable(observer => {\n    const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n      source: this,\n      pointerPosition: movedEvent.pointerPosition,\n      event: movedEvent.event,\n      delta: movedEvent.delta,\n      distance: movedEvent.distance\n    }))).subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n    };\n  });\n  _injector = inject(Injector);\n  constructor() {\n    const dropContainer = this.dropContainer;\n    const config = inject(CDK_DRAG_CONFIG, {\n      optional: true\n    });\n    const dragDrop = inject(DragDrop);\n    this._dragRef = dragDrop.createDrag(this.element, {\n      dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n      pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ? config.pointerDirectionChangeThreshold : 5,\n      zIndex: config?.zIndex\n    });\n    this._dragRef.data = this;\n    this._dragDropRegistry.registerDirectiveNode(this.element.nativeElement, this);\n    if (config) {\n      this._assignDefaults(config);\n    }\n    // Note that usually the container is assigned when the drop list is picks up the item, but in\n    // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n    // where there are no items on the first change detection pass, but the items get picked up as\n    // soon as the user triggers another pass by dragging. This is a problem, because the item would\n    // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n    // is too late since the two modes save different kinds of information. We work around it by\n    // assigning the drop container both from here and the list.\n    if (dropContainer) {\n      this._dragRef._withDropContainer(dropContainer._dropListRef);\n      dropContainer.addItem(this);\n      // The drop container reads this so we need to sync it here.\n      dropContainer._dropListRef.beforeStarted.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._dragRef.scale = this.scale;\n      });\n    }\n    this._syncInputs(this._dragRef);\n    this._handleEvents(this._dragRef);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._dragRef.getPlaceholderElement();\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._dragRef.getRootElement();\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._dragRef.reset();\n  }\n  /**\n   * Gets the pixel coordinates of the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    return this._dragRef.getFreeDragPosition();\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._dragRef.setFreeDragPosition(value);\n  }\n  ngAfterViewInit() {\n    // We need to wait until after render, in order for the reference\n    // element to be in the proper place in the DOM. This is mostly relevant\n    // for draggable elements inside portals since they get stamped out in\n    // their original DOM position, and then they get transferred to the portal.\n    afterNextRender(() => {\n      this._updateRootElement();\n      this._setupHandlesListener();\n      this._dragRef.scale = this.scale;\n      if (this.freeDragPosition) {\n        this._dragRef.setFreeDragPosition(this.freeDragPosition);\n      }\n    }, {\n      injector: this._injector\n    });\n  }\n  ngOnChanges(changes) {\n    const rootSelectorChange = changes['rootElementSelector'];\n    const positionChange = changes['freeDragPosition'];\n    // We don't have to react to the first change since it's being\n    // handled in the `afterNextRender` queued up in the constructor.\n    if (rootSelectorChange && !rootSelectorChange.firstChange) {\n      this._updateRootElement();\n    }\n    // Scale affects the free drag position so we need to sync it up here.\n    this._dragRef.scale = this.scale;\n    // Skip the first change since it's being handled in the `afterNextRender` queued up in the\n    // constructor.\n    if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n      this._dragRef.setFreeDragPosition(this.freeDragPosition);\n    }\n  }\n  ngOnDestroy() {\n    if (this.dropContainer) {\n      this.dropContainer.removeItem(this);\n    }\n    this._dragDropRegistry.removeDirectiveNode(this.element.nativeElement);\n    // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n    this._ngZone.runOutsideAngular(() => {\n      this._handles.complete();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._dragRef.dispose();\n    });\n  }\n  _addHandle(handle) {\n    const handles = this._handles.getValue();\n    handles.push(handle);\n    this._handles.next(handles);\n  }\n  _removeHandle(handle) {\n    const handles = this._handles.getValue();\n    const index = handles.indexOf(handle);\n    if (index > -1) {\n      handles.splice(index, 1);\n      this._handles.next(handles);\n    }\n  }\n  _setPreviewTemplate(preview) {\n    this._previewTemplate = preview;\n  }\n  _resetPreviewTemplate(preview) {\n    if (preview === this._previewTemplate) {\n      this._previewTemplate = null;\n    }\n  }\n  _setPlaceholderTemplate(placeholder) {\n    this._placeholderTemplate = placeholder;\n  }\n  _resetPlaceholderTemplate(placeholder) {\n    if (placeholder === this._placeholderTemplate) {\n      this._placeholderTemplate = null;\n    }\n  }\n  /** Syncs the root element with the `DragRef`. */\n  _updateRootElement() {\n    const element = this.element.nativeElement;\n    let rootElement = element;\n    if (this.rootElementSelector) {\n      rootElement = element.closest !== undefined ? element.closest(this.rootElementSelector) :\n      // Comment tag doesn't have closest method, so use parent's one.\n      element.parentElement?.closest(this.rootElementSelector);\n    }\n    if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      assertElementNode(rootElement, 'cdkDrag');\n    }\n    this._dragRef.withRootElement(rootElement || element);\n  }\n  /** Gets the boundary element, based on the `boundaryElement` value. */\n  _getBoundaryElement() {\n    const boundary = this.boundaryElement;\n    if (!boundary) {\n      return null;\n    }\n    if (typeof boundary === 'string') {\n      return this.element.nativeElement.closest(boundary);\n    }\n    return coerceElement(boundary);\n  }\n  /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n  _syncInputs(ref) {\n    ref.beforeStarted.subscribe(() => {\n      if (!ref.isDragging()) {\n        const dir = this._dir;\n        const dragStartDelay = this.dragStartDelay;\n        const placeholder = this._placeholderTemplate ? {\n          template: this._placeholderTemplate.templateRef,\n          context: this._placeholderTemplate.data,\n          viewContainer: this._viewContainerRef\n        } : null;\n        const preview = this._previewTemplate ? {\n          template: this._previewTemplate.templateRef,\n          context: this._previewTemplate.data,\n          matchSize: this._previewTemplate.matchSize,\n          viewContainer: this._viewContainerRef\n        } : null;\n        ref.disabled = this.disabled;\n        ref.lockAxis = this.lockAxis;\n        ref.scale = this.scale;\n        ref.dragStartDelay = typeof dragStartDelay === 'object' && dragStartDelay ? dragStartDelay : coerceNumberProperty(dragStartDelay);\n        ref.constrainPosition = this.constrainPosition;\n        ref.previewClass = this.previewClass;\n        ref.withBoundaryElement(this._getBoundaryElement()).withPlaceholderTemplate(placeholder).withPreviewTemplate(preview).withPreviewContainer(this.previewContainer || 'global');\n        if (dir) {\n          ref.withDirection(dir.value);\n        }\n      }\n    });\n    // This only needs to be resolved once.\n    ref.beforeStarted.pipe(take(1)).subscribe(() => {\n      // If we managed to resolve a parent through DI, use it.\n      if (this._parentDrag) {\n        ref.withParent(this._parentDrag._dragRef);\n        return;\n      }\n      // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n      // the item was projected into another item by something like `ngTemplateOutlet`.\n      let parent = this.element.nativeElement.parentElement;\n      while (parent) {\n        const parentDrag = this._dragDropRegistry.getDragDirectiveForNode(parent);\n        if (parentDrag) {\n          ref.withParent(parentDrag._dragRef);\n          break;\n        }\n        parent = parent.parentElement;\n      }\n    });\n  }\n  /** Handles the events from the underlying `DragRef`. */\n  _handleEvents(ref) {\n    ref.started.subscribe(startEvent => {\n      this.started.emit({\n        source: this,\n        event: startEvent.event\n      });\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.released.subscribe(releaseEvent => {\n      this.released.emit({\n        source: this,\n        event: releaseEvent.event\n      });\n    });\n    ref.ended.subscribe(endEvent => {\n      this.ended.emit({\n        source: this,\n        distance: endEvent.distance,\n        dropPoint: endEvent.dropPoint,\n        event: endEvent.event\n      });\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.entered.subscribe(enterEvent => {\n      this.entered.emit({\n        container: enterEvent.container.data,\n        item: this,\n        currentIndex: enterEvent.currentIndex\n      });\n    });\n    ref.exited.subscribe(exitEvent => {\n      this.exited.emit({\n        container: exitEvent.container.data,\n        item: this\n      });\n    });\n    ref.dropped.subscribe(dropEvent => {\n      this.dropped.emit({\n        previousIndex: dropEvent.previousIndex,\n        currentIndex: dropEvent.currentIndex,\n        previousContainer: dropEvent.previousContainer.data,\n        container: dropEvent.container.data,\n        isPointerOverContainer: dropEvent.isPointerOverContainer,\n        item: this,\n        distance: dropEvent.distance,\n        dropPoint: dropEvent.dropPoint,\n        event: dropEvent.event\n      });\n    });\n  }\n  /** Assigns the default input values based on a provided config object. */\n  _assignDefaults(config) {\n    const {\n      lockAxis,\n      dragStartDelay,\n      constrainPosition,\n      previewClass,\n      boundaryElement,\n      draggingDisabled,\n      rootElementSelector,\n      previewContainer\n    } = config;\n    this.disabled = draggingDisabled == null ? false : draggingDisabled;\n    this.dragStartDelay = dragStartDelay || 0;\n    if (lockAxis) {\n      this.lockAxis = lockAxis;\n    }\n    if (constrainPosition) {\n      this.constrainPosition = constrainPosition;\n    }\n    if (previewClass) {\n      this.previewClass = previewClass;\n    }\n    if (boundaryElement) {\n      this.boundaryElement = boundaryElement;\n    }\n    if (rootElementSelector) {\n      this.rootElementSelector = rootElementSelector;\n    }\n    if (previewContainer) {\n      this.previewContainer = previewContainer;\n    }\n  }\n  /** Sets up the listener that syncs the handles with the drag ref. */\n  _setupHandlesListener() {\n    // Listen for any newly-added handles.\n    this._handles.pipe(\n    // Sync the new handles with the DragRef.\n    tap(handles => {\n      const handleElements = handles.map(handle => handle.element);\n      // Usually handles are only allowed to be a descendant of the drag element, but if\n      // the consumer defined a different drag root, we should allow the drag element\n      // itself to be a handle too.\n      if (this._selfHandle && this.rootElementSelector) {\n        handleElements.push(this.element);\n      }\n      this._dragRef.withHandles(handleElements);\n    }),\n    // Listen if the state of any of the handles changes.\n    switchMap(handles => {\n      return merge(...handles.map(item => item._stateChanges.pipe(startWith(item))));\n    }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n      // Enabled/disable the handle that changed in the DragRef.\n      const dragRef = this._dragRef;\n      const handle = handleInstance.element.nativeElement;\n      handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n    });\n  }\n  static ɵfac = function CdkDrag_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDrag)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDrag,\n    selectors: [[\"\", \"cdkDrag\", \"\"]],\n    hostAttrs: [1, \"cdk-drag\"],\n    hostVars: 4,\n    hostBindings: function CdkDrag_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n      }\n    },\n    inputs: {\n      data: [0, \"cdkDragData\", \"data\"],\n      lockAxis: [0, \"cdkDragLockAxis\", \"lockAxis\"],\n      rootElementSelector: [0, \"cdkDragRootElement\", \"rootElementSelector\"],\n      boundaryElement: [0, \"cdkDragBoundary\", \"boundaryElement\"],\n      dragStartDelay: [0, \"cdkDragStartDelay\", \"dragStartDelay\"],\n      freeDragPosition: [0, \"cdkDragFreeDragPosition\", \"freeDragPosition\"],\n      disabled: [2, \"cdkDragDisabled\", \"disabled\", booleanAttribute],\n      constrainPosition: [0, \"cdkDragConstrainPosition\", \"constrainPosition\"],\n      previewClass: [0, \"cdkDragPreviewClass\", \"previewClass\"],\n      previewContainer: [0, \"cdkDragPreviewContainer\", \"previewContainer\"],\n      scale: [2, \"cdkDragScale\", \"scale\", numberAttribute]\n    },\n    outputs: {\n      started: \"cdkDragStarted\",\n      released: \"cdkDragReleased\",\n      ended: \"cdkDragEnded\",\n      entered: \"cdkDragEntered\",\n      exited: \"cdkDragExited\",\n      dropped: \"cdkDragDropped\",\n      moved: \"cdkDragMoved\"\n    },\n    exportAs: [\"cdkDrag\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_PARENT,\n      useExisting: CdkDrag\n    }]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDrag, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDrag]',\n      exportAs: 'cdkDrag',\n      host: {\n        'class': 'cdk-drag',\n        '[class.cdk-drag-disabled]': 'disabled',\n        '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n      },\n      providers: [{\n        provide: CDK_DRAG_PARENT,\n        useExisting: CdkDrag\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input,\n      args: ['cdkDragData']\n    }],\n    lockAxis: [{\n      type: Input,\n      args: ['cdkDragLockAxis']\n    }],\n    rootElementSelector: [{\n      type: Input,\n      args: ['cdkDragRootElement']\n    }],\n    boundaryElement: [{\n      type: Input,\n      args: ['cdkDragBoundary']\n    }],\n    dragStartDelay: [{\n      type: Input,\n      args: ['cdkDragStartDelay']\n    }],\n    freeDragPosition: [{\n      type: Input,\n      args: ['cdkDragFreeDragPosition']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    constrainPosition: [{\n      type: Input,\n      args: ['cdkDragConstrainPosition']\n    }],\n    previewClass: [{\n      type: Input,\n      args: ['cdkDragPreviewClass']\n    }],\n    previewContainer: [{\n      type: Input,\n      args: ['cdkDragPreviewContainer']\n    }],\n    scale: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragScale',\n        transform: numberAttribute\n      }]\n    }],\n    started: [{\n      type: Output,\n      args: ['cdkDragStarted']\n    }],\n    released: [{\n      type: Output,\n      args: ['cdkDragReleased']\n    }],\n    ended: [{\n      type: Output,\n      args: ['cdkDragEnded']\n    }],\n    entered: [{\n      type: Output,\n      args: ['cdkDragEntered']\n    }],\n    exited: [{\n      type: Output,\n      args: ['cdkDragExited']\n    }],\n    dropped: [{\n      type: Output,\n      args: ['cdkDragDropped']\n    }],\n    moved: [{\n      type: Output,\n      args: ['cdkDragMoved']\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n  /** Drop lists registered inside the group. */\n  _items = new Set();\n  /** Whether starting a dragging sequence from inside this group is disabled. */\n  disabled = false;\n  ngOnDestroy() {\n    this._items.clear();\n  }\n  static ɵfac = function CdkDropListGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDropListGroup)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDropListGroup,\n    selectors: [[\"\", \"cdkDropListGroup\", \"\"]],\n    inputs: {\n      disabled: [2, \"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute]\n    },\n    exportAs: [\"cdkDropListGroup\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DROP_LIST_GROUP,\n      useExisting: CdkDropListGroup\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDropListGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDropListGroup]',\n      exportAs: 'cdkDropListGroup',\n      providers: [{\n        provide: CDK_DROP_LIST_GROUP,\n        useExisting: CdkDropListGroup\n      }]\n    }]\n  }], null, {\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListGroupDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n  element = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _scrollDispatcher = inject(ScrollDispatcher);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _group = inject(CDK_DROP_LIST_GROUP, {\n    optional: true,\n    skipSelf: true\n  });\n  /** Refs that have been synced with the drop ref most recently. */\n  _latestSortedRefs;\n  /** Emits when the list has been destroyed. */\n  _destroyed = new Subject();\n  /** Whether the element's scrollable parents have been resolved. */\n  _scrollableParentsResolved;\n  /** Keeps track of the drop lists that are currently on the page. */\n  static _dropLists = [];\n  /** Reference to the underlying drop list instance. */\n  _dropListRef;\n  /**\n   * Other draggable containers that this container is connected to and into which the\n   * container's items can be transferred. Can either be references to other drop containers,\n   * or their unique IDs.\n   */\n  connectedTo = [];\n  /** Arbitrary data to attach to this container. */\n  data;\n  /** Direction in which the list is oriented. */\n  orientation;\n  /**\n   * Unique ID for the drop zone. Can be used as a reference\n   * in the `connectedTo` of another `CdkDropList`.\n   */\n  id = inject(_IdGenerator).getId('cdk-drop-list-');\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  lockAxis;\n  /** Whether starting a dragging sequence from this container is disabled. */\n  get disabled() {\n    return this._disabled || !!this._group && this._group.disabled;\n  }\n  set disabled(value) {\n    // Usually we sync the directive and ref state right before dragging starts, in order to have\n    // a single point of failure and to avoid having to use setters for everything. `disabled` is\n    // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n    // the user in a disabled state, so we also need to sync it as it's being set.\n    this._dropListRef.disabled = this._disabled = value;\n  }\n  _disabled;\n  /** Whether sorting within this drop list is disabled. */\n  sortingDisabled;\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  enterPredicate = () => true;\n  /** Functions that is used to determine whether an item can be sorted into a particular index. */\n  sortPredicate = () => true;\n  /** Whether to auto-scroll the view when the user moves their pointer close to the edges. */\n  autoScrollDisabled;\n  /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n  autoScrollStep;\n  /**\n   * Selector that will be used to resolve an alternate element container for the drop list.\n   * Passing an alternate container is useful for the cases where one might not have control\n   * over the parent node of the draggable items within the list (e.g. due to content projection).\n   * This allows for usages like:\n   *\n   * ```\n   * <div cdkDropList cdkDropListElementContainer=\".inner\">\n   *   <div class=\"inner\">\n   *     <div cdkDrag></div>\n   *   </div>\n   * </div>\n   * ```\n   */\n  elementContainerSelector;\n  /** Emits when the user drops an item inside the container. */\n  dropped = new EventEmitter();\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  entered = new EventEmitter();\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  exited = new EventEmitter();\n  /** Emits as the user is swapping items while actively dragging. */\n  sorted = new EventEmitter();\n  /**\n   * Keeps track of the items that are registered with this container. Historically we used to\n   * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n   * well which means that we can't handle cases like dragging the headers of a `mat-table`\n   * correctly. What we do instead is to have the items register themselves with the container\n   * and then we sort them based on their position in the DOM.\n   */\n  _unsortedItems = new Set();\n  constructor() {\n    const dragDrop = inject(DragDrop);\n    const config = inject(CDK_DRAG_CONFIG, {\n      optional: true\n    });\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      assertElementNode(this.element.nativeElement, 'cdkDropList');\n    }\n    this._dropListRef = dragDrop.createDropList(this.element);\n    this._dropListRef.data = this;\n    if (config) {\n      this._assignDefaults(config);\n    }\n    this._dropListRef.enterPredicate = (drag, drop) => {\n      return this.enterPredicate(drag.data, drop.data);\n    };\n    this._dropListRef.sortPredicate = (index, drag, drop) => {\n      return this.sortPredicate(index, drag.data, drop.data);\n    };\n    this._setupInputSyncSubscription(this._dropListRef);\n    this._handleEvents(this._dropListRef);\n    CdkDropList._dropLists.push(this);\n    if (this._group) {\n      this._group._items.add(this);\n    }\n  }\n  /** Registers an items with the drop list. */\n  addItem(item) {\n    this._unsortedItems.add(item);\n    // Only sync the items while dragging since this method is\n    // called when items are being initialized one-by-one.\n    if (this._dropListRef.isDragging()) {\n      this._syncItemsWithRef(this.getSortedItems().map(item => item._dragRef));\n    }\n  }\n  /** Removes an item from the drop list. */\n  removeItem(item) {\n    this._unsortedItems.delete(item);\n    // This method might be called on destroy so we always want to sync with the ref.\n    // Note that we reuse the last set of synced items, rather than re-sorting the whole\n    // list, because it can slow down re-renders of large lists (see #30737).\n    if (this._latestSortedRefs) {\n      const index = this._latestSortedRefs.indexOf(item._dragRef);\n      if (index > -1) {\n        this._latestSortedRefs.splice(index, 1);\n        this._syncItemsWithRef(this._latestSortedRefs);\n      }\n    }\n  }\n  /** Gets the registered items in the list, sorted by their position in the DOM. */\n  getSortedItems() {\n    return Array.from(this._unsortedItems).sort((a, b) => {\n      const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n      // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n      // tslint:disable-next-line:no-bitwise\n      return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n    });\n  }\n  ngOnDestroy() {\n    const index = CdkDropList._dropLists.indexOf(this);\n    if (index > -1) {\n      CdkDropList._dropLists.splice(index, 1);\n    }\n    if (this._group) {\n      this._group._items.delete(this);\n    }\n    this._latestSortedRefs = undefined;\n    this._unsortedItems.clear();\n    this._dropListRef.dispose();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n  _setupInputSyncSubscription(ref) {\n    if (this._dir) {\n      this._dir.change.pipe(startWith(this._dir.value), takeUntil(this._destroyed)).subscribe(value => ref.withDirection(value));\n    }\n    ref.beforeStarted.subscribe(() => {\n      const siblings = coerceArray(this.connectedTo).map(drop => {\n        if (typeof drop === 'string') {\n          const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n          if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n          }\n          return correspondingDropList;\n        }\n        return drop;\n      });\n      if (this._group) {\n        this._group._items.forEach(drop => {\n          if (siblings.indexOf(drop) === -1) {\n            siblings.push(drop);\n          }\n        });\n      }\n      // Note that we resolve the scrollable parents here so that we delay the resolution\n      // as long as possible, ensuring that the element is in its final place in the DOM.\n      if (!this._scrollableParentsResolved) {\n        const scrollableParents = this._scrollDispatcher.getAncestorScrollContainers(this.element).map(scrollable => scrollable.getElementRef().nativeElement);\n        this._dropListRef.withScrollableParents(scrollableParents);\n        // Only do this once since it involves traversing the DOM and the parents\n        // shouldn't be able to change without the drop list being destroyed.\n        this._scrollableParentsResolved = true;\n      }\n      if (this.elementContainerSelector) {\n        const container = this.element.nativeElement.querySelector(this.elementContainerSelector);\n        if (!container && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw new Error(`CdkDropList could not find an element container matching the selector \"${this.elementContainerSelector}\"`);\n        }\n        ref.withElementContainer(container);\n      }\n      ref.disabled = this.disabled;\n      ref.lockAxis = this.lockAxis;\n      ref.sortingDisabled = this.sortingDisabled;\n      ref.autoScrollDisabled = this.autoScrollDisabled;\n      ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n      ref.connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef)).withOrientation(this.orientation);\n    });\n  }\n  /** Handles events from the underlying DropListRef. */\n  _handleEvents(ref) {\n    ref.beforeStarted.subscribe(() => {\n      this._syncItemsWithRef(this.getSortedItems().map(item => item._dragRef));\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.entered.subscribe(event => {\n      this.entered.emit({\n        container: this,\n        item: event.item.data,\n        currentIndex: event.currentIndex\n      });\n    });\n    ref.exited.subscribe(event => {\n      this.exited.emit({\n        container: this,\n        item: event.item.data\n      });\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.sorted.subscribe(event => {\n      this.sorted.emit({\n        previousIndex: event.previousIndex,\n        currentIndex: event.currentIndex,\n        container: this,\n        item: event.item.data\n      });\n    });\n    ref.dropped.subscribe(dropEvent => {\n      this.dropped.emit({\n        previousIndex: dropEvent.previousIndex,\n        currentIndex: dropEvent.currentIndex,\n        previousContainer: dropEvent.previousContainer.data,\n        container: dropEvent.container.data,\n        item: dropEvent.item.data,\n        isPointerOverContainer: dropEvent.isPointerOverContainer,\n        distance: dropEvent.distance,\n        dropPoint: dropEvent.dropPoint,\n        event: dropEvent.event\n      });\n      // Mark for check since all of these events run outside of change\n      // detection and we're not guaranteed for something else to have triggered it.\n      this._changeDetectorRef.markForCheck();\n    });\n    merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Assigns the default input values based on a provided config object. */\n  _assignDefaults(config) {\n    const {\n      lockAxis,\n      draggingDisabled,\n      sortingDisabled,\n      listAutoScrollDisabled,\n      listOrientation\n    } = config;\n    this.disabled = draggingDisabled == null ? false : draggingDisabled;\n    this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n    this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n    this.orientation = listOrientation || 'vertical';\n    if (lockAxis) {\n      this.lockAxis = lockAxis;\n    }\n  }\n  /** Syncs up the registered drag items with underlying drop list ref. */\n  _syncItemsWithRef(items) {\n    this._latestSortedRefs = items;\n    this._dropListRef.withItems(items);\n  }\n  static ɵfac = function CdkDropList_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDropList)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDropList,\n    selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]],\n    hostAttrs: [1, \"cdk-drop-list\"],\n    hostVars: 7,\n    hostBindings: function CdkDropList_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id);\n        i0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n      }\n    },\n    inputs: {\n      connectedTo: [0, \"cdkDropListConnectedTo\", \"connectedTo\"],\n      data: [0, \"cdkDropListData\", \"data\"],\n      orientation: [0, \"cdkDropListOrientation\", \"orientation\"],\n      id: \"id\",\n      lockAxis: [0, \"cdkDropListLockAxis\", \"lockAxis\"],\n      disabled: [2, \"cdkDropListDisabled\", \"disabled\", booleanAttribute],\n      sortingDisabled: [2, \"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute],\n      enterPredicate: [0, \"cdkDropListEnterPredicate\", \"enterPredicate\"],\n      sortPredicate: [0, \"cdkDropListSortPredicate\", \"sortPredicate\"],\n      autoScrollDisabled: [2, \"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute],\n      autoScrollStep: [0, \"cdkDropListAutoScrollStep\", \"autoScrollStep\"],\n      elementContainerSelector: [0, \"cdkDropListElementContainer\", \"elementContainerSelector\"]\n    },\n    outputs: {\n      dropped: \"cdkDropListDropped\",\n      entered: \"cdkDropListEntered\",\n      exited: \"cdkDropListExited\",\n      sorted: \"cdkDropListSorted\"\n    },\n    exportAs: [\"cdkDropList\"],\n    features: [i0.ɵɵProvidersFeature([\n    // Prevent child drop lists from picking up the same group as their parent.\n    {\n      provide: CDK_DROP_LIST_GROUP,\n      useValue: undefined\n    }, {\n      provide: CDK_DROP_LIST,\n      useExisting: CdkDropList\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDropList, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDropList], cdk-drop-list',\n      exportAs: 'cdkDropList',\n      providers: [\n      // Prevent child drop lists from picking up the same group as their parent.\n      {\n        provide: CDK_DROP_LIST_GROUP,\n        useValue: undefined\n      }, {\n        provide: CDK_DROP_LIST,\n        useExisting: CdkDropList\n      }],\n      host: {\n        'class': 'cdk-drop-list',\n        '[attr.id]': 'id',\n        '[class.cdk-drop-list-disabled]': 'disabled',\n        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n      }\n    }]\n  }], () => [], {\n    connectedTo: [{\n      type: Input,\n      args: ['cdkDropListConnectedTo']\n    }],\n    data: [{\n      type: Input,\n      args: ['cdkDropListData']\n    }],\n    orientation: [{\n      type: Input,\n      args: ['cdkDropListOrientation']\n    }],\n    id: [{\n      type: Input\n    }],\n    lockAxis: [{\n      type: Input,\n      args: ['cdkDropListLockAxis']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    sortingDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListSortingDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    enterPredicate: [{\n      type: Input,\n      args: ['cdkDropListEnterPredicate']\n    }],\n    sortPredicate: [{\n      type: Input,\n      args: ['cdkDropListSortPredicate']\n    }],\n    autoScrollDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListAutoScrollDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    autoScrollStep: [{\n      type: Input,\n      args: ['cdkDropListAutoScrollStep']\n    }],\n    elementContainerSelector: [{\n      type: Input,\n      args: ['cdkDropListElementContainer']\n    }],\n    dropped: [{\n      type: Output,\n      args: ['cdkDropListDropped']\n    }],\n    entered: [{\n      type: Output,\n      args: ['cdkDropListEntered']\n    }],\n    exited: [{\n      type: Output,\n      args: ['cdkDropListExited']\n    }],\n    sorted: [{\n      type: Output,\n      args: ['cdkDropListSorted']\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n  templateRef = inject(TemplateRef);\n  _drag = inject(CDK_DRAG_PARENT, {\n    optional: true\n  });\n  /** Context data to be added to the preview template instance. */\n  data;\n  /** Whether the preview should preserve the same size as the item that is being dragged. */\n  matchSize = false;\n  constructor() {\n    this._drag?._setPreviewTemplate(this);\n  }\n  ngOnDestroy() {\n    this._drag?._resetPreviewTemplate(this);\n  }\n  static ɵfac = function CdkDragPreview_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragPreview)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDragPreview,\n    selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]],\n    inputs: {\n      data: \"data\",\n      matchSize: [2, \"matchSize\", \"matchSize\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_PREVIEW,\n      useExisting: CdkDragPreview\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDragPreview, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkDragPreview]',\n      providers: [{\n        provide: CDK_DRAG_PREVIEW,\n        useExisting: CdkDragPreview\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input\n    }],\n    matchSize: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n  templateRef = inject(TemplateRef);\n  _drag = inject(CDK_DRAG_PARENT, {\n    optional: true\n  });\n  /** Context data to be added to the placeholder template instance. */\n  data;\n  constructor() {\n    this._drag?._setPlaceholderTemplate(this);\n  }\n  ngOnDestroy() {\n    this._drag?._resetPlaceholderTemplate(this);\n  }\n  static ɵfac = function CdkDragPlaceholder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragPlaceholder)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDragPlaceholder,\n    selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]],\n    inputs: {\n      data: \"data\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_PLACEHOLDER,\n      useExisting: CdkDragPlaceholder\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkDragPlaceholder]',\n      providers: [{\n        provide: CDK_DRAG_PLACEHOLDER,\n        useExisting: CdkDragPlaceholder\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input\n    }]\n  });\n})();\nconst DRAG_DROP_DIRECTIVES = [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder];\nclass DragDropModule {\n  static ɵfac = function DragDropModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDropModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DragDropModule,\n    imports: [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder],\n    exports: [CdkScrollableModule, CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DragDrop],\n    imports: [CdkScrollableModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDropModule, [{\n    type: NgModule,\n    args: [{\n      imports: DRAG_DROP_DIRECTIVES,\n      exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n      providers: [DragDrop]\n    }]\n  }], null, null);\n})();\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem, DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { LocationService, Location } from '../../services/location.service';\r\n\r\ninterface HierarchyNode {\r\n  id: number;\r\n  name: string;\r\n  type: any;\r\n  hierarchy_level: number;\r\n  asset_count: number;\r\n  children: HierarchyNode[];\r\n  parent_id?: number;\r\n  selected?: boolean;\r\n  expanded?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-hierarchy-management',\r\n  standalone: true,\r\n  imports: [CommonModule, DragDropModule],\r\n  templateUrl: './hierarchy-management.component.html',\r\n  styleUrl: './hierarchy-management.component.scss'\r\n})\r\nexport class HierarchyManagementComponent implements OnInit, OnDestroy {\r\n  private destroy$ = new Subject<void>();\r\n  \r\n  hierarchyData: HierarchyNode[] = [];\r\n  selectedNodes: Set<number> = new Set();\r\n  loading = false;\r\n  error = '';\r\n  \r\n  // Drag and drop state\r\n  draggedNode: HierarchyNode | null = null;\r\n  dropZoneActive = false;\r\n\r\n  constructor(private locationService: LocationService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadHierarchy();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  loadHierarchy() {\r\n    this.loading = true;\r\n    this.error = '';\r\n    \r\n    this.locationService.getHierarchy()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.hierarchyData = this.transformHierarchyData(response.data.hierarchy);\r\n          } else {\r\n            this.error = 'Failed to load hierarchy data';\r\n          }\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          this.error = error.error?.message || 'An error occurred while loading hierarchy';\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  private transformHierarchyData(data: any[]): HierarchyNode[] {\r\n    return data.map(item => ({\r\n      id: item.id,\r\n      name: item.name,\r\n      type: item.type,\r\n      hierarchy_level: item.hierarchy_level || 0,\r\n      asset_count: item.asset_count || 0,\r\n      children: item.children ? this.transformHierarchyData(item.children) : [],\r\n      parent_id: item.parent_id,\r\n      selected: false,\r\n      expanded: true\r\n    }));\r\n  }\r\n\r\n  // Selection methods\r\n  toggleNodeSelection(node: HierarchyNode, event: MouseEvent) {\r\n    event.stopPropagation();\r\n    \r\n    if (event.ctrlKey || event.metaKey) {\r\n      // Multi-select mode\r\n      if (this.selectedNodes.has(node.id)) {\r\n        this.selectedNodes.delete(node.id);\r\n        node.selected = false;\r\n      } else {\r\n        this.selectedNodes.add(node.id);\r\n        node.selected = true;\r\n      }\r\n    } else {\r\n      // Single select mode\r\n      this.clearSelection();\r\n      this.selectedNodes.add(node.id);\r\n      node.selected = true;\r\n    }\r\n  }\r\n\r\n  clearSelection() {\r\n    this.selectedNodes.clear();\r\n    this.updateSelectionState(this.hierarchyData, false);\r\n  }\r\n\r\n  private updateSelectionState(nodes: HierarchyNode[], selected: boolean) {\r\n    nodes.forEach(node => {\r\n      node.selected = selected;\r\n      if (node.children.length > 0) {\r\n        this.updateSelectionState(node.children, selected);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Drag and drop methods\r\n  onDragStart(event: any, node: HierarchyNode) {\r\n    this.draggedNode = node;\r\n    this.dropZoneActive = true;\r\n    event.dataTransfer.effectAllowed = 'move';\r\n  }\r\n\r\n  onDragEnd(event: any) {\r\n    this.draggedNode = null;\r\n    this.dropZoneActive = false;\r\n  }\r\n\r\n  onDragOver(event: any) {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }\r\n\r\n  onDropToRoot(event: any) {\r\n    event.preventDefault();\r\n    \r\n    if (this.draggedNode) {\r\n      this.moveToRoot(this.draggedNode);\r\n    }\r\n    \r\n    this.dropZoneActive = false;\r\n    this.draggedNode = null;\r\n  }\r\n\r\n  onDropOnNode(event: any, targetNode: HierarchyNode) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    \r\n    if (this.draggedNode && this.draggedNode.id !== targetNode.id) {\r\n      this.moveToParent(this.draggedNode, targetNode);\r\n    }\r\n    \r\n    this.dropZoneActive = false;\r\n    this.draggedNode = null;\r\n  }\r\n\r\n  private moveToRoot(node: HierarchyNode) {\r\n    // Remove from current parent\r\n    this.removeNodeFromHierarchy(node);\r\n    \r\n    // Add to root level\r\n    node.hierarchy_level = 0;\r\n    node.parent_id = undefined;\r\n    this.hierarchyData.push(node);\r\n    \r\n    // Call API to update\r\n    this.updateLocationHierarchy(node.id, null);\r\n  }\r\n\r\n  private moveToParent(node: HierarchyNode, newParent: HierarchyNode) {\r\n    // Remove from current parent\r\n    this.removeNodeFromHierarchy(node);\r\n    \r\n    // Add to new parent\r\n    node.hierarchy_level = newParent.hierarchy_level + 1;\r\n    node.parent_id = newParent.id;\r\n    newParent.children.push(node);\r\n    newParent.expanded = true;\r\n    \r\n    // Call API to update\r\n    this.updateLocationHierarchy(node.id, newParent.id);\r\n  }\r\n\r\n  private removeNodeFromHierarchy(nodeToRemove: HierarchyNode) {\r\n    // Remove from root level\r\n    const rootIndex = this.hierarchyData.findIndex(n => n.id === nodeToRemove.id);\r\n    if (rootIndex !== -1) {\r\n      this.hierarchyData.splice(rootIndex, 1);\r\n      return;\r\n    }\r\n    \r\n    // Remove from children recursively\r\n    this.removeFromChildren(this.hierarchyData, nodeToRemove);\r\n  }\r\n\r\n  private removeFromChildren(nodes: HierarchyNode[], nodeToRemove: HierarchyNode): boolean {\r\n    for (const node of nodes) {\r\n      const childIndex = node.children.findIndex(child => child.id === nodeToRemove.id);\r\n      if (childIndex !== -1) {\r\n        node.children.splice(childIndex, 1);\r\n        return true;\r\n      }\r\n      \r\n      if (this.removeFromChildren(node.children, nodeToRemove)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private updateLocationHierarchy(locationId: number, newParentId: number | null) {\r\n    this.locationService.moveLocations([locationId], newParentId)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            console.log('Location moved successfully');\r\n          } else {\r\n            console.error('Failed to move location:', response.message);\r\n            // Reload hierarchy on error\r\n            this.loadHierarchy();\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error moving location:', error);\r\n          // Reload hierarchy on error\r\n          this.loadHierarchy();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Bulk operations\r\n  moveSelectedToRoot() {\r\n    if (this.selectedNodes.size === 0) return;\r\n    \r\n    const selectedIds = Array.from(this.selectedNodes);\r\n    this.locationService.moveLocations(selectedIds, null)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.loadHierarchy();\r\n            this.clearSelection();\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error moving locations:', error);\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteSelected() {\r\n    if (this.selectedNodes.size === 0) return;\r\n    \r\n    // TODO: Implement bulk delete\r\n    console.log('Delete selected locations:', Array.from(this.selectedNodes));\r\n  }\r\n\r\n  // Utility methods\r\n  getNodeIcon(node: HierarchyNode): string {\r\n    if (node.hierarchy_level === 0) {\r\n      return 'M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4';\r\n    } else if (node.hierarchy_level === 1) {\r\n      return 'M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4';\r\n    } else {\r\n      return 'M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z';\r\n    }\r\n  }\r\n\r\n  getNodeIconColor(node: HierarchyNode): string {\r\n    if (node.hierarchy_level === 0) return 'blue';\r\n    if (node.hierarchy_level === 1) return 'blue';\r\n    return 'green';\r\n  }\r\n\r\n  getLevelBadge(node: HierarchyNode): string {\r\n    return node.hierarchy_level === 0 ? 'L0' : 'LP';\r\n  }\r\n\r\n  getLevelText(node: HierarchyNode): string {\r\n    return node.hierarchy_level === 0 ? 'Level 0' : 'Parent';\r\n  }\r\n\r\n  getChildrenCount(node: HierarchyNode): number {\r\n    return node.children.length;\r\n  }\r\n}","<!-- Hierarchy Management Component -->\r\n<div class=\"hierarchy-management\">\r\n  <!-- Header -->\r\n  <div class=\"flex items-center justify-between mb-6\">\r\n    <div>\r\n      <h2 class=\"text-2xl font-bold text-gray-900\">Hierarchy Management</h2>\r\n      <p class=\"text-gray-600 mt-1\">\r\n        Drag and drop locations to reorganize your hierarchy. Hold Ctrl/Cmd and click to select multiple locations for bulk operations.\r\n      </p>\r\n    </div>\r\n    <div class=\"flex items-center space-x-3\">\r\n      <button\r\n        *ngIf=\"selectedNodes.size > 0\"\r\n        (click)=\"moveSelectedToRoot()\"\r\n        class=\"px-4 py-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors text-sm font-medium\">\r\n        Move to Root ({{selectedNodes.size}})\r\n      </button>\r\n      <button\r\n        *ngIf=\"selectedNodes.size > 0\"\r\n        (click)=\"deleteSelected()\"\r\n        class=\"px-4 py-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors text-sm font-medium\">\r\n        Delete Selected ({{selectedNodes.size}})\r\n      </button>\r\n      <button\r\n        (click)=\"clearSelection()\"\r\n        class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors text-sm font-medium\">\r\n        Clear Selection\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading\" class=\"flex items-center justify-center py-20\">\r\n    <div class=\"text-center\">\r\n      <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-100 rounded-full mb-4\">\r\n        <svg class=\"animate-spin w-8 h-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n        </svg>\r\n      </div>\r\n      <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Loading Hierarchy</h3>\r\n      <p class=\"text-sm text-gray-500\">Please wait while we fetch the location hierarchy...</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error && !loading\" class=\"text-center py-12\">\r\n    <div class=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n      <svg class=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\r\n      </svg>\r\n    </div>\r\n    <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Error Loading Hierarchy</h3>\r\n    <p class=\"text-sm text-gray-500 mb-4\">{{error}}</p>\r\n    <button \r\n      (click)=\"loadHierarchy()\"\r\n      class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\r\n      Retry\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Hierarchy Content -->\r\n  <div *ngIf=\"!loading && !error\" class=\"space-y-4\">\r\n    <!-- Root Level Drop Zone -->\r\n    <div \r\n      class=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center transition-all\"\r\n      [class.border-blue-500]=\"dropZoneActive\"\r\n      [class.bg-blue-50]=\"dropZoneActive\"\r\n      (dragover)=\"onDragOver($event)\"\r\n      (drop)=\"onDropToRoot($event)\">\r\n      <div class=\"flex items-center justify-center space-x-2 text-gray-500\">\r\n        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n        </svg>\r\n        <span class=\"font-medium\">Root Level - Drop here to make location top-level</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Hierarchy Nodes -->\r\n    <div class=\"space-y-4\">\r\n      <div *ngFor=\"let node of hierarchyData\" class=\"hierarchy-card\">\r\n        <!-- Root Level Node -->\r\n        <div \r\n          class=\"bg-white border border-gray-200 rounded-lg p-4 transition-all hover:shadow-sm\"\r\n          [class.ring-2]=\"node.selected\"\r\n          [class.ring-blue-500]=\"node.selected\"\r\n          [class.bg-blue-50]=\"node.selected\"\r\n          (click)=\"toggleNodeSelection(node, $event)\"\r\n          (dragover)=\"onDragOver($event)\"\r\n          (drop)=\"onDropOnNode($event, node)\">\r\n          \r\n          <div class=\"flex items-center justify-between\">\r\n            <div class=\"flex items-center space-x-3\">\r\n              <!-- Drag Handle -->\r\n              <div \r\n                class=\"drag-handle cursor-move p-1 hover:bg-gray-100 rounded\"\r\n                draggable=\"true\"\r\n                (dragstart)=\"onDragStart($event, node)\"\r\n                (dragend)=\"onDragEnd($event)\">\r\n                <svg class=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 8h16M4 16h16\"></path>\r\n                </svg>\r\n              </div>\r\n\r\n              <!-- Node Icon -->\r\n              <div [class]=\"'w-10 h-10 bg-' + getNodeIconColor(node) + '-100 rounded-lg flex items-center justify-center'\">\r\n                <svg [class]=\"'w-5 h-5 text-' + getNodeIconColor(node) + '-600'\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" [attr.d]=\"getNodeIcon(node)\"></path>\r\n                </svg>\r\n              </div>\r\n\r\n              <!-- Node Info -->\r\n              <div class=\"flex-1\">\r\n                <div class=\"flex items-center space-x-3\">\r\n                  <span class=\"font-semibold text-gray-900\">{{node.name}}</span>\r\n                  <span class=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-gray-100 text-gray-700\">\r\n                    {{node.type?.name || 'Community'}}\r\n                  </span>\r\n                </div>\r\n                <div class=\"text-sm text-gray-500 mt-1\">\r\n                  {{node.asset_count}} assets\r\n                  <span *ngIf=\"node.children.length > 0\" class=\"ml-4\">\r\n                    {{node.children.length}} sub-location{{node.children.length !== 1 ? 's' : ''}}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Level Badge -->\r\n            <div class=\"flex items-center space-x-2\">\r\n              <span class=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-blue-100 text-blue-800\">\r\n                {{getLevelText(node)}}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Child Nodes -->\r\n          <div *ngIf=\"node.children.length > 0\" class=\"mt-4 ml-7 space-y-3\">\r\n            <div *ngFor=\"let child of node.children\" \r\n                 class=\"bg-gray-50 rounded-lg p-3 transition-all hover:bg-gray-100\"\r\n                 [class.ring-2]=\"child.selected\"\r\n                 [class.ring-blue-500]=\"child.selected\"\r\n                 [class.bg-blue-50]=\"child.selected\"\r\n                 (click)=\"toggleNodeSelection(child, $event)\"\r\n                 (dragover)=\"onDragOver($event)\"\r\n                 (drop)=\"onDropOnNode($event, child)\">\r\n              \r\n              <div class=\"flex items-center justify-between\">\r\n                <div class=\"flex items-center space-x-3\">\r\n                  <!-- Drag Handle -->\r\n                  <div \r\n                    class=\"drag-handle cursor-move p-1 hover:bg-gray-200 rounded\"\r\n                    draggable=\"true\"\r\n                    (dragstart)=\"onDragStart($event, child)\"\r\n                    (dragend)=\"onDragEnd($event)\">\r\n                    <svg class=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 8h16M4 16h16\"></path>\r\n                    </svg>\r\n                  </div>\r\n\r\n                  <!-- Child Icon -->\r\n                  <div [class]=\"'w-8 h-8 bg-' + getNodeIconColor(child) + '-100 rounded flex items-center justify-center'\">\r\n                    <svg [class]=\"'w-4 h-4 text-' + getNodeIconColor(child) + '-600'\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" [attr.d]=\"getNodeIcon(child)\"></path>\r\n                    </svg>\r\n                  </div>\r\n\r\n                  <!-- Child Info -->\r\n                  <div class=\"flex-1\">\r\n                    <div class=\"flex items-center space-x-3\">\r\n                      <span class=\"font-medium text-gray-900\">{{child.name}}</span>\r\n                      <span class=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-blue-100 text-blue-700\">\r\n                        {{child.type?.name || 'Residential Building'}}\r\n                      </span>\r\n                    </div>\r\n                    <div class=\"text-sm text-gray-500 mt-1\">\r\n                      {{child.asset_count}} assets\r\n                      <span *ngIf=\"child.children.length > 0\" class=\"ml-4\">\r\n                        {{child.children.length}} sub-location{{child.children.length !== 1 ? 's' : ''}}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Level Badge -->\r\n                <span class=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-blue-100 text-blue-800\">\r\n                  {{getLevelText(child)}}\r\n                </span>\r\n              </div>\r\n\r\n              <!-- Grandchild Nodes -->\r\n              <div *ngIf=\"child.children.length > 0\" class=\"mt-3 ml-7 space-y-2\">\r\n                <div *ngFor=\"let grandchild of child.children\" \r\n                     class=\"bg-white rounded border border-gray-100 p-3 transition-all hover:shadow-sm\"\r\n                     [class.ring-2]=\"grandchild.selected\"\r\n                     [class.ring-blue-500]=\"grandchild.selected\"\r\n                     [class.bg-blue-50]=\"grandchild.selected\"\r\n                     (click)=\"toggleNodeSelection(grandchild, $event)\"\r\n                     (dragover)=\"onDragOver($event)\"\r\n                     (drop)=\"onDropOnNode($event, grandchild)\">\r\n                  \r\n                  <div class=\"flex items-center justify-between\">\r\n                    <div class=\"flex items-center space-x-3\">\r\n                      <!-- Drag Handle -->\r\n                      <div \r\n                        class=\"drag-handle cursor-move p-1 hover:bg-gray-100 rounded\"\r\n                        draggable=\"true\"\r\n                        (dragstart)=\"onDragStart($event, grandchild)\"\r\n                        (dragend)=\"onDragEnd($event)\">\r\n                        <svg class=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 8h16M4 16h16\"></path>\r\n                        </svg>\r\n                      </div>\r\n\r\n                      <!-- Grandchild Icon -->\r\n                      <div [class]=\"'w-6 h-6 bg-' + getNodeIconColor(grandchild) + '-100 rounded flex items-center justify-center'\">\r\n                        <svg [class]=\"'w-3 h-3 text-' + getNodeIconColor(grandchild) + '-600'\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" [attr.d]=\"getNodeIcon(grandchild)\"></path>\r\n                        </svg>\r\n                      </div>\r\n\r\n                      <!-- Grandchild Info -->\r\n                      <div class=\"flex-1\">\r\n                        <div class=\"flex items-center space-x-3\">\r\n                          <span class=\"font-medium text-gray-900\">{{grandchild.name}}</span>\r\n                          <span class=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-green-100 text-green-700\">\r\n                            {{grandchild.type?.name || 'Floor'}}\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"text-sm text-gray-500 mt-1\">{{grandchild.asset_count}} assets</div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <!-- Level Badge -->\r\n                    <span class=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-green-100 text-green-800\">\r\n                      {{getLevelText(grandchild)}}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Empty State -->\r\n    <div *ngIf=\"hierarchyData.length === 0\" class=\"text-center py-12\">\r\n      <div class=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n        <svg class=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\r\n        </svg>\r\n      </div>\r\n      <h3 class=\"text-lg font-medium text-gray-900 mb-2\">No hierarchy data</h3>\r\n      <p class=\"text-sm text-gray-500\">Create some locations to manage the hierarchy.</p>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { Subject, debounceTime, distinctUntilChanged, takeUntil } from 'rxjs';\r\nimport { HostListener } from '@angular/core';\r\nimport { LocationService, Location, LocationType, LocationsResponse } from './services/location.service';\r\nimport { AddLocationModalComponent } from './components/add-location-modal/add-location-modal.component';\r\nimport { EditLocationModalComponent } from './components/edit-location-modal/edit-location-modal.component';\r\nimport { DeleteConfirmationModalComponent } from './components/delete-confirmation-modal/delete-confirmation-modal.component';\r\nimport { BulkCreateModalComponent } from './components/bulk-create-modal/bulk-create-modal.component';\r\nimport { HierarchyManagementComponent } from './components/hierarchy-management/hierarchy-management.component';\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, RouterModule, AddLocationModalComponent, EditLocationModalComponent, DeleteConfirmationModalComponent, BulkCreateModalComponent, HierarchyManagementComponent],\r\n  selector: 'app-locations',\r\n  templateUrl: './locations.component.html',\r\n  styleUrl: './locations.component.scss'\r\n})\r\nexport class LocationsComponent implements OnInit, OnDestroy {\r\n  private destroy$ = new Subject<void>();\r\n  \r\n  // Data\r\n  locations: Location[] = [];\r\n  locationTypes: LocationType[] = [];\r\n  hierarchyData: any[] = [];\r\n  \r\n  // UI State\r\n  loading = false;\r\n  hierarchyLoading = false;\r\n  showFilters = false;\r\n  currentView: 'grid' | 'tree' | 'analytics' | 'mgmt' = 'grid';\r\n  currentListView: 'grid' | 'list' = 'grid';\r\n  expandedNodes: Set<number> = new Set();\r\n  \r\n  // Modal state\r\n  showAddLocationModal = false;\r\n  showEditLocationModal = false;\r\n  showDeleteConfirmationModal = false;\r\n  showBulkCreateModal = false;\r\n  selectedLocation: Location | null = null;\r\n  \r\n  // Pagination\r\n  pagination = {\r\n    current_page: 1,\r\n    last_page: 1,\r\n    per_page: 15,\r\n    total: 0,\r\n    from: 0,\r\n    to: 0\r\n  };\r\n  \r\n  // Forms\r\n  searchForm: FormGroup;\r\n  filtersForm: FormGroup;\r\n  jumpToPage: number | undefined;\r\n  \r\n  // Filters\r\n  sortOptions = [\r\n    { value: 'created', label: 'Created' },\r\n    { value: 'name', label: 'Name' },\r\n    { value: 'type', label: 'Type' },\r\n    { value: 'updated', label: 'Updated' }\r\n  ];\r\n  \r\n  hierarchyLevels = [\r\n    { value: '', label: 'All Levels' },\r\n    { value: '0', label: 'Level 0 (Root)' },\r\n    { value: '1', label: 'Level 1' },\r\n    { value: '2', label: 'Level 2' },\r\n    { value: '3', label: 'Level 3' },\r\n    { value: 'true', label: 'Hierarchy Level' }\r\n  ];\r\n  \r\n  assetCountOptions = [\r\n    { value: '', label: 'Any Count' },\r\n    { value: '0', label: 'No Assets' },\r\n    { value: '1-10', label: '1-10 Assets' },\r\n    { value: '11-50', label: '11-50 Assets' },\r\n    { value: '50+', label: '50+ Assets' }\r\n  ];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private locationService: LocationService,\r\n    private router: Router\r\n  ) {\r\n    this.searchForm = this.fb.group({\r\n      search: ['']\r\n    });\r\n    \r\n    this.filtersForm = this.fb.group({\r\n      type_id: [''],\r\n      parent_id: [''],\r\n      hierarchy_level: ['0'],\r\n      asset_count: [''],\r\n      sort_by: ['created'],\r\n      sort_direction: ['desc']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initializeSearchSubscription();\r\n    this.loadLocationTypes();\r\n    this.loadLocations();\r\n    this.loadHierarchy();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private initializeSearchSubscription() {\r\n    this.searchForm.get('search')?.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        distinctUntilChanged(),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        this.loadLocations();\r\n      });\r\n  }\r\n\r\n  loadLocationTypes() {\r\n    this.locationService.getLocationTypes()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.locationTypes = response.data.types;\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading location types:', error);\r\n        }\r\n      });\r\n  }\r\n\r\n  loadLocations(page: number = 1) {\r\n    this.loading = true;\r\n    \r\n    const searchValue = this.searchForm.get('search')?.value;\r\n    const filters = this.filtersForm.value;\r\n    \r\n    // Always include default parameters\r\n    const params: any = {\r\n      page: page,\r\n      per_page: this.pagination.per_page,\r\n      hierarchy_level: filters.hierarchy_level || '0',\r\n      sort_by: filters.sort_by || 'created',\r\n      sort_direction: filters.sort_direction || 'desc'\r\n    };\r\n\r\n    // Only add search if it has a value\r\n    if (searchValue && searchValue.trim() !== '') {\r\n      params.search = searchValue;\r\n    }\r\n\r\n    // Only add optional filter parameters if they have actual values\r\n    if (filters.type_id && filters.type_id !== '') {\r\n      params.type_id = filters.type_id;\r\n    }\r\n    if (filters.parent_id && filters.parent_id !== '') {\r\n      params.parent_id = filters.parent_id;\r\n    }\r\n    if (filters.asset_count && filters.asset_count !== '') {\r\n      params.asset_count = filters.asset_count;\r\n    }\r\n\r\n    this.locationService.getLocations(params)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response: LocationsResponse) => {\r\n          if (response.success) {\r\n            this.locations = response.data.locations;\r\n            this.pagination = response.data.pagination;\r\n          }\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading locations:', error);\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  loadHierarchy() {\r\n    this.hierarchyLoading = true;\r\n    \r\n    this.locationService.getHierarchy()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.hierarchyData = response.data.hierarchy;\r\n          }\r\n          this.hierarchyLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading hierarchy:', error);\r\n          this.hierarchyLoading = false;\r\n        }\r\n      });\r\n  }\r\n  // View Controls\r\n  setView(view: 'grid' | 'tree' | 'analytics' | 'mgmt') {\r\n    this.currentView = view;\r\n    \r\n    // When switching to grid view, clear filters to show only level 0 data\r\n    if (view === 'grid') {\r\n      this.clearFilters();\r\n    } else if (view === 'tree' && this.hierarchyData.length === 0) {\r\n      this.loadHierarchy();\r\n    }\r\n  }\r\n\r\n  setListView(view: 'grid' | 'list') {\r\n    this.currentListView = view;\r\n  }\r\n\r\n  toggleFilters() {\r\n    this.showFilters = !this.showFilters;\r\n  }\r\n\r\n  // Filter Actions\r\n  applyFilters() {\r\n    this.loadLocations(1);\r\n    this.showFilters = false;\r\n  }\r\n\r\n  clearFilters() {\r\n    this.filtersForm.reset({\r\n      type_id: '',\r\n      parent_id: '',\r\n      hierarchy_level: '0',\r\n      asset_count: '',\r\n      sort_by: 'created',\r\n      sort_direction: 'desc'\r\n    });\r\n    this.loadLocations(1);\r\n  }\r\n\r\n  // Pagination\r\n  goToPage(page: number) {\r\n    if (page >= 1 && page <= this.pagination.last_page) {\r\n      this.loadLocations(page);\r\n    }\r\n  }\r\n\r\n  getVisiblePages(): number[] {\r\n    const current = this.pagination.current_page;\r\n    const total = this.pagination.last_page;\r\n    const pages: number[] = [];\r\n    \r\n    // Show current page and 2 pages on each side\r\n    const start = Math.max(1, current - 2);\r\n    const end = Math.min(total, current + 2);\r\n    \r\n    for (let i = start; i <= end; i++) {\r\n      pages.push(i);\r\n    }\r\n    \r\n    return pages;\r\n  }\r\n\r\n  changePerPage(event: any) {\r\n    this.pagination.per_page = parseInt(event.target.value);\r\n    this.loadLocations(1); // Reset to first page when changing per page\r\n  }\r\n\r\n  // Utility Methods\r\n  getLocationTypeIcon(type: LocationType): string {\r\n    const iconMap: { [key: string]: string } = {\r\n      'Residential Building': '🏠',\r\n      'Office Building': '🏢',\r\n      'Factory': '🏭',\r\n      'Warehouse': '🏪',\r\n      'Garden': '🌳',\r\n      'Apartment': '🏠',\r\n      'Room': '🚪',\r\n      'Floor': '📋'\r\n    };\r\n    return iconMap[type.name] || '📍';\r\n  }\r\n\r\n  getDefaultLocationIcon(): string {\r\n    // Return SVG for building-2 icon style (Lucide-like)\r\n    return `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <path d=\"M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z\"/>\r\n      <path d=\"M6 12H4a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2\"/>\r\n      <path d=\"M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2\"/>\r\n      <path d=\"M10 6h4\"/>\r\n      <path d=\"M10 10h4\"/>\r\n      <path d=\"M10 14h4\"/>\r\n      <path d=\"M10 18h4\"/>\r\n    </svg>`;\r\n  }\r\n\r\n  getHierarchyLevelBadge(level: number): string {\r\n    return `L${level}`;\r\n  }\r\n\r\n  getHierarchyLevelColor(level: number): string {\r\n    const colors = ['blue', 'green', 'yellow', 'purple'];\r\n    return colors[level] || 'gray';\r\n  }\r\n\r\n  // Actions\r\n  editLocation(location: Location) {\r\n    this.selectedLocation = location;\r\n    this.showEditLocationModal = true;\r\n  }\r\n\r\n  deleteLocation(location: Location) {\r\n    this.selectedLocation = location;\r\n    this.showDeleteConfirmationModal = true;\r\n  }\r\n\r\n  viewLocation(location: Location) {\r\n    this.router.navigate(['/locations', location.id]);\r\n  }\r\n\r\n  addLocation() {\r\n    this.showAddLocationModal = true;\r\n  }\r\n\r\n  closeAddLocationModal() {\r\n    this.showAddLocationModal = false;\r\n  }\r\n\r\n  closeEditLocationModal() {\r\n    this.showEditLocationModal = false;\r\n    this.selectedLocation = null;\r\n  }\r\n\r\n  closeDeleteConfirmationModal() {\r\n    this.showDeleteConfirmationModal = false;\r\n    this.selectedLocation = null;\r\n  }\r\n\r\n  openBulkCreateModal() {\r\n    this.showBulkCreateModal = true;\r\n  }\r\n\r\n  closeBulkCreateModal() {\r\n    this.showBulkCreateModal = false;\r\n  }\r\n\r\n  onLocationCreated(location: Location) {\r\n    // Refresh the locations list\r\n    this.loadLocations(this.pagination.current_page);\r\n    this.showAddLocationModal = false;\r\n  }\r\n\r\n  onLocationUpdated(updatedLocation: Location) {\r\n    // Update the location in the current list\r\n    const index = this.locations.findIndex(l => l.id === updatedLocation.id);\r\n    if (index !== -1) {\r\n      this.locations[index] = updatedLocation;\r\n    }\r\n    this.showEditLocationModal = false;\r\n    this.selectedLocation = null;\r\n  }\r\n\r\n  onLocationDeleted(deletedLocation: Location) {\r\n    // Remove the location from the current list\r\n    this.locations = this.locations.filter(l => l.id !== deletedLocation.id);\r\n    \r\n    // Update pagination totals\r\n    this.pagination.total = Math.max(0, this.pagination.total - 1);\r\n    this.pagination.to = Math.max(0, this.pagination.to - 1);\r\n    \r\n    // If current page is empty and not the first page, go to previous page\r\n    if (this.locations.length === 0 && this.pagination.current_page > 1) {\r\n      this.loadLocations(this.pagination.current_page - 1);\r\n    }\r\n    \r\n    this.showDeleteConfirmationModal = false;\r\n    this.selectedLocation = null;\r\n  }\r\n\r\n  onLocationsCreated(locations: Location[]) {\r\n    // Refresh the locations list\r\n    this.loadLocations(this.pagination.current_page);\r\n    this.loadHierarchy(); // Refresh hierarchy as well\r\n    this.showBulkCreateModal = false;\r\n  }\r\n\r\n  // Tree View Methods\r\n  toggleNode(nodeId: number) {\r\n    if (this.expandedNodes.has(nodeId)) {\r\n      this.expandedNodes.delete(nodeId);\r\n    } else {\r\n      this.expandedNodes.add(nodeId);\r\n    }\r\n  }\r\n\r\n  isNodeExpanded(nodeId: number): boolean {\r\n    return this.expandedNodes.has(nodeId);\r\n  }\r\n\r\n  expandAll() {\r\n    this.hierarchyData.forEach(node => {\r\n      this.addAllNodeIds(node, this.expandedNodes);\r\n    });\r\n  }\r\n\r\n  collapseAll() {\r\n    this.expandedNodes.clear();\r\n  }\r\n\r\n  private addAllNodeIds(node: any, nodeSet: Set<number>) {\r\n    nodeSet.add(node.id);\r\n    if (node.children && node.children.length > 0) {\r\n      node.children.forEach((child: any) => {\r\n        this.addAllNodeIds(child, nodeSet);\r\n      });\r\n    }\r\n  }\r\n\r\n  getLocationTypeColor(typeName: string): string {\r\n    const colorMap: { [key: string]: string } = {\r\n      'Community': 'gray',\r\n      'Residential Building': 'blue',\r\n      'Floor': 'green',\r\n      'Garden': 'orange',\r\n      'Office Building': 'blue'\r\n    };\r\n    return colorMap[typeName] || 'gray';\r\n  }\r\n  exportQR() {\r\n    // TODO: Implement QR export\r\n    console.log('Export QR');\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: Event) {\r\n    const target = event.target as HTMLElement;\r\n    const filterButton = target.closest('.filter-button');\r\n    const filterDropdown = target.closest('.filter-dropdown');\r\n    const selectElement = target.closest('select');\r\n    const optionElement = target.tagName === 'OPTION';\r\n    \r\n    // Close dropdown if click is outside button, dropdown, select elements, and options\r\n    if (!filterButton && !filterDropdown && !selectElement && !optionElement && this.showFilters) {\r\n      this.showFilters = false;\r\n    }\r\n  }\r\n}","<div class=\"bg-gray-50\">\r\n  <!-- Header -->\r\n  <div class=\"bg-white border-b border-gray-200 px-6 py-6\">\r\n    <div class=\"flex items-center justify-between mb-4\">\r\n      <div>\r\n        <h1 class=\"text-3xl font-bold text-gray-900\">Facilities & Locations</h1>\r\n        <p class=\"text-gray-600 mt-1\">Organize and monitor your facilities with hierarchical location management</p>\r\n      </div>\r\n      <div class=\"flex items-center space-x-3\">\r\n        <button class=\"flex items-center space-x-2 px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 rounded-lg transition-colors\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 10v6m0 0l-3-3m3 3l3-3M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z\"></path>\r\n          </svg>\r\n          <span>Export QR</span>\r\n        </button>\r\n        <button (click)=\"openBulkCreateModal()\" class=\"flex items-center space-x-2 px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 rounded-lg transition-colors cursor-pointer\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n          </svg>\r\n          <span>Bulk</span>\r\n        </button>\r\n        <button (click)=\"addLocation()\" class=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n          </svg>\r\n          <span>Add Location</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- View Tabs -->\r\n    <div class=\"flex items-center space-x-1 bg-gray-100 rounded-lg p-1\">\r\n      <button\r\n        (click)=\"setView('grid')\"\r\n        [class]=\"currentView === 'grid' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:text-gray-800'\"\r\n        class=\"flex-1 px-4 py-2 rounded-md text-sm font-medium transition-all\">\r\n        Grid\r\n      </button>\r\n      <button\r\n        (click)=\"setView('tree')\"\r\n        [class]=\"currentView === 'tree' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:text-gray-800'\"\r\n        class=\"flex-1 px-4 py-2 rounded-md text-sm font-medium transition-all\">\r\n        Tree\r\n      </button>\r\n      <button\r\n        (click)=\"setView('analytics')\"\r\n        [class]=\"currentView === 'analytics' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:text-gray-800'\"\r\n        class=\"flex-1 px-4 py-2 rounded-md text-sm font-medium transition-all\">\r\n        Analytics\r\n      </button>\r\n      <button\r\n        (click)=\"setView('mgmt')\"\r\n        [class]=\"currentView === 'mgmt' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:text-gray-800'\"\r\n        class=\"flex-1 px-4 py-2 rounded-md text-sm font-medium transition-all\">\r\n        Mgmt\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Search and Filters -->\r\n  <div *ngIf=\"currentView === 'grid'\" class=\"bg-white border-b border-gray-200 px-6 py-4\">\r\n    <div class=\"flex items-center justify-between mb-4\">\r\n      <!-- Search -->\r\n      <form [formGroup]=\"searchForm\" class=\"flex-1 max-w-md\">\r\n        <div class=\"relative\">\r\n          <svg class=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n          </svg>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"search\"\r\n            placeholder=\"Search locations...\"\r\n            class=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\r\n        </div>\r\n      </form>\r\n\r\n      <!-- Filters Toggle -->\r\n      <div class=\"relative\">\r\n        <button\r\n          (click)=\"toggleFilters()\"\r\n          class=\"filter-button relative flex items-center space-x-2 px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 rounded-lg transition-colors cursor-pointer\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.414A1 1 0 013 6.707V4z\"></path>\r\n          </svg>\r\n          <span>Filters</span>\r\n          <svg class=\"w-4 h-4 transition-transform\" [class.rotate-180]=\"showFilters\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n          </svg>\r\n        </button>\r\n\r\n        <!-- Filters Dropdown -->\r\n        <div *ngIf=\"showFilters\" class=\"filter-dropdown absolute text-start top-full right-0 mt-2 w-80 bg-white rounded-xl shadow-lg border border-gray-200 py-4 z-50\">\r\n          <form [formGroup]=\"filtersForm\" (ngSubmit)=\"applyFilters()\" class=\"p-4\">\r\n            <div class=\"space-y-4\">\r\n              <!-- Location Type -->\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Location Type</label>\r\n                <select formControlName=\"type_id\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\r\n                  <option value=\"\">All Types</option>\r\n                  <option *ngFor=\"let type of locationTypes\" [value]=\"type.id\">{{type.name}}</option>\r\n                </select>\r\n              </div>\r\n\r\n              <!-- Hierarchy Level -->\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Hierarchy Level</label>\r\n                <select formControlName=\"hierarchy_level\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\r\n                  <option *ngFor=\"let level of hierarchyLevels\" [value]=\"level.value\">{{level.label}}</option>\r\n                </select>\r\n              </div>\r\n\r\n              <!-- Asset Count -->\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Asset Count</label>\r\n                <select formControlName=\"asset_count\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\r\n                  <option value=\"\">Any Count</option>\r\n                  <option value=\"0\">No Assets</option>\r\n                  <option value=\"1-10\">1-10 Assets</option>\r\n                  <option value=\"11-50\">11-50 Assets</option>\r\n                  <option value=\"51+\">51+ Assets</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Action Buttons -->\r\n            <div class=\"flex items-center justify-between pt-4 border-t border-gray-100 mt-4\">\r\n              <button\r\n                type=\"button\"\r\n                (click)=\"clearFilters()\"\r\n                class=\"px-4 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors cursor-pointer\">\r\n                Clear Filters\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                class=\"px-4 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all cursor-pointer\">\r\n                Apply Filters\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n  <!-- Content Area -->\r\n  <div class=\"px-6 py-6\">\r\n    <!-- View Toggle (Only for Grid View) -->\r\n    <div *ngIf=\"currentView === 'grid'\" class=\"flex items-center justify-between mb-6\">\r\n      <div class=\"text-sm text-gray-600\">\r\n        Showing {{locations.length}} locations\r\n      </div>\r\n      <div class=\"flex items-center space-x-2\">\r\n        <button\r\n          (click)=\"currentListView = 'grid'\"\r\n          [class]=\"currentListView === 'grid' ? 'bg-blue-600 text-white' : 'bg-white text-gray-600 border border-gray-300'\"\r\n          class=\"px-3 py-2 rounded-lg text-sm font-medium transition-colors\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"></path>\r\n          </svg>\r\n        </button>\r\n        <button\r\n          (click)=\"currentListView = 'list'\"\r\n          [class]=\"currentListView === 'list' ? 'bg-blue-600 text-white' : 'bg-white text-gray-600 border border-gray-300'\"\r\n          class=\"px-3 py-2 rounded-lg text-sm font-medium transition-colors\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Grid View Content -->\r\n    <div *ngIf=\"currentView === 'grid'\">\r\n    <!-- Loading State -->\r\n    <div *ngIf=\"loading\" class=\"flex items-center justify-center py-20\">\r\n      <div class=\"text-center\">\r\n        <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-100 rounded-full mb-4\">\r\n          <svg class=\"animate-spin w-8 h-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Loading Locations</h3>\r\n        <p class=\"text-sm text-gray-500\">Please wait while we fetch your locations...</p>\r\n      </div>\r\n    </div>\r\n\r\n      <div *ngIf=\"!loading && currentListView === 'grid'\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-6\">\r\n      <div *ngFor=\"let location of locations\" class=\"relative bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-lg hover:border-blue-300 hover:-translate-y-1 transition-all duration-300 cursor-pointer group\">\r\n        <!-- Top Section -->\r\n        <div class=\"flex items-start justify-between mb-4\">\r\n          <!-- Left: Icon and Title -->\r\n          <div class=\"flex items-start space-x-3\">\r\n            <!--w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center group-hover:bg-blue-200 transition-colors duration-200-->\r\n            <div class=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center group-hover:bg-blue-200 transition-colors duration-300\">\r\n              <span *ngIf=\"location.type\" class=\"text-2xl\">{{getLocationTypeIcon(location.type)}}</span>\r\n              <span *ngIf=\"!location.type\" class=\"text-gray-600\" [innerHTML]=\"getDefaultLocationIcon()\"></span>\r\n            </div>\r\n            <div>\r\n              <h3 class=\"text-lg font-bold text-gray-900 group-hover:text-blue-700 transition-colors duration-300\">{{location.name}}</h3>\r\n              <div class=\"flex items-center space-x-2 mt-1\">\r\n                <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                  {{getHierarchyLevelBadge(location.hierarchy_level)}}\r\n                </span>\r\n                <span class=\"text-sm text-gray-600\">{{location.type?.name || 'Unknown Type'}}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Location Details -->\r\n        <div class=\"space-y-2 mb-6\">\r\n          <div class=\"flex items-center text-sm text-gray-600\">\r\n            <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path>\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n            </svg>\r\n            <span>{{location.address || location.name}}</span>\r\n          </div>\r\n          <div class=\"text-sm text-gray-600\">\r\n            {{location.description || location.name}}\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Children Count (Top Right) -->\r\n        <div class=\"absolute top-4 right-4 flex items-center space-x-1 text-blue-600\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\r\n          </svg>\r\n          <span class=\"text-sm font-medium\">{{location.children?.length || 0}}</span>\r\n        </div>\r\n\r\n        <!-- Actions Section -->\r\n        <div class=\"flex items-center justify-between\">\r\n          <!-- View Details Button -->\r\n          <button\r\n            (click)=\"viewLocation(location)\"\r\n            class=\"bg-blue-600 text-white px-6 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-all duration-300 flex items-center space-x-2 hover:shadow-lg transform hover:scale-105\">\r\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\r\n            </svg>\r\n            <span>View Details<span *ngIf=\"location.children?.length\"> ({{location.children?.length}})</span></span>\r\n          </button>\r\n\r\n          <!-- Action Icons -->\r\n          <div class=\"flex items-center space-x-2\">\r\n            <!-- QR Code -->\r\n            <button class=\"p-2 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-all duration-300 transform hover:scale-110 hover:shadow-md\">\r\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"></path>\r\n              </svg>\r\n            </button>\r\n\r\n            <!-- Edit -->\r\n            <button\r\n              (click)=\"editLocation(location)\"\r\n              [disabled]=\"loading\"\r\n              class=\"p-2 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-all duration-300 transform hover:scale-110 hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer\">\r\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\r\n              </svg>\r\n            </button>\r\n\r\n            <!-- Delete -->\r\n            <button\r\n              (click)=\"deleteLocation(location)\"\r\n              [disabled]=\"loading\"\r\n              class=\"p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all duration-300 transform hover:scale-110 hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer\">\r\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n      <!-- List View -->\r\n      <div *ngIf=\"!loading && currentListView === 'list'\" class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n      <!-- Table Header -->\r\n      <div class=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\r\n        <div class=\"grid grid-cols-12 gap-4 text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n          <div class=\"col-span-3\">Location</div>\r\n          <div class=\"col-span-2\">Type</div>\r\n          <div class=\"col-span-2\">Parent</div>\r\n          <div class=\"col-span-1\">Level</div>\r\n          <div class=\"col-span-1\">Assets</div>\r\n          <div class=\"col-span-1\">Children</div>\r\n          <div class=\"col-span-2\">Actions</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Table Body -->\r\n      <div class=\"divide-y divide-gray-200\">\r\n        <div *ngFor=\"let location of locations\" class=\"px-6 py-4 hover:bg-gray-50 hover:shadow-sm transition-all duration-200 cursor-pointer group\">\r\n          <div class=\"grid grid-cols-12 gap-4 items-center\">\r\n            <!-- Location -->\r\n            <div class=\"col-span-3\">\r\n              <div class=\"flex items-center space-x-3\">\r\n                <div class=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center group-hover:bg-blue-200 transition-colors duration-200\">\r\n                  <img [src]=\"location.type.icon\" [alt]=\"location.type.name\" class=\"w-6 h-6\">\r\n                </div>\r\n                <div>\r\n                  <div class=\"font-medium text-gray-900 group-hover:text-blue-700 transition-colors duration-200\">{{location.name}}</div>\r\n                  <div *ngIf=\"location.description\" class=\"text-sm text-gray-500\">{{location.description}}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Type -->\r\n            <div class=\"col-span-2\">\r\n              <span class=\"text-sm text-gray-600\">{{location.type.name}}</span>\r\n            </div>\r\n\r\n            <!-- Parent -->\r\n            <div class=\"col-span-2\">\r\n              <span class=\"text-sm text-gray-600\">\r\n                {{location.parent?.name || 'Root Level'}}\r\n              </span>\r\n            </div>\r\n\r\n            <!-- Level -->\r\n            <div class=\"col-span-1\">\r\n              <span\r\n                [class]=\"'inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-' + getHierarchyLevelColor(location.hierarchy_level) + '-100 text-' + getHierarchyLevelColor(location.hierarchy_level) + '-800'\">\r\n                {{getHierarchyLevelBadge(location.hierarchy_level)}}\r\n              </span>\r\n            </div>\r\n\r\n            <!-- Assets -->\r\n            <div class=\"col-span-1\">\r\n              <div class=\"flex items-center space-x-1\">\r\n                <svg class=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\"></path>\r\n                </svg>\r\n                <span class=\"text-sm text-gray-600\">{{location.asset_summary?.asset_count || 0}}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Children -->\r\n            <div class=\"col-span-1\">\r\n              <div class=\"flex items-center space-x-1\">\r\n                <svg class=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\r\n                </svg>\r\n                <span class=\"text-sm text-gray-600\">{{location.children?.length || 0}}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Actions -->\r\n            <div class=\"col-span-2\">\r\n              <div class=\"flex items-center space-x-2\">\r\n                <button\r\n                  (click)=\"viewLocation(location)\"\r\n                  class=\"p-1 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-all duration-200 hover:scale-110 cursor-pointer\">\r\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\r\n                  </svg>\r\n                </button>\r\n                <button\r\n                  (click)=\"editLocation(location)\"\r\n                  [disabled]=\"loading\"\r\n                  class=\"p-1 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-all duration-200 hover:scale-110 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer\">\r\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\r\n                  </svg>\r\n                </button>\r\n                <button\r\n                  (click)=\"deleteLocation(location)\"\r\n                  [disabled]=\"loading\"\r\n                  class=\"p-1 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded transition-all duration-200 hover:scale-110 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer\">\r\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n      <!-- Empty State -->\r\n      <div *ngIf=\"!loading && locations.length === 0\" class=\"text-center py-12\">\r\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path>\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n      </svg>\r\n      <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No locations found</h3>\r\n      <p class=\"mt-1 text-sm text-gray-500\">Get started by creating your first location.</p>\r\n      <div class=\"mt-6\">\r\n        <button\r\n          (click)=\"addLocation()\"\r\n          class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\">\r\n          <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n          </svg>\r\n          Add Location\r\n        </button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n\r\n    <!-- Tree View -->\r\n    <div *ngIf=\"currentView === 'tree'\">\r\n      <!-- Tree View Header -->\r\n      <div class=\"flex items-center justify-between mb-6\">\r\n        <h2 class=\"text-2xl font-bold text-gray-900\">Location Hierarchy</h2>\r\n        <div class=\"flex items-center space-x-3\">\r\n          <button\r\n            (click)=\"expandAll()\"\r\n            class=\"px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors cursor-pointer\">\r\n            Expand All\r\n          </button>\r\n          <button\r\n            (click)=\"collapseAll()\"\r\n            class=\"px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors cursor-pointer\">\r\n            Collapse All\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Tree Loading State -->\r\n      <div *ngIf=\"hierarchyLoading\" class=\"flex items-center justify-center py-20\">\r\n        <div class=\"text-center\">\r\n          <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-100 rounded-full mb-4\">\r\n            <svg class=\"animate-spin w-8 h-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n          </div>\r\n          <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Loading Hierarchy</h3>\r\n          <p class=\"text-sm text-gray-500\">Please wait while we fetch the location hierarchy...</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Tree Content -->\r\n      <div *ngIf=\"!hierarchyLoading\" class=\"space-y-1\">\r\n        <!-- Tree Nodes -->\r\n        <ng-container *ngFor=\"let node of hierarchyData\">\r\n          <!-- Root Node -->\r\n          <div class=\"bg-white rounded-lg border border-gray-200 p-4\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <div class=\"flex items-center space-x-3\">\r\n                <!-- Expand/Collapse Icon -->\r\n                <button\r\n                  *ngIf=\"node.children && node.children.length > 0\"\r\n                  (click)=\"toggleNode(node.id)\"\r\n                  class=\"w-4 h-4 flex items-center justify-center text-gray-400 hover:text-gray-600 transition-colors cursor-pointer\">\r\n                  <svg class=\"w-3 h-3 transition-transform\"\r\n                       [class.rotate-90]=\"isNodeExpanded(node.id)\"\r\n                       fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\r\n                  </svg>\r\n                </button>\r\n                <div *ngIf=\"!node.children || node.children.length === 0\" class=\"w-4 h-4 flex items-center justify-center\">\r\n                  <div class=\"w-1 h-1 bg-gray-300 rounded-full\"></div>\r\n                </div>\r\n\r\n                <!-- Node Icon -->\r\n                <div class=\"w-8 h-8 bg-blue-100 rounded flex items-center justify-center\">\r\n                  <svg class=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\"></path>\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 21l4-4 4 4\"></path>\r\n                  </svg>\r\n                </div>\r\n\r\n                <!-- Node Info -->\r\n                <div class=\"flex-1\">\r\n                  <div class=\"flex items-center space-x-3\">\r\n                    <span class=\"font-semibold text-gray-900\">{{node.name}}</span>\r\n                    <span class=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-gray-100 text-gray-700\">\r\n                      {{node.type?.name || 'Community'}}\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"text-sm text-gray-500 mt-1\">\r\n                    {{node.asset_count || 0}} assets\r\n                    <span *ngIf=\"node.children && node.children.length > 0\" class=\"ml-4\">\r\n                      {{node.children.length}} sub-location{{node.children.length !== 1 ? 's' : ''}}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Child Nodes -->\r\n            <div *ngIf=\"isNodeExpanded(node.id) && node.children && node.children.length > 0\"\r\n                 class=\"mt-4 ml-7 space-y-3\">\r\n              <ng-container *ngFor=\"let child of node.children\">\r\n                <div class=\"flex items-center justify-between py-2 px-3 bg-gray-50 rounded-lg\">\r\n                  <div class=\"flex items-center space-x-3\">\r\n                    <!-- Child Expand/Collapse Icon -->\r\n                    <button\r\n                      *ngIf=\"child.children && child.children.length > 0\"\r\n                      (click)=\"toggleNode(child.id)\"\r\n                      class=\"w-4 h-4 flex items-center justify-center text-gray-400 hover:text-gray-600 transition-colors cursor-pointer\">\r\n                      <svg class=\"w-3 h-3 transition-transform\"\r\n                           [class.rotate-90]=\"isNodeExpanded(child.id)\"\r\n                           fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\r\n                      </svg>\r\n                    </button>\r\n                    <div *ngIf=\"!child.children || child.children.length === 0\" class=\"w-4 h-4 flex items-center justify-center\">\r\n                      <div class=\"w-1 h-1 bg-gray-300 rounded-full\"></div>\r\n                    </div>\r\n\r\n                    <!-- Child Icon -->\r\n                    <div class=\"w-6 h-6 bg-blue-100 rounded flex items-center justify-center\">\r\n                      <svg class=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n                      </svg>\r\n                    </div>\r\n\r\n                    <!-- Child Info -->\r\n                    <div class=\"flex-1\">\r\n                      <div class=\"flex items-center space-x-3\">\r\n                        <span class=\"font-medium text-gray-900\">{{child.name}}</span>\r\n                        <span class=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-blue-100 text-blue-700\">\r\n                          {{child.type?.name || 'Residential Building'}}\r\n                        </span>\r\n                      </div>\r\n                      <div class=\"text-sm text-gray-500 mt-1\">\r\n                        {{child.asset_count || 0}} assets\r\n                        <span *ngIf=\"child.children && child.children.length > 0\" class=\"ml-4\">\r\n                          {{child.children.length}} sub-location{{child.children.length !== 1 ? 's' : ''}}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Grandchild Nodes -->\r\n                <div *ngIf=\"isNodeExpanded(child.id) && child.children && child.children.length > 0\"\r\n                     class=\"ml-7 space-y-2\">\r\n                  <div *ngFor=\"let grandchild of child.children\"\r\n                       class=\"flex items-center space-x-3 py-2 px-3 bg-white rounded border border-gray-100\">\r\n                    <!-- Grandchild Dot -->\r\n                    <div class=\"w-4 h-4 flex items-center justify-center\">\r\n                      <div class=\"w-1 h-1 bg-gray-300 rounded-full\"></div>\r\n                    </div>\r\n\r\n                    <!-- Grandchild Icon -->\r\n                    <div class=\"w-6 h-6 bg-green-100 rounded flex items-center justify-center\">\r\n                      <svg class=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\r\n                      </svg>\r\n                    </div>\r\n\r\n                    <!-- Grandchild Info -->\r\n                    <div class=\"flex-1\">\r\n                      <div class=\"flex items-center space-x-3\">\r\n                        <span class=\"font-medium text-gray-900\">{{grandchild.name}}</span>\r\n                        <span class=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-green-100 text-green-700\">\r\n                          {{grandchild.type?.name || 'Floor'}}\r\n                        </span>\r\n                      </div>\r\n                      <div class=\"text-sm text-gray-500 mt-1\">{{grandchild.asset_count || 0}} assets</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n\r\n        <!-- Empty Tree State -->\r\n        <div *ngIf=\"hierarchyData.length === 0\" class=\"text-center py-12\">\r\n          <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\r\n          </svg>\r\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No hierarchy data</h3>\r\n          <p class=\"mt-1 text-sm text-gray-500\">Create some locations to see the hierarchy tree.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Mgmt View -->\r\n    <div *ngIf=\"currentView === 'mgmt'\" class=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\r\n      <app-hierarchy-management></app-hierarchy-management>\r\n    </div>\r\n\r\n    <!-- Analytics View -->\r\n    <div *ngIf=\"currentView === 'analytics'\">\r\n      <div class=\"flex items-center justify-between mb-6\">\r\n        <h2 class=\"text-2xl font-bold text-gray-900\">Location Analytics</h2>\r\n        <div class=\"flex items-center space-x-3\">\r\n          <button class=\"px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors cursor-pointer\">\r\n            Export Report\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"text-center py-12\">\r\n        <div class=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n          <svg class=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Analytics Coming Soon</h3>\r\n        <p class=\"text-sm text-gray-500\">Detailed analytics and insights about your locations will be available here.</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Enhanced Pagination (Only for Grid View) -->\r\n    <div *ngIf=\"currentView === 'grid' && !loading && locations.length > 0\" class=\"mt-8 pt-6 border-t border-gray-200\">\r\n      <!-- Pagination Controls -->\r\n      <div class=\"flex items-center justify-between\">\r\n        <!-- Left: Per Page Selector -->\r\n        <div class=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n          <span>Show</span>\r\n          <select\r\n            [(ngModel)]=\"pagination.per_page\"\r\n            (change)=\"changePerPage($event)\"\r\n            class=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white\">\r\n            <option value=\"10\">10</option>\r\n            <option value=\"15\">15</option>\r\n            <option value=\"25\">25</option>\r\n            <option value=\"50\">50</option>\r\n            <option value=\"100\">100</option>\r\n          </select>\r\n          <span>entries</span>\r\n        </div>\r\n\r\n        <!-- Center: Page Navigation -->\r\n        <nav *ngIf=\"pagination.last_page > 1\" class=\"flex items-center space-x-1\" aria-label=\"Pagination\">\r\n          <!-- Previous Page Button -->\r\n          <button\r\n            (click)=\"goToPage(pagination.current_page - 1)\"\r\n            [disabled]=\"pagination.current_page === 1\"\r\n            class=\"flex items-center justify-center w-10 h-10 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n            title=\"Previous page\">\r\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"></path>\r\n            </svg>\r\n          </button>\r\n\r\n          <!-- Page Numbers -->\r\n          <div class=\"flex items-center space-x-1\">\r\n            <!-- First page (if not in visible range) -->\r\n            <button\r\n              *ngIf=\"getVisiblePages()[0] > 1\"\r\n              (click)=\"goToPage(1)\"\r\n              class=\"flex items-center justify-center w-10 h-10 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\">\r\n              1\r\n            </button>\r\n\r\n            <!-- Ellipsis before visible pages -->\r\n            <span *ngIf=\"getVisiblePages()[0] > 2\" class=\"flex items-center justify-center w-10 h-10 text-gray-400\">\r\n              <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <circle cx=\"3\" cy=\"10\" r=\"1.5\"></circle>\r\n                <circle cx=\"10\" cy=\"10\" r=\"1.5\"></circle>\r\n                <circle cx=\"17\" cy=\"10\" r=\"1.5\"></circle>\r\n              </svg>\r\n            </span>\r\n\r\n            <!-- Visible page numbers -->\r\n            <button\r\n              *ngFor=\"let page of getVisiblePages()\"\r\n              (click)=\"goToPage(page)\"\r\n              [class]=\"pagination.current_page === page ? 'bg-blue-600 text-white border-blue-600 shadow-sm' : 'bg-white text-gray-500 border-gray-300 hover:bg-gray-50'\"\r\n              class=\"flex items-center justify-center w-10 h-10 text-sm font-medium border rounded-lg transition-colors\"\r\n              [title]=\"'Page ' + page\">\r\n              {{page}}\r\n            </button>\r\n\r\n            <!-- Ellipsis after visible pages -->\r\n            <span *ngIf=\"getVisiblePages()[getVisiblePages().length - 1] < pagination.last_page - 1\" class=\"flex items-center justify-center w-10 h-10 text-gray-400\">\r\n              <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <circle cx=\"3\" cy=\"10\" r=\"1.5\"></circle>\r\n                <circle cx=\"10\" cy=\"10\" r=\"1.5\"></circle>\r\n                <circle cx=\"17\" cy=\"10\" r=\"1.5\"></circle>\r\n              </svg>\r\n            </span>\r\n\r\n            <!-- Last page (if not in visible range) -->\r\n            <button\r\n              *ngIf=\"getVisiblePages()[getVisiblePages().length - 1] < pagination.last_page\"\r\n              (click)=\"goToPage(pagination.last_page)\"\r\n              class=\"flex items-center justify-center w-10 h-10 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\">\r\n              {{pagination.last_page}}\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Next Page Button -->\r\n          <button\r\n            (click)=\"goToPage(pagination.current_page + 1)\"\r\n            [disabled]=\"pagination.current_page === pagination.last_page\"\r\n            class=\"flex items-center justify-center w-10 h-10 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n            title=\"Next page\">\r\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\r\n            </svg>\r\n          </button>\r\n        </nav>\r\n\r\n        <!-- Right: Pagination Info -->\r\n        <div class=\"text-sm text-gray-700\">\r\n          Showing {{pagination.from}} - {{pagination.to}} of {{pagination.total}} entries\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Page Jump Input (for large datasets) -->\r\n      <div *ngIf=\"pagination.last_page > 10\" class=\"flex items-center justify-center mt-4\">\r\n        <div class=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n          <span>Go to page:</span>\r\n          <input\r\n            type=\"number\"\r\n            [min]=\"1\"\r\n            [max]=\"pagination.last_page\"\r\n            [(ngModel)]=\"jumpToPage\"\r\n            (keyup.enter)=\"goToPage(jumpToPage!)\"\r\n            class=\"w-16 px-2 py-1 border border-gray-300 rounded text-center text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"{{pagination.current_page}}\">\r\n          <button\r\n            (click)=\"goToPage(jumpToPage!)\"\r\n            [disabled]=\"!jumpToPage || jumpToPage < 1 || jumpToPage > pagination.last_page\"\r\n            class=\"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\">\r\n            Go\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Location Modal -->\r\n  <app-add-location-modal\r\n    [isOpen]=\"showAddLocationModal\"\r\n    (closeModal)=\"closeAddLocationModal()\"\r\n    (locationCreated)=\"onLocationCreated($event)\">\r\n  </app-add-location-modal>\r\n\r\n  <!-- Edit Location Modal -->\r\n  <app-edit-location-modal\r\n    [isOpen]=\"showEditLocationModal\"\r\n    [location]=\"selectedLocation\"\r\n    (closeModal)=\"closeEditLocationModal()\"\r\n    (locationUpdated)=\"onLocationUpdated($event)\">\r\n  </app-edit-location-modal>\r\n\r\n  <!-- Delete Confirmation Modal -->\r\n  <app-delete-confirmation-modal\r\n    [isOpen]=\"showDeleteConfirmationModal\"\r\n    [location]=\"selectedLocation\"\r\n    (closeModal)=\"closeDeleteConfirmationModal()\"\r\n    (locationDeleted)=\"onLocationDeleted($event)\">\r\n  </app-delete-confirmation-modal>\r\n\r\n  <!-- Bulk Create Modal -->\r\n  <app-bulk-create-modal\r\n    [isOpen]=\"showBulkCreateModal\"\r\n    (closeModal)=\"closeBulkCreateModal()\"\r\n    (locationsCreated)=\"onLocationsCreated($event)\">\r\n  </app-bulk-create-modal>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { LocationService, Location } from '../../services/location.service';\r\nimport { AddLocationModalComponent } from '../add-location-modal/add-location-modal.component';\r\nimport { EditLocationModalComponent } from '../edit-location-modal/edit-location-modal.component';\r\nimport { DeleteConfirmationModalComponent } from '../delete-confirmation-modal/delete-confirmation-modal.component';\r\nimport { Location as angularLocation } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-location-view',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, AddLocationModalComponent, EditLocationModalComponent, DeleteConfirmationModalComponent],\r\n  templateUrl: './location-view.component.html',\r\n  styleUrl: './location-view.component.scss'\r\n})\r\nexport class LocationViewComponent implements OnInit, OnDestroy {\r\n  private destroy$ = new Subject<void>();\r\n\r\n  location: Location | null = null;\r\n  loading = true;\r\n  error = '';\r\n  ancestors: Location[] = [];\r\n\r\n  // Sublocation data\r\n  subLocations: Location[] = [];\r\n  subLocationsLoading = false;\r\n\r\n  // Modal state\r\n  showAddSubLocationModal = false;\r\n  showEditLocationModal = false;\r\n  showDeleteConfirmationModal = false;\r\n\r\n  // Mock data for demonstration\r\n  mockStats = {\r\n    totalAssets: 0,\r\n    healthScore: 100,\r\n    subLocations: 0,\r\n    totalValue: 0\r\n  };\r\n\r\n  mockActivities = [\r\n    {\r\n      type: 'maintenance',\r\n      title: 'Maintenance Scheduled',\r\n      description: 'Routine maintenance scheduled for next week',\r\n      time: 'about 2 hours ago',\r\n      icon: 'maintenance'\r\n    },\r\n    {\r\n      type: 'utilization',\r\n      title: 'High Utilization',\r\n      description: 'Location utilization increased by 15%',\r\n      time: 'about 6 hours ago',\r\n      icon: 'chart'\r\n    },\r\n    {\r\n      type: 'safety',\r\n      title: 'Safety Inspection',\r\n      description: 'Monthly safety inspection completed',\r\n      time: '1 day ago',\r\n      icon: 'shield'\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private locationService: LocationService,\r\n    private angularLocation: angularLocation,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(params => {\r\n        const locationId = params['id'];\r\n        if (locationId) {\r\n          this.loadLocation(parseInt(locationId));\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  loadLocation(id: number) {\r\n    this.loading = true;\r\n    this.error = '';\r\n\r\n    this.locationService.getLocation(id)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.location = response.data.location;\r\n            this.ancestors = response.data.ancestors || [];\r\n            this.updateMockStats();\r\n            this.loadSubLocations();\r\n          } else {\r\n            this.error = response.message || 'Failed to load location';\r\n          }\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          this.error = error.error?.message || 'An error occurred while loading the location';\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  loadSubLocations() {\r\n    if (!this.location) return;\r\n\r\n    this.subLocationsLoading = true;\r\n\r\n    const params = {\r\n      parent_id: this.location.id,\r\n      per_page: 50 // Load more sublocations\r\n    };\r\n\r\n    this.locationService.getLocations(params)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.subLocations = response.data.locations;\r\n            this.updateMockStats();\r\n          }\r\n          this.subLocationsLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading sub-locations:', error);\r\n          this.subLocationsLoading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  updateMockStats() {\r\n    if (this.location) {\r\n      this.mockStats = {\r\n        totalAssets: this.location.asset_summary?.asset_count || 0,\r\n        healthScore: 100,\r\n        subLocations: this.subLocations.length,\r\n        totalValue: this.location.asset_summary?.total_value || 0\r\n      };\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    this.angularLocation.back();\r\n  }\r\n\r\n  editLocation() {\r\n    this.showEditLocationModal = true;\r\n  }\r\n\r\n  addAsset() {\r\n    // TODO: Implement add asset functionality\r\n    console.log('Add asset to location');\r\n  }\r\n\r\n  deleteLocation() {\r\n    this.showDeleteConfirmationModal = true;\r\n  }\r\n\r\n  addSubLocation() {\r\n    this.showAddSubLocationModal = true;\r\n  }\r\n\r\n  closeAddSubLocationModal() {\r\n    this.showAddSubLocationModal = false;\r\n  }\r\n\r\n  onSubLocationCreated(subLocation: Location) {\r\n    // Reload sublocations to get the updated list\r\n    this.loadSubLocations();\r\n    this.showAddSubLocationModal = false;\r\n  }\r\n\r\n  closeEditLocationModal() {\r\n    this.showEditLocationModal = false;\r\n  }\r\n\r\n  onLocationUpdated(updatedLocation: Location) {\r\n    // Update the current location with the updated data\r\n    this.location = updatedLocation;\r\n    this.updateMockStats();\r\n    this.showEditLocationModal = false;\r\n  }\r\n\r\n  closeDeleteConfirmationModal() {\r\n    this.showDeleteConfirmationModal = false;\r\n  }\r\n\r\n  onLocationDeleted(deletedLocation: Location) {\r\n    // Navigate back to locations list after successful deletion\r\n    this.router.navigate(['/locations']);\r\n  }\r\n  onQRCodeError(event: any) {\r\n    // Hide the broken image and show placeholder\r\n    event.target.style.display = 'none';\r\n    console.log('QR code image failed to load');\r\n  }\r\n\r\n  regenerateQR() {\r\n    // TODO: Implement QR regeneration\r\n    console.log('Regenerate QR code');\r\n  }\r\n\r\n  downloadQR() {\r\n    if (this.location?.quick_chart_qr_url) {\r\n      const link = document.createElement('a');\r\n      link.href = this.location.quick_chart_qr_url;\r\n      link.target = '_blank';\r\n      link.download = `qr-code-${this.location.name.toLowerCase().replace(/\\s+/g, '-')}.png`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n  }\r\n\r\n printLabel() {\r\n   if (this.location?.quick_chart_qr_url) {\r\n     const printWindow = window.open('', '_blank');\r\n     if (printWindow) {\r\n       printWindow.document.write(`\r\n         <html>\r\n           <head>\r\n             <title>Print Label</title>\r\n             <style>\r\n               body {\r\n                 font-family: Arial, sans-serif;\r\n                 text-align: center;\r\n                 margin: 20px;\r\n               }\r\n               img {\r\n                 max-width: 100%;\r\n                 height: auto;\r\n               }\r\n             </style>\r\n           </head>\r\n           <body>\r\n             <h1>${this.location.name}</h1>\r\n             <img src=\"${this.location.quick_chart_qr_url}\" alt=\"QR Code for ${this.location.name}\">\r\n             <p>Scan this QR code to access location details.</p>\r\n             <script>\r\n               window.onload = function() {\r\n                 window.print();\r\n                 window.close();\r\n               };\r\n             </script>\r\n           </body>\r\n         </html>\r\n       `);\r\n       printWindow.document.close();\r\n     }\r\n   } else {\r\n     console.error('QR code URL is not available for printing.');\r\n   }\r\n }\r\n\r\n  getActivityIcon(type: string): string {\r\n    const icons: { [key: string]: string } = {\r\n      maintenance: 'M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z M15 12a3 3 0 11-6 0 3 3 0 016 0z',\r\n      chart: 'M13 7h8m0 0v8m0-8l-8 8-4-4-6 6',\r\n      shield: 'M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z'\r\n    };\r\n    return icons[type] || icons['maintenance'];\r\n  }\r\n\r\n  getActivityColor(type: string): string {\r\n    const colors: { [key: string]: string } = {\r\n      maintenance: 'orange',\r\n      chart: 'purple',\r\n      shield: 'blue'\r\n    };\r\n    return colors[type] || 'gray';\r\n  }\r\n\r\n  viewSubLocation(subLocation: Location) {\r\n    this.router.navigate(['/locations', subLocation.id]);\r\n    setTimeout(() => {\r\n      this.route.params\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe(params => {\r\n          const locationId = params['id'];\r\n          if (locationId) {\r\n            this.loadLocation(parseInt(locationId));\r\n          }\r\n        });\r\n    },500)\r\n  }\r\n\r\n  editSubLocation(subLocation: Location) {\r\n    // TODO: Implement edit sublocation functionality\r\n    console.log('Edit sublocation:', subLocation);\r\n  }\r\n\r\n  deleteSubLocation(subLocation: Location) {\r\n    // TODO: Implement delete sublocation functionality\r\n    console.log('Delete sublocation:', subLocation);\r\n  }\r\n}\r\n","<!-- Location View Page -->\r\n<div class=\"min-h-screen bg-gray-50\">\r\n  <!-- Header -->\r\n  <div class=\"bg-white border-b border-gray-200 px-6 py-4\">\r\n    <div class=\"flex items-center justify-between\">\r\n      <!-- Back Button and Title -->\r\n      <div class=\"flex items-center space-x-4\">\r\n        <button\r\n          (click)=\"goBack()\"\r\n          class=\"flex items-center space-x-2 text-gray-600 hover:text-gray-800 transition-colors\">\r\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"></path>\r\n          </svg>\r\n          <span class=\"font-medium\">Back to Locations</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Breadcrumb Navigation -->\r\n    <div *ngIf=\"location && !loading\" class=\"mt-4\">\r\n      <nav class=\"flex\" aria-label=\"Breadcrumb\">\r\n        <ol class=\"flex items-center space-x-2\">\r\n          <!-- Root Level -->\r\n          <li>\r\n            <div class=\"flex items-center\">\r\n              <a routerLink=\"/locations\" class=\"text-gray-500 hover:text-gray-700 transition-colors\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\"></path>\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 21l4-4 4 4\"></path>\r\n                </svg>\r\n                <span class=\"sr-only\">Locations</span>\r\n              </a>\r\n            </div>\r\n          </li>\r\n\r\n          <!-- Ancestors -->\r\n          <li *ngFor=\"let ancestor of ancestors\">\r\n            <div class=\"flex items-center\">\r\n              <svg class=\"w-4 h-4 text-gray-400 mx-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\r\n              </svg>\r\n              <a \r\n                [routerLink]=\"['/locations', ancestor.id]\"\r\n                class=\"text-gray-500 hover:text-gray-700 transition-colors text-sm font-medium\">\r\n                {{ancestor.name}}\r\n              </a>\r\n            </div>\r\n          </li>\r\n\r\n          <!-- Current Location -->\r\n          <li>\r\n            <div class=\"flex items-center\">\r\n              <svg class=\"w-4 h-4 text-gray-400 mx-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\r\n              </svg>\r\n              <span class=\"text-gray-900 text-sm font-medium\">{{location.name}}</span>\r\n            </div>\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <!-- Hierarchy Level Indicator -->\r\n      <div class=\"mt-2 flex items-center space-x-2\">\r\n        <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n          Level {{location.hierarchy_level}}\r\n        </span>\r\n        <span class=\"text-xs text-gray-500\">{{location.type?.name || 'Unknown Type'}}</span>\r\n        <span *ngIf=\"ancestors.length > 0\" class=\"text-xs text-gray-400\">\r\n          • {{ancestors.length}} parent location{{ancestors.length !== 1 ? 's' : ''}}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading\" class=\"flex items-center justify-center py-20\">\r\n    <div class=\"text-center\">\r\n      <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-100 rounded-full mb-4\">\r\n        <svg class=\"animate-spin w-8 h-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n        </svg>\r\n      </div>\r\n      <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Loading Location</h3>\r\n      <p class=\"text-sm text-gray-500\">Please wait while we fetch the location details...</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error && !loading\" class=\"flex items-center justify-center py-20\">\r\n    <div class=\"text-center\">\r\n      <div class=\"inline-flex items-center justify-center w-16 h-16 bg-red-100 rounded-full mb-4\">\r\n        <svg class=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\r\n        </svg>\r\n      </div>\r\n      <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Error Loading Location</h3>\r\n      <p class=\"text-sm text-gray-500 mb-4\">{{error}}</p>\r\n      <button\r\n        (click)=\"goBack()\"\r\n        class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\r\n        Back to Locations\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div *ngIf=\"location && !loading\" class=\"px-6 py-6\">\r\n    <!-- Location Header - Blue Background -->\r\n    <div class=\"bg-blue-100 rounded-lg p-6 mb-6\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <!-- Left: Icon and Title -->\r\n        <div class=\"flex items-center space-x-4\">\r\n          <div class=\"w-12 h-12 bg-blue-200 rounded-lg flex items-center justify-center\">\r\n            <svg class=\"w-6 h-6 text-blue-700\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n            </svg>\r\n          </div>\r\n          <h1 class=\"text-2xl font-bold text-gray-900\">{{location.name}}</h1>\r\n        </div>\r\n\r\n        <!-- Right: Action Buttons -->\r\n        <div class=\"flex items-center space-x-3\">\r\n          <button\r\n            (click)=\"editLocation()\"\r\n            class=\"flex items-center space-x-2 px-4 py-2 text-gray-700 hover:bg-blue-200 rounded-lg transition-colors\">\r\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\r\n            </svg>\r\n            <span>Edit</span>\r\n          </button>\r\n\r\n          <button\r\n            (click)=\"addAsset()\"\r\n            class=\"flex items-center space-x-2 px-4 py-2 text-gray-700 hover:bg-blue-200 rounded-lg transition-colors\">\r\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n            </svg>\r\n            <span>Add Asset</span>\r\n          </button>\r\n\r\n          <button\r\n            (click)=\"deleteLocation()\"\r\n            class=\"flex items-center space-x-2 px-4 py-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors\">\r\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\r\n            </svg>\r\n            <span>Delete</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Stats Cards -->\r\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n      <!-- Total Assets -->\r\n      <div class=\"bg-white rounded-lg p-4 border border-gray-200\">\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <h3 class=\"text-sm font-medium text-blue-600\">Total Assets</h3>\r\n          <div class=\"w-8 h-8 bg-blue-50 rounded-lg flex items-center justify-center\">\r\n            <svg class=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div class=\"text-xl font-bold text-gray-900\">{{mockStats.totalAssets}}</div>\r\n      </div>\r\n\r\n      <!-- Health Score -->\r\n      <div class=\"bg-white rounded-lg p-4 border border-gray-200\">\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <h3 class=\"text-sm font-medium text-green-600\">Health Score</h3>\r\n          <div class=\"w-8 h-8 bg-green-50 rounded-lg flex items-center justify-center\">\r\n            <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div class=\"text-xl font-bold text-gray-900\">{{mockStats.healthScore}}%</div>\r\n      </div>\r\n\r\n      <!-- Sub-locations -->\r\n      <div class=\"bg-white rounded-lg p-4 border border-gray-200\">\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <h3 class=\"text-sm font-medium text-purple-600\">Sub-locations</h3>\r\n          <div class=\"w-8 h-8 bg-purple-50 rounded-lg flex items-center justify-center\">\r\n            <svg class=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div class=\"text-xl font-bold text-gray-900\">{{mockStats.subLocations}}</div>\r\n      </div>\r\n\r\n      <!-- Total Value -->\r\n      <div class=\"bg-white rounded-lg p-4 border border-gray-200\">\r\n        <div class=\"flex items-center justify-between mb-2\">\r\n          <h3 class=\"text-sm font-medium text-orange-600\">Total Value</h3>\r\n          <div class=\"w-8 h-8 bg-orange-50 rounded-lg flex items-center justify-center\">\r\n            <svg class=\"w-5 h-5 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div class=\"text-xl font-bold text-gray-900\">${{mockStats.totalValue}}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Main Content Grid -->\r\n    <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n      <!-- Left Column -->\r\n      <div class=\"lg:col-span-2 space-y-6\">\r\n        <!-- Location Overview -->\r\n        <div class=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n          <div class=\"flex items-center space-x-2 mb-4\">\r\n            <svg class=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\r\n            </svg>\r\n            <h2 class=\"text-lg font-semibold text-gray-900\">Location Overview</h2>\r\n          </div>\r\n\r\n          <div class=\"space-y-4\">\r\n            <div>\r\n              <h4 class=\"text-sm font-medium text-gray-700 mb-2\">Description</h4>\r\n              <p class=\"text-gray-600\">{{location.description || location.name}}</p>\r\n            </div>\r\n\r\n            <div>\r\n              <h4 class=\"text-sm font-medium text-gray-700 mb-2\">Capacity & Utilization</h4>\r\n              <div class=\"space-y-2\">\r\n                <div class=\"flex justify-between text-sm\">\r\n                  <span class=\"text-gray-600\">Asset Utilization</span>\r\n                  <span class=\"font-medium\">0%</span>\r\n                </div>\r\n                <div class=\"w-full bg-gray-200 rounded-full h-2\">\r\n                  <div class=\"bg-blue-600 h-2 rounded-full\" style=\"width: 0%\"></div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"grid grid-cols-2 gap-4 mt-4\">\r\n                <div class=\"flex items-center space-x-2\">\r\n                  <svg class=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"></path>\r\n                  </svg>\r\n                  <div>\r\n                    <div class=\"text-lg font-semibold text-gray-900\">72°F</div>\r\n                    <div class=\"text-xs text-gray-500\">Temperature</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"flex items-center space-x-2\">\r\n                  <svg class=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                  </svg>\r\n                  <div>\r\n                    <div class=\"text-lg font-semibold text-gray-900\">Normal</div>\r\n                    <div class=\"text-xs text-gray-500\">Status</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Asset Health Dashboard -->\r\n        <div class=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n          <div class=\"flex items-center space-x-2 mb-4\">\r\n            <svg class=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"></path>\r\n            </svg>\r\n            <h2 class=\"text-lg font-semibold text-gray-900\">Asset Health Dashboard</h2>\r\n          </div>\r\n\r\n          <div class=\"text-center py-12\">\r\n            <div class=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n              <svg class=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\"></path>\r\n              </svg>\r\n            </div>\r\n            <h3 class=\"text-lg font-medium text-gray-900 mb-2\">No Assets Found</h3>\r\n            <p class=\"text-gray-600 mb-4\">This location doesn't have any assets assigned yet.</p>\r\n            <button\r\n              (click)=\"addAsset()\"\r\n              class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\r\n              Add Assets\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Sub-locations -->\r\n        <div class=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n          <div class=\"flex items-center justify-between mb-4\">\r\n            <div class=\"flex items-center space-x-2\">\r\n              <svg class=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\r\n              </svg>\r\n              <h2 class=\"text-lg font-semibold text-gray-900\">Sub-locations ({{mockStats.subLocations}})</h2>\r\n            </div>\r\n            <button\r\n              (click)=\"addSubLocation()\"\r\n              class=\"flex items-center space-x-2 px-3 py-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\">\r\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n              </svg>\r\n              <span>Add Sub-location</span>\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Loading State -->\r\n          <div *ngIf=\"subLocationsLoading\" class=\"text-center py-12\">\r\n            <div class=\"inline-flex items-center justify-center w-12 h-12 bg-blue-100 rounded-full mb-4\">\r\n              <svg class=\"animate-spin w-6 h-6 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n            </div>\r\n            <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Loading Sub-locations</h3>\r\n            <p class=\"text-sm text-gray-500\">Please wait...</p>\r\n          </div>\r\n\r\n          <!-- Sub-locations List -->\r\n          <div *ngIf=\"!subLocationsLoading && subLocations.length > 0\" class=\"space-y-4\">\r\n            <!-- Sub-location Cards -->\r\n            <div *ngFor=\"let subLocation of subLocations\"\r\n                 class=\"bg-gray-50 rounded-lg p-4 hover:bg-gray-100 transition-all cursor-pointer\"\r\n                 (click)=\"viewSubLocation(subLocation)\">\r\n              <!-- Location Header -->\r\n              <div class=\"flex items-start justify-between mb-3\">\r\n                <div class=\"flex items-center space-x-3\">\r\n                  <div class=\"w-8 h-8 bg-white rounded-lg flex items-center justify-center border border-gray-200\">\r\n                    <svg class=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\r\n                    </svg>\r\n                  </div>\r\n                  <div>\r\n                    <h4 class=\"font-semibold text-gray-900\">{{subLocation.name}}</h4>\r\n                    <div class=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n                      <span>{{subLocation.type.name}}</span>\r\n                    </div>\r\n                    <div class=\"text-sm text-gray-500 mt-1\">{{subLocation.description || subLocation.name}}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Action Menu -->\r\n                <div class=\"flex items-center space-x-1\">\r\n                  <button\r\n                    (click)=\"editSubLocation(subLocation); $event.stopPropagation()\"\r\n                    class=\"p-1 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-all\">\r\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\r\n                    </svg>\r\n                  </button>\r\n                  <button class=\"p-1 text-gray-400 hover:text-gray-600 hover:bg-gray-200 rounded transition-all\">\r\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Location Stats -->\r\n              <div class=\"flex items-center justify-between text-sm\">\r\n                <div class=\"flex items-center space-x-4\">\r\n                  <span class=\"text-gray-600\">Assets: <span class=\"font-medium text-gray-900\">{{subLocation.asset_summary?.asset_count || 0}}</span></span>\r\n                </div>\r\n                <div class=\"flex items-center space-x-4\">\r\n                  <span class=\"text-gray-600\">Status: <span class=\"font-medium text-green-600\">Active</span></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Hierarchy View Section -->\r\n            <div class=\"mt-8 pt-6 border-t border-gray-200\">\r\n              <h3 class=\"text-base font-semibold text-gray-900 mb-4\">Hierarchy View</h3>\r\n\r\n              <!-- Parent Location -->\r\n              <div class=\"bg-blue-100 rounded-lg p-3 mb-2\">\r\n                <div class=\"flex items-center space-x-3\">\r\n                  <div class=\"w-6 h-6 bg-blue-200 rounded flex items-center justify-center\">\r\n                    <svg class=\"w-3 h-3 text-blue-700\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n                    </svg>\r\n                  </div>\r\n                  <div>\r\n                    <h4 class=\"font-medium text-blue-800 text-sm\">{{location.name}}</h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Sub-locations in hierarchy -->\r\n              <div class=\"space-y-1\">\r\n                <div *ngFor=\"let subLocation of subLocations\" class=\"flex items-center space-x-3 p-2 hover:bg-gray-50 rounded transition-colors\">\r\n                  <!-- Tree connector line -->\r\n                  <div class=\"flex items-center\">\r\n                    <div class=\"w-6 h-6 flex items-center justify-center\">\r\n                      <svg class=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M12 2v20M2 12h20\"></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"w-5 h-5 bg-gray-100 rounded flex items-center justify-center\">\r\n                    <svg class=\"w-3 h-3 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\r\n                    </svg>\r\n                  </div>\r\n                  <span class=\"text-sm text-gray-700\">{{subLocation.name}}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Empty State -->\r\n          <div *ngIf=\"!subLocationsLoading && subLocations.length === 0\" class=\"text-center py-12\">\r\n            <div class=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n              <svg class=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\r\n              </svg>\r\n            </div>\r\n            <h3 class=\"text-lg font-medium text-gray-900 mb-2\">No Sub-locations</h3>\r\n            <p class=\"text-gray-600 mb-4\">Create sub-locations to organize your space more effectively.</p>\r\n            <button\r\n              (click)=\"addSubLocation()\"\r\n              class=\"flex items-center space-x-2 mx-auto px-4 py-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\">\r\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n              </svg>\r\n              <span>Add First Sub-location</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Right Column -->\r\n      <div class=\"space-y-6\">\r\n        <!-- Recent Activity -->\r\n        <div class=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n          <div class=\"flex items-center space-x-2 mb-4\">\r\n            <svg class=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n            </svg>\r\n            <h2 class=\"text-lg font-semibold text-gray-900\">Recent Activity</h2>\r\n          </div>\r\n\r\n          <div class=\"space-y-4\">\r\n            <div *ngFor=\"let activity of mockActivities\" class=\"flex items-start space-x-3\">\r\n              <div [class]=\"'w-8 h-8 bg-' + getActivityColor(activity.type) + '-100 rounded-lg flex items-center justify-center'\">\r\n                <svg [class]=\"'w-4 h-4 text-' + getActivityColor(activity.type) + '-600'\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" [attr.d]=\"getActivityIcon(activity.type)\"></path>\r\n                </svg>\r\n              </div>\r\n              <div class=\"flex-1\">\r\n                <h4 class=\"font-medium text-gray-900\">{{activity.title}}</h4>\r\n                <p class=\"text-sm text-gray-600\">{{activity.description}}</p>\r\n                <p class=\"text-xs text-gray-500 mt-1\">{{activity.time}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Location QR Code -->\r\n        <div class=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n          <div class=\"flex items-center space-x-2 mb-4\">\r\n            <svg class=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"></path>\r\n            </svg>\r\n            <h2 class=\"text-lg font-semibold text-gray-900\">Location QR Code</h2>\r\n          </div>\r\n\r\n          <div class=\"text-center\">\r\n            <!-- QR Code Image -->\r\n            <div class=\"w-32 h-32 bg-gray-100 rounded-lg mx-auto mb-4 flex items-center justify-center overflow-hidden\">\r\n              <img\r\n                *ngIf=\"location.quick_chart_qr_url\"\r\n                [src]=\"location.quick_chart_qr_url\"\r\n                [alt]=\"'QR Code for ' + location.name\"\r\n                class=\"w-full h-full object-contain\"\r\n                (error)=\"onQRCodeError($event)\">\r\n\r\n              <!-- Fallback placeholder if no QR code -->\r\n              <div *ngIf=\"!location.quick_chart_qr_url\" class=\"w-24 h-24 bg-gray-300 rounded flex items-center justify-center\">\r\n                <svg class=\"w-12 h-12 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"></path>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n\r\n            <h4 class=\"font-medium text-gray-900 mb-2\">{{location.name}}</h4>\r\n            <p class=\"text-sm text-gray-600 mb-4\">{{mockStats.totalAssets}}</p>\r\n\r\n            <div class=\"space-y-2\">\r\n              <button\r\n                (click)=\"downloadQR()\"\r\n                class=\"w-full flex items-center justify-center space-x-2 px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg transition-colors\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 10v6m0 0l-3-3m3 3l3-3M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z\"></path>\r\n                </svg>\r\n                <span>Download</span>\r\n              </button>\r\n\r\n              <button\r\n                (click)=\"printLabel()\"\r\n                class=\"w-full flex items-center justify-center space-x-2 px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg transition-colors\">\r\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z\"></path>\r\n                </svg>\r\n                <span>Print Label</span>\r\n              </button>\r\n            </div>\r\n\r\n            <p class=\"text-xs text-gray-500 mt-4\">\r\n              Scan this QR code to quickly access location details and view assets.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  @if (!loading){\r\n    <!-- Add Sub-location Modal -->\r\n    <app-add-location-modal\r\n      *ngIf=\"location\"\r\n      [isOpen]=\"showAddSubLocationModal\"\r\n      [parentLocation]=\"location\"\r\n      (closeModal)=\"closeAddSubLocationModal()\"\r\n      (locationCreated)=\"onSubLocationCreated($event)\">\r\n    </app-add-location-modal>\r\n\r\n    <!-- Edit Location Modal -->\r\n    <app-edit-location-modal\r\n      [isOpen]=\"showEditLocationModal\"\r\n      [location]=\"location\"\r\n      (closeModal)=\"closeEditLocationModal()\"\r\n      (locationUpdated)=\"onLocationUpdated($event)\">\r\n    </app-edit-location-modal>\r\n\r\n    <!-- Delete Confirmation Modal -->\r\n    <app-delete-confirmation-modal\r\n      [isOpen]=\"showDeleteConfirmationModal\"\r\n      [location]=\"location\"\r\n      (closeModal)=\"closeDeleteConfirmationModal()\"\r\n      (locationDeleted)=\"onLocationDeleted($event)\">\r\n    </app-delete-confirmation-modal>\r\n  }\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LocationsComponent } from './locations.component';\r\nimport { LocationViewComponent } from './components/location-view/location-view.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LocationsComponent },\r\n  { path: ':id', component: LocationViewComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LocationsRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { LocationsRoutingModule } from './locations-routing.module';\r\nimport { LocationsComponent } from './locations.component';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    LocationsRoutingModule,\r\n    LocationsComponent\r\n  ]\r\n})\r\nexport class LocationsModule { }"],"mappings":"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","names":["RtlScrollAxisType","_ViewRepeaterOperation","_c0","document","window","importantProperties","item","AutoScrollVerticalDirection","AutoScrollHorizontalDirection","isTouchEvent","_c0"],"x_google_ignoreList":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]}