import{a as p}from"./chunk-6WXWVH7L.js";import{F as d}from"./chunk-CDW6MD7D.js";import{U as s,X as o,ba as i,g as n,r as u}from"./chunk-ZHYBNXXX.js";var a=class r{http=i(d);base=p.apiUrl;modulesEnabled$=new n({});modulesLoaded=!1;modulesLoading=!1;getCompany(){return this.http.get(`${this.base}/company`)}updateCompany(e){return this.http.put(`${this.base}/company`,e)}updateCurrency(e){return this.http.put(`${this.base}/settings/currency`,{currency:e})}uploadCompanyLogo(e){let t=new FormData;return t.append("logo",e),this.http.post(`${this.base}/settings/company/logo`,t)}listModules(){return this.http.get(`${this.base}/settings/modules`).pipe(s(e=>{this.pushModulesEnabled(e?.data?.modules||[]),this.modulesLoaded=!0,this.modulesLoading=!1}))}enableModule(e){return this.http.post(`${this.base}/settings/modules/${e}/enable`,{}).pipe(s(()=>this.refreshModulesEnabled().subscribe()))}disableModule(e){return this.http.post(`${this.base}/settings/modules/${e}/disable`,{}).pipe(s(()=>this.refreshModulesEnabled().subscribe()))}getPreferences(){return this.http.get(`${this.base}/settings/preferences`)}updatePreferences(e){return this.http.put(`${this.base}/settings/preferences`,e)}getModulesEnabled$(){if(!this.modulesLoaded&&!this.modulesLoading){let e=this.modulesEnabled$.value;Object.keys(e).length===0?(this.modulesLoading=!0,this.listModules().subscribe({next:()=>{this.modulesLoaded=!0,this.modulesLoading=!1},error:()=>{this.modulesLoading=!1}})):this.modulesLoaded=!0}return this.modulesEnabled$.asObservable()}refreshModulesEnabled(){return this.modulesLoaded=!1,this.listModules()}pushModulesEnabled(e){let t={};for(let l of e)t[l.key]=!!l.is_enabled;this.modulesEnabled$.next(t)}static \u0275fac=function(t){return new(t||r)};static \u0275prov=o({token:r,factory:r.\u0275fac,providedIn:"root"})};var m=class r{settings=i(a);currency$=new n("USD");currencySymbols={USD:"$",AED:"\u062F.\u0625"};refreshFromServer(){return this.settings.getCompany().pipe(u(e=>e?.data?.company?.currency||"USD"),s(e=>this.currency$.next(e)))}get$(){return this.currency$.asObservable()}getCurrent(){return this.currency$.getValue()}getSymbol(){let e=this.getCurrent();return this.currencySymbols[e]||e}format(e){let t=Number(e??0);return isFinite(t)?`${this.getSymbol()}${t.toLocaleString(void 0,{minimumFractionDigits:2,maximumFractionDigits:2})}`:`${this.getSymbol()}0.00`}static \u0275fac=function(t){return new(t||r)};static \u0275prov=o({token:r,factory:r.\u0275fac,providedIn:"root"})};export{a,m as b};
