{
  "version": 3,
  "sources": ["src/app/auth/login/login.component.ts", "src/app/auth/login/login.component.html", "src/app/auth/register/register.component.ts", "src/app/auth/register/register.component.html", "src/app/auth/forgot-password/forgot-password.component.ts", "src/app/auth/forgot-password/forgot-password.component.html", "src/app/auth/reset-password/reset-password.component.ts", "src/app/auth/reset-password/reset-password.component.html", "src/app/auth/activate-account/activate-account.component.ts", "src/app/auth/activate-account/activate-account.component.html", "src/app/auth/auth-routing.module.ts", "src/app/auth/auth.module.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\r\nimport {NgIf} from '@angular/common';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    NgIf,\r\n    ReactiveFormsModule\r\n  ],\r\n  styleUrl: './login.component.scss'\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n  emailVerificationMessage = '';\r\n  showResendVerification = false;\r\n  userId: number | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  toggleMode() {\r\n    this.router.navigate(['/register']);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.loginForm.valid && !this.isLoading) {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n      this.emailVerificationMessage = '';\r\n      this.showResendVerification = false;\r\n\r\n      this.authService.login(this.loginForm.value).subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.router.navigate(['/dashboard']);\r\n          } else {\r\n            this.errorMessage = response.message || 'Login failed';\r\n\r\n            // Check if it's an email verification issue\r\n            if (response.email_verified === false) {\r\n              this.emailVerificationMessage = response.message;\r\n              this.showResendVerification = true;\r\n              this.userId = response.user_id || null;\r\n            }\r\n          }\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          const errorResponse = error.error;\r\n          this.errorMessage = errorResponse?.message || 'An error occurred during login';\r\n\r\n          // Check if it's an email verification issue\r\n          if (errorResponse?.email_verified === false) {\r\n            this.emailVerificationMessage = errorResponse.message;\r\n            this.showResendVerification = true;\r\n            this.userId = errorResponse.user_id || null;\r\n          }\r\n\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  resendVerification() {\r\n    if (!this.loginForm.get('email')?.value) {\r\n      this.errorMessage = 'Please enter your email address';\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n\r\n    this.authService.resendVerification({ email: this.loginForm.get('email')?.value }).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.emailVerificationMessage = response.message;\r\n          this.showResendVerification = false;\r\n        } else {\r\n          this.errorMessage = response.message || 'Failed to resend verification email';\r\n        }\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        this.errorMessage = error.error?.message || 'Failed to resend verification email';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  goToForgotPassword() {\r\n    this.router.navigate(['/auth/forgot-password']);\r\n  }\r\n}\r\n", "<!-- Login Component HTML -->\r\n<div class=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n  <div class=\"max-w-md w-full space-y-8\">\r\n    <!-- Logo -->\r\n    <div class=\"text-center\">\r\n      <div class=\"flex justify-center mb-6\">\r\n        <div class=\"flex items-center space-x-3\">\r\n          <img [src]=\"'images/logo.png'\" alt=\"AssetGo Logo\" class=\"h-20 w-auto\">\r\n        </div>\r\n      </div>\r\n      <p class=\"text-gray-600\">Enterprise Asset Management System</p>\r\n    </div>\r\n\r\n    <!-- Auth Card -->\r\n    <div class=\"bg-white rounded-2xl shadow-lg p-8 max-w-md mx-auto\">\r\n      <div class=\"text-center mb-8\">\r\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Welcome</h2>\r\n        <p class=\"text-gray-600\">Sign in to your account or create a new one</p>\r\n      </div>\r\n\r\n      <!-- Tab Buttons -->\r\n      <div class=\"flex mb-8 bg-gray-100 rounded-lg p-1\">\r\n        <button \r\n          class=\"flex-1 py-2 px-4 text-center font-medium rounded-md bg-blue-600 text-white transition-all cursor-pointer\"\r\n          type=\"button\">\r\n          Sign In\r\n        </button>\r\n        <button \r\n          class=\"flex-1 py-2 px-4 text-center font-medium rounded-md text-gray-600 hover:text-gray-800 transition-all cursor-pointer\"\r\n          type=\"button\"\r\n          (click)=\"toggleMode()\">\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Email Verification Message -->\r\n      <div *ngIf=\"emailVerificationMessage\" class=\"mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n        <p class=\"text-yellow-800 text-sm\">{{ emailVerificationMessage }}</p>\r\n        <button \r\n          *ngIf=\"showResendVerification\"\r\n          (click)=\"resendVerification()\"\r\n          [disabled]=\"isLoading\"\r\n          class=\"mt-2 text-blue-600 hover:text-blue-500 text-sm font-medium disabled:opacity-50 cursor-pointer disabled:cursor-not-allowed\">\r\n          Resend verification email\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Error Message -->\r\n      <div *ngIf=\"errorMessage && !emailVerificationMessage\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n        <p class=\"text-red-600 text-sm\">{{ errorMessage }}</p>\r\n      </div>\r\n\r\n      <!-- Login Form -->\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"space-y-6\">\r\n          <div>\r\n            <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              formControlName=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n              [class.border-red-300]=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\"\r\n              required>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-2\">Password</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              formControlName=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n              [class.border-red-300]=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\"\r\n              required>\r\n          </div>\r\n\r\n          <div class=\"text-left\">\r\n            <button type=\"button\" (click)=\"goToForgotPassword()\" class=\"text-blue-600 hover:text-blue-500 text-sm font-medium cursor-pointer\">\r\n              Forgot password?\r\n            </button>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"loginForm.invalid || isLoading\"\r\n            class=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer\">\r\n            <span *ngIf=\"!isLoading\">Sign In</span>\r\n            <span *ngIf=\"isLoading\" class=\"flex items-center justify-center\">\r\n              <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              Signing In...\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Trust Indicators -->\r\n    <div class=\"flex justify-center space-x-12 text-sm text-gray-500 mt-8\">\r\n      <div class=\"flex flex-col items-center\">\r\n        <svg class=\"w-6 h-6 text-blue-600 mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\r\n        </svg>\r\n        <span>Secure</span>\r\n      </div>\r\n      <div class=\"flex flex-col items-center\">\r\n        <svg class=\"w-6 h-6 text-blue-600 mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n        </svg>\r\n        <span>Enterprise</span>\r\n      </div>\r\n      <div class=\"flex flex-col items-center\">\r\n        <svg class=\"w-6 h-6 text-blue-600 mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"></path>\r\n        </svg>\r\n        <span>Multi-tenant</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { NgIf} from '@angular/common';\r\nimport {FormBuilder, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { AuthService } from '../../core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    NgIf,\r\n    ReactiveFormsModule\r\n  ],\r\n  styleUrl: './register.component.scss'\r\n})\r\nexport class RegisterComponent implements OnDestroy {\r\n  registerForm: FormGroup;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n  showSuccessMessage = false;\r\n  countdown = 60;\r\n  countdownInterval: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    this.registerForm = this.fb.group({\r\n      first_name: ['', [Validators.required]],\r\n      last_name: ['', [Validators.required]],\r\n      company_name: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      password_confirmation: ['', [Validators.required]]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  passwordMatchValidator(form: FormGroup) {\r\n    const password = form.get('password');\r\n    const confirmPassword = form.get('password_confirmation');\r\n    return password && confirmPassword && password.value === confirmPassword.value\r\n      ? null : { passwordMismatch: true };\r\n  }\r\n\r\n  toggleMode() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.registerForm.valid && !this.isLoading) {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n      this.showSuccessMessage = false;\r\n\r\n      this.authService.register(this.registerForm.value).subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.showSuccessMessage = true;\r\n            this.startCountdown();\r\n          } else {\r\n            this.errorMessage = response.message || 'Registration failed';\r\n          }\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          this.errorMessage = error.error?.message || error.error?.error || 'An error occurred during registration';\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  startCountdown() {\r\n    this.countdown = 60;\r\n    this.countdownInterval = setInterval(() => {\r\n      this.countdown--;\r\n      if (this.countdown <= 0) {\r\n        clearInterval(this.countdownInterval);\r\n        this.router.navigate(['/login']);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.countdownInterval) {\r\n      clearInterval(this.countdownInterval);\r\n    }\r\n  }\r\n}\r\n", "<!-- Register Component HTML -->\r\n<div class=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n  <div class=\"max-w-md w-full space-y-8\">\r\n    <!-- Logo -->\r\n    <div class=\"text-center\">\r\n      <div class=\"flex justify-center mb-6\">\r\n        <div class=\"flex items-center space-x-3\">\r\n          <img [src]=\"'images/logo.png'\" alt=\"AssetGo Logo\" class=\"h-20 w-auto\">\r\n        </div>\r\n      </div>\r\n      <p class=\"text-gray-600\">Enterprise Asset Management System</p>\r\n    </div>\r\n\r\n    <!-- Success Message Card -->\r\n    <div *ngIf=\"showSuccessMessage\" class=\"bg-white rounded-2xl shadow-lg p-8 max-w-md mx-auto\">\r\n      <div class=\"text-center\">\r\n        <!-- Success Icon -->\r\n        <div class=\"flex justify-center mb-6\">\r\n          <div class=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center\">\r\n            <svg class=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">Registration Successful!</h2>\r\n        <p class=\"text-gray-600 mb-6 leading-relaxed\">\r\n          User registered successfully. Please login now.\r\n        </p>\r\n\r\n        <!-- Countdown -->\r\n        <div class=\"bg-blue-50 rounded-lg p-4 mb-6\">\r\n          <p class=\"text-blue-800 text-sm\">\r\n            Redirecting to login page in <span class=\"font-bold\">{{ countdown }}</span> seconds\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Manual redirect button -->\r\n        <button\r\n          (click)=\"toggleMode()\"\r\n          class=\"text-blue-600 hover:text-blue-500 text-sm font-medium cursor-pointer\">\r\n          Go to login now\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Auth Card -->\r\n    <div *ngIf=\"!showSuccessMessage\" class=\"bg-white rounded-2xl shadow-lg p-8 max-w-md mx-auto\">\r\n      <div class=\"text-center mb-8\">\r\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Welcome</h2>\r\n        <p class=\"text-gray-600\">Sign in to your account or create a new one</p>\r\n      </div>\r\n\r\n      <!-- Tab Buttons -->\r\n      <div class=\"flex mb-8 bg-gray-100 rounded-lg p-1\">\r\n        <button\r\n          class=\"flex-1 py-2 px-4 text-center font-medium rounded-md text-gray-600 hover:text-gray-800 transition-all cursor-pointer\"\r\n          type=\"button\"\r\n          (click)=\"toggleMode()\">\r\n          Sign In\r\n        </button>\r\n        <button\r\n          class=\"flex-1 py-2 px-4 text-center font-medium rounded-md bg-blue-600 text-white transition-all cursor-pointer\"\r\n          type=\"button\">\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Error Message -->\r\n      <div *ngIf=\"showSuccessMessage\" class=\"mb-4 p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n        <p class=\"text-green-600 text-sm\">User registered successfully. Please check your email to verify your account.</p>\r\n      </div>\r\n\r\n      <!-- Register Form -->\r\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"space-y-4\">\r\n          <!-- Name Fields -->\r\n          <div class=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label for=\"first_name\" class=\"block text-sm font-medium text-gray-700 mb-1\">First Name</label>\r\n              <input\r\n                id=\"first_name\"\r\n                type=\"text\"\r\n                formControlName=\"first_name\"\r\n                placeholder=\"First name\"\r\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n                [class.border-red-300]=\"registerForm.get('first_name')?.invalid && registerForm.get('first_name')?.touched\"\r\n                required>\r\n            </div>\r\n            <div>\r\n              <label for=\"last_name\" class=\"block text-sm font-medium text-gray-700 mb-1\">Last Name</label>\r\n              <input\r\n                id=\"last_name\"\r\n                type=\"text\"\r\n                formControlName=\"last_name\"\r\n                placeholder=\"Last name\"\r\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n                [class.border-red-300]=\"registerForm.get('last_name')?.invalid && registerForm.get('last_name')?.touched\"\r\n                required>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"company_name\" class=\"block text-sm font-medium text-gray-700 mb-1\">Company Name</label>\r\n            <input\r\n              id=\"company_name\"\r\n              type=\"text\"\r\n              formControlName=\"company_name\"\r\n              placeholder=\"Enter your company name\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n              [class.border-red-300]=\"registerForm.get('company_name')?.invalid && registerForm.get('company_name')?.touched\"\r\n              required>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              formControlName=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n              [class.border-red-300]=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\"\r\n              required>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              formControlName=\"password\"\r\n              placeholder=\"Create a password\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n              [class.border-red-300]=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\"\r\n              required>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"password_confirmation\" class=\"block text-sm font-medium text-gray-700 mb-1\">Confirm Password</label>\r\n            <input\r\n              id=\"password_confirmation\"\r\n              type=\"password\"\r\n              formControlName=\"password_confirmation\"\r\n              placeholder=\"Confirm your password\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n              [class.border-red-300]=\"registerForm.get('password_confirmation')?.invalid && registerForm.get('password_confirmation')?.touched\"\r\n              required>\r\n            <div *ngIf=\"registerForm.errors?.['passwordMismatch'] && registerForm.get('password_confirmation')?.touched\" class=\"text-red-500 text-xs mt-1\">\r\n              Passwords do not match\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"registerForm.invalid || isLoading\"\r\n            class=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer mt-6\">\r\n            <span *ngIf=\"!isLoading\">Sign Up</span>\r\n            <span *ngIf=\"isLoading\" class=\"flex items-center justify-center\">\r\n              <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              Creating Account...\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Trust Indicators -->\r\n    <div class=\"flex justify-center space-x-12 text-sm text-gray-500 mt-8\">\r\n      <div class=\"flex flex-col items-center\">\r\n        <svg class=\"w-6 h-6 text-blue-600 mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\r\n        </svg>\r\n        <span>Secure</span>\r\n      </div>\r\n      <div class=\"flex flex-col items-center\">\r\n        <svg class=\"w-6 h-6 text-blue-600 mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"></path>\r\n        </svg>\r\n        <span>Enterprise</span>\r\n      </div>\r\n      <div class=\"flex flex-col items-center\">\r\n        <svg class=\"w-6 h-6 text-blue-600 mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"></path>\r\n        </svg>\r\n        <span>Multi-tenant</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", "import { Component } from '@angular/core';\r\nimport { NgIf} from '@angular/common';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    NgIf,\r\n    ReactiveFormsModule\r\n  ],\r\n  styleUrl: './forgot-password.component.scss'\r\n})\r\nexport class ForgotPasswordComponent implements OnDestroy {\r\n  forgotPasswordForm: FormGroup;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n  showSuccessMessage = false;\r\n  countdown = 10;\r\n  countdownInterval: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.forgotPasswordForm.valid && !this.isLoading) {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n      this.showSuccessMessage = false;\r\n\r\n      this.authService.forgotPassword(this.forgotPasswordForm.value).subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.showSuccessMessage = true;\r\n            this.startCountdown();\r\n          } else {\r\n            this.errorMessage = response.message || 'Failed to send reset link';\r\n          }\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          this.errorMessage = error.error?.message || error.error?.error || 'An error occurred';\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  startCountdown() {\r\n    this.countdown = 10;\r\n    this.countdownInterval = setInterval(() => {\r\n      this.countdown--;\r\n      if (this.countdown <= 0) {\r\n        clearInterval(this.countdownInterval);\r\n        this.router.navigate(['/login']);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.countdownInterval) {\r\n      clearInterval(this.countdownInterval);\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n", "<!-- Forgot Password Component HTML -->\r\n<div class=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n  <div class=\"max-w-md w-full space-y-8\">\r\n    <!-- Logo -->\r\n    <div class=\"text-center\">\r\n      <div class=\"flex justify-center mb-6\">\r\n        <div class=\"flex items-center space-x-3\">\r\n          <img [src]=\"'images/logo.png'\" alt=\"AssetGo Logo\" class=\"h-20 w-auto\">\r\n        </div>\r\n      </div>\r\n      <p class=\"text-gray-600\">Enterprise Asset Management System</p>\r\n    </div>\r\n\r\n    <!-- Forgot Password Card -->\r\n    <div *ngIf=\"!showSuccessMessage\" class=\"bg-white rounded-2xl shadow-lg p-8 max-w-md mx-auto\">\r\n      <div class=\"text-center mb-8\">\r\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Forgot Password?</h2>\r\n        <p class=\"text-gray-600\">Enter your email address and we'll send you a link to reset your password</p>\r\n      </div>\r\n\r\n      <!-- Error Message -->\r\n      <div *ngIf=\"errorMessage\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n        <p class=\"text-red-600 text-sm\">{{ errorMessage }}</p>\r\n      </div>\r\n\r\n      <!-- Forgot Password Form -->\r\n      <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"space-y-6\">\r\n          <div>\r\n            <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">Email Address</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              formControlName=\"email\"\r\n              placeholder=\"Enter your email address\"\r\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n              [class.border-red-300]=\"forgotPasswordForm.get('email')?.invalid && forgotPasswordForm.get('email')?.touched\"\r\n              required>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"forgotPasswordForm.invalid || isLoading\"\r\n            class=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer\">\r\n            <span *ngIf=\"!isLoading\">Send Reset Link</span>\r\n            <span *ngIf=\"isLoading\" class=\"flex items-center justify-center\">\r\n              <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              Sending...\r\n            </span>\r\n          </button>\r\n\r\n          <div class=\"text-center\">\r\n            <button type=\"button\" (click)=\"goBack()\" class=\"text-blue-600 hover:text-blue-500 text-sm font-medium cursor-pointer\">\r\n              ← Back to Sign In\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Success Message Card -->\r\n    <div *ngIf=\"showSuccessMessage\" class=\"bg-white rounded-2xl shadow-lg p-8 max-w-md mx-auto\">\r\n      <div class=\"text-center\">\r\n        <!-- Success Icon -->\r\n        <div class=\"flex justify-center mb-6\">\r\n          <div class=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center\">\r\n            <svg class=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        \r\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">Reset Link Sent!</h2>\r\n        <p class=\"text-gray-600 mb-6 leading-relaxed\">\r\n          Password reset link sent to your email. Please check your email to reset your password.\r\n        </p>\r\n        \r\n        <!-- Countdown -->\r\n        <div class=\"bg-blue-50 rounded-lg p-4 mb-6\">\r\n          <p class=\"text-blue-800 text-sm\">\r\n            Redirecting to login page in <span class=\"font-bold\">{{ countdown }}</span> seconds\r\n          </p>\r\n        </div>\r\n        \r\n        <!-- Manual redirect button -->\r\n        <button\r\n          (click)=\"goBack()\"\r\n          class=\"text-blue-600 hover:text-blue-500 text-sm font-medium cursor-pointer\">\r\n          Go to login now\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>", "import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../core/services/auth.service';\r\nimport {NgIf} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    NgIf,\r\n    ReactiveFormsModule\r\n  ],\r\n  styleUrl: './reset-password.component.scss'\r\n})\r\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\r\n  resetPasswordForm: FormGroup;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n  showSuccessMessage = false;\r\n  countdown = 10;\r\n  countdownInterval: any;\r\n  token = '';\r\n  email = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private authService: AuthService\r\n  ) {\r\n    this.resetPasswordForm = this.fb.group({\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      password_confirmation: ['', [Validators.required]]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.token = this.route.snapshot.queryParams['token'] || '';\r\n    this.email = this.route.snapshot.queryParams['email'] || '';\r\n\r\n    if (!this.token || !this.email) {\r\n      this.errorMessage = 'Invalid reset link';\r\n    }\r\n  }\r\n\r\n  passwordMatchValidator(form: FormGroup) {\r\n    const password = form.get('password');\r\n    const confirmPassword = form.get('password_confirmation');\r\n    return password && confirmPassword && password.value === confirmPassword.value\r\n      ? null : { passwordMismatch: true };\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.resetPasswordForm.valid && !this.isLoading && this.token && this.email) {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n      this.showSuccessMessage = false;\r\n\r\n      const resetData = {\r\n        token: this.token,\r\n        email: this.email,\r\n        password: this.resetPasswordForm.value.password,\r\n        password_confirmation: this.resetPasswordForm.value.password_confirmation\r\n      };\r\n\r\n      this.authService.resetPassword(resetData).subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.showSuccessMessage = true;\r\n            this.startCountdown();\r\n          } else {\r\n            this.errorMessage = response.message || 'Failed to reset password';\r\n          }\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          this.errorMessage = error.error?.message || error.error?.error || 'An error occurred';\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  startCountdown() {\r\n    this.countdown = 10;\r\n    this.countdownInterval = setInterval(() => {\r\n      this.countdown--;\r\n      if (this.countdown <= 0) {\r\n        clearInterval(this.countdownInterval);\r\n        this.router.navigate(['/login']);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.countdownInterval) {\r\n      clearInterval(this.countdownInterval);\r\n    }\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n", "<!-- Reset Password Component HTML -->\r\n<div class=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n  <div class=\"max-w-md w-full space-y-8\">\r\n    <!-- Logo -->\r\n    <div class=\"text-center\">\r\n      <div class=\"flex justify-center mb-6\">\r\n        <div class=\"flex items-center space-x-3\">\r\n          <img [src]=\"'images/logo.png'\" alt=\"AssetGo Logo\" class=\"h-20 w-auto\">\r\n        </div>\r\n      </div>\r\n      <p class=\"text-gray-600\">Enterprise Asset Management System</p>\r\n    </div>\r\n\r\n    <!-- Reset Password Card -->\r\n    <div *ngIf=\"!showSuccessMessage\" class=\"bg-white rounded-2xl shadow-lg p-8 max-w-md mx-auto\">\r\n      <div class=\"text-center mb-8\">\r\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Reset Password</h2>\r\n        <p class=\"text-gray-600\">Enter your new password below</p>\r\n      </div>\r\n\r\n      <!-- Error Message -->\r\n      <div *ngIf=\"errorMessage\" class=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n        <p class=\"text-red-600 text-sm\">{{ errorMessage }}</p>\r\n      </div>\r\n\r\n      <!-- Reset Password Form -->\r\n      <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!errorMessage || (errorMessage && token && email)\">\r\n        <div class=\"space-y-6\">\r\n          <div>\r\n            <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-2\">New Password</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              formControlName=\"password\"\r\n              placeholder=\"Enter new password\"\r\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n              [class.border-red-300]=\"resetPasswordForm.get('password')?.invalid && resetPasswordForm.get('password')?.touched\"\r\n              required>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"password_confirmation\" class=\"block text-sm font-medium text-gray-700 mb-2\">Confirm New Password</label>\r\n            <input\r\n              id=\"password_confirmation\"\r\n              type=\"password\"\r\n              formControlName=\"password_confirmation\"\r\n              placeholder=\"Confirm new password\"\r\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-400\"\r\n              [class.border-red-300]=\"resetPasswordForm.get('password_confirmation')?.invalid && resetPasswordForm.get('password_confirmation')?.touched\"\r\n              required>\r\n            <div *ngIf=\"resetPasswordForm.errors?.['passwordMismatch'] && resetPasswordForm.get('password_confirmation')?.touched\" class=\"text-red-500 text-xs mt-1\">\r\n              Passwords do not match\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"resetPasswordForm.invalid || isLoading\"\r\n            class=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer\">\r\n            <span *ngIf=\"!isLoading\">Reset Password</span>\r\n            <span *ngIf=\"isLoading\" class=\"flex items-center justify-center\">\r\n              <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              Resetting...\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"text-center mt-6\">\r\n        <button type=\"button\" (click)=\"goToLogin()\" class=\"text-blue-600 hover:text-blue-500 text-sm font-medium cursor-pointer\">\r\n          ← Back to Sign In\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Success Message Card -->\r\n    <div *ngIf=\"showSuccessMessage\" class=\"bg-white rounded-2xl shadow-lg p-8 max-w-md mx-auto\">\r\n      <div class=\"text-center\">\r\n        <!-- Success Icon -->\r\n        <div class=\"flex justify-center mb-6\">\r\n          <div class=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center\">\r\n            <svg class=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        \r\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">Password Reset Successfully!</h2>\r\n        <p class=\"text-gray-600 mb-6 leading-relaxed\">\r\n          Your password has been reset successfully. You can now log in with your new password.\r\n        </p>\r\n        \r\n        <!-- Countdown -->\r\n        <div class=\"bg-blue-50 rounded-lg p-4 mb-6\">\r\n          <p class=\"text-blue-800 text-sm\">\r\n            Redirecting to login page in <span class=\"font-bold\">{{ countdown }}</span> seconds\r\n          </p>\r\n        </div>\r\n        \r\n        <!-- Manual redirect button -->\r\n        <button\r\n          (click)=\"goToLogin()\"\r\n          class=\"text-blue-600 hover:text-blue-500 text-sm font-medium cursor-pointer\">\r\n          Go to login now\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>", "import { Component, OnInit } from '@angular/core';\r\nimport { NgIf} from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-activate-account',\r\n  templateUrl: './activate-account.component.html',\r\n  standalone: true,\r\n  imports: [\r\n    NgIf\r\n  ],\r\n  styleUrl: './activate-account.component.scss'\r\n})\r\nexport class ActivateAccountComponent implements OnInit {\r\n  isLoading = true;\r\n  successMessage = '';\r\n  errorMessage = '';\r\n  id = '';\r\n  hash = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'] || '';\r\n    this.hash = this.route.snapshot.params['hash'] || '';\r\n\r\n    if (!this.id || !this.hash) {\r\n      this.errorMessage = 'Invalid verification link';\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    this.verifyEmail();\r\n  }\r\n\r\n  verifyEmail() {\r\n    this.authService.verifyEmail(this.id, this.hash).subscribe({\r\n      next: (response: any) => {\r\n        if (response.success) {\r\n          this.successMessage = response.message || 'Email verified successfully';\r\n        } else {\r\n          this.errorMessage = response.message || 'Failed to verify email';\r\n        }\r\n        this.isLoading = false;\r\n      },\r\n      error: (error: any) => {\r\n        this.errorMessage = error.error?.message || error.error?.error || 'An error occurred during verification';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  resendActivation() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n", "<!-- Activate Account Component HTML -->\r\n<div class=\"min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n  <div class=\"max-w-md w-full space-y-8\">\r\n    <!-- Logo -->\r\n    <div class=\"text-center\">\r\n      <div class=\"flex justify-center mb-6\">\r\n        <div class=\"flex items-center space-x-3\">\r\n          <img [src]=\"'images/logo.png'\" alt=\"AssetGo Logo\" class=\"h-20 w-auto\">\r\n        </div>\r\n      </div>\r\n      <p class=\"text-gray-600\">Enterprise Asset Management System</p>\r\n    </div>\r\n\r\n    <!-- Activation Card -->\r\n    <div class=\"bg-white rounded-2xl shadow-lg p-8 max-w-md mx-auto\">\r\n      <div class=\"text-center\">\r\n        <!-- Loading State -->\r\n        <div *ngIf=\"isLoading\" class=\"py-8\">\r\n          <div class=\"flex justify-center mb-4\">\r\n            <svg class=\"animate-spin h-12 w-12 text-blue-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n          </div>\r\n          <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Activating Account</h2>\r\n          <p class=\"text-gray-600\">Please wait while we activate your account...</p>\r\n        </div>\r\n\r\n        <!-- Success State -->\r\n        <div *ngIf=\"!isLoading && successMessage\" class=\"py-8\">\r\n          <div class=\"flex justify-center mb-4\">\r\n            <div class=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center\">\r\n              <svg class=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Account Activated!</h2>\r\n          <p class=\"text-gray-600 mb-6\">{{ successMessage }}</p>\r\n          \r\n          <button\r\n            (click)=\"goToLogin()\"\r\n            class=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all cursor-pointer\">\r\n            Continue to Sign In\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Error State -->\r\n        <div *ngIf=\"!isLoading && errorMessage\" class=\"py-8\">\r\n          <div class=\"flex justify-center mb-4\">\r\n            <div class=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center\">\r\n              <svg class=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Activation Failed</h2>\r\n          <p class=\"text-gray-600 mb-6\">{{ errorMessage }}</p>\r\n          \r\n          <div class=\"space-y-3\">\r\n            <button\r\n              (click)=\"resendActivation()\"\r\n              class=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all cursor-pointer\">\r\n              Request New Activation Link\r\n            </button>\r\n            \r\n            <button\r\n              (click)=\"goToLogin()\"\r\n              class=\"w-full text-blue-600 py-3 px-4 rounded-lg font-medium hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all cursor-pointer\">\r\n              Back to Sign In\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ActivateAccountComponent } from './activate-account/activate-account.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'forgot-password', component: ForgotPasswordComponent },\r\n  { path: 'reset-password', component: ResetPasswordComponent },\r\n  { path: 'activate-account', component: ActivateAccountComponent },\r\n  { path: 'email/verify/:id/:hash', component: ActivateAccountComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ActivateAccountComponent } from './activate-account/activate-account.component';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AuthRoutingModule,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ForgotPasswordComponent,\r\n    ResetPasswordComponent,\r\n    ActivateAccountComponent\r\n  ]\r\n})\r\nexport class AuthModule { }"],
  "mappings": "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",
  "names": []
}
