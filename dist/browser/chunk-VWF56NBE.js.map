{
  "version": 3,
  "sources": ["src/app/core/services/inventory-analytics.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport interface DashboardData {\r\n  total_value: number;\r\n  total_parts: number;\r\n  low_stock_count: number;\r\n  out_of_stock_count: number;\r\n}\r\n\r\nexport interface AbcAnalysisItem {\r\n  part_id: number;\r\n  name: string;\r\n  value: number;\r\n  cumulative_ratio: number;\r\n  class: string;\r\n}\r\n\r\nexport interface AbcAnalysisResponse {\r\n  success: boolean;\r\n  data: AbcAnalysisItem[];\r\n}\r\n\r\nexport interface DashboardResponse {\r\n  success: boolean;\r\n  data: DashboardData;\r\n}\r\n\r\n// Parts Catalog Interfaces\r\nexport interface InventoryPart {\r\n  id: number;\r\n  name: string;\r\n  part_number: string;\r\n  description?: string;\r\n  uom: string;\r\n  unit_cost?: number;\r\n  category_id?: number;\r\n  reorder_point?: number;\r\n  reorder_qty?: number;\r\n  barcode?: string;\r\n  status?: string;\r\n  abc_class?: string;\r\n  company_id: number;\r\n  user_id: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface PartsCatalogResponse {\r\n  success: boolean;\r\n  data: {\r\n    data: InventoryPart[];\r\n    current_page: number;\r\n    last_page: number;\r\n    per_page: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\nexport interface PartResponse {\r\n  success: boolean;\r\n  data: InventoryPart;\r\n}\r\n\r\nexport interface CreatePartRequest {\r\n  name: string;\r\n  part_number: string;\r\n  description?: string;\r\n  uom: string;\r\n  unit_cost?: number;\r\n  category_id?: number;\r\n  reorder_point?: number;\r\n  reorder_qty?: number;\r\n  barcode?: string;\r\n}\r\n\r\nexport interface UpdatePartRequest {\r\n  name?: string;\r\n  part_number?: string;\r\n  description?: string;\r\n  uom?: string;\r\n  unit_cost?: number;\r\n  category_id?: number;\r\n  reorder_point?: number;\r\n  reorder_qty?: number;\r\n  barcode?: string;\r\n  status?: string;\r\n  abc_class?: string;\r\n}\r\n\r\n// Stock Levels Interfaces\r\nexport interface InventoryLocation {\r\n  id: number;\r\n  name: string;\r\n  code?: string;\r\n  type?: string;\r\n  address?: string;\r\n  company_id: number;\r\n}\r\n\r\nexport interface InventoryStock {\r\n  id: number;\r\n  part_id: number;\r\n  location_id: number;\r\n  on_hand: number;\r\n  available: number;\r\n  reserved: number;\r\n  allocated: number;\r\n  average_cost: number;\r\n  last_updated: string;\r\n  part: InventoryPart;\r\n  location: InventoryLocation;\r\n}\r\n\r\nexport interface StockLevelsResponse {\r\n  success: boolean;\r\n  data: {\r\n    data: InventoryStock[];\r\n    current_page: number;\r\n    last_page: number;\r\n    per_page: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\nexport interface StockAdjustmentRequest {\r\n  part_id: number;\r\n  location_id: number;\r\n  type: 'receipt' | 'issue' | 'adjustment' | 'return';\r\n  quantity: number;\r\n  unit_cost?: number;\r\n  reason?: string;\r\n  notes?: string;\r\n  reference?: string;\r\n}\r\n\r\nexport interface StockTransferRequest {\r\n  part_id: number;\r\n  from_location_id: number;\r\n  to_location_id: number;\r\n  quantity: number;\r\n  reason?: string;\r\n  notes?: string;\r\n  reference?: string;\r\n}\r\n\r\nexport interface StockReserveRequest {\r\n  part_id: number;\r\n  location_id: number;\r\n  quantity: number;\r\n  reference?: string;\r\n}\r\n\r\nexport interface StockCountRequest {\r\n  part_id: number;\r\n  location_id: number;\r\n  counted_quantity: number;\r\n  notes?: string;\r\n}\r\n\r\nexport interface StockOperationResponse {\r\n  success: boolean;\r\n  data: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventoryAnalyticsService {\r\n  private apiUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private getAuthHeaders(): { headers: { [header: string]: string } } {\r\n    const token = localStorage.getItem('token');\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n      }\r\n    };\r\n  }\r\n\r\n  getDashboardData(): Observable<DashboardResponse> {\r\n    return this.http.get<DashboardResponse>(\r\n      `${this.apiUrl}/inventory/dashboard/overview`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  getAbcAnalysis(): Observable<AbcAnalysisResponse> {\r\n    return this.http.get<AbcAnalysisResponse>(\r\n      `${this.apiUrl}/inventory/analytics/abc-analysis`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  // Parts Catalog Methods\r\n  getPartsCatalog(\r\n    search?: string,\r\n    status?: string,\r\n    page: number = 1,\r\n    perPage: number = 15\r\n  ): Observable<PartsCatalogResponse> {\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('per_page', perPage.toString());\r\n\r\n    if (search) {\r\n      params = params.set('search', search);\r\n    }\r\n\r\n    if (status) {\r\n      params = params.set('status', status);\r\n    }\r\n\r\n    return this.http.get<PartsCatalogResponse>(\r\n      `${this.apiUrl}/inventory/parts`,\r\n      { ...this.getAuthHeaders(), params }\r\n    );\r\n  }\r\n\r\n  getPart(partId: number): Observable<PartResponse> {\r\n    return this.http.get<PartResponse>(\r\n      `${this.apiUrl}/inventory/parts/${partId}`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  createPart(partData: CreatePartRequest): Observable<PartResponse> {\r\n    return this.http.post<PartResponse>(\r\n      `${this.apiUrl}/inventory/parts`,\r\n      partData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  updatePart(partId: number, partData: UpdatePartRequest): Observable<PartResponse> {\r\n    return this.http.put<PartResponse>(\r\n      `${this.apiUrl}/inventory/parts/${partId}`,\r\n      partData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  deletePart(partId: number): Observable<{ success: boolean }> {\r\n    return this.http.delete<{ success: boolean }>(\r\n      `${this.apiUrl}/inventory/parts/${partId}`,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  // Stock Levels Methods\r\n  getStockLevels(\r\n    locationId?: number,\r\n    partId?: number,\r\n    search?: string,\r\n    page: number = 1,\r\n    perPage: number = 15\r\n  ): Observable<StockLevelsResponse> {\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('per_page', perPage.toString());\r\n\r\n    if (locationId) {\r\n      params = params.set('location_id', locationId.toString());\r\n    }\r\n\r\n    if (partId) {\r\n      params = params.set('part_id', partId.toString());\r\n    }\r\n\r\n    if (search) {\r\n      params = params.set('search', search);\r\n    }\r\n\r\n    return this.http.get<StockLevelsResponse>(\r\n      `${this.apiUrl}/inventory/stocks`,\r\n      { ...this.getAuthHeaders(), params }\r\n    );\r\n  }\r\n\r\n  adjustStock(adjustmentData: StockAdjustmentRequest): Observable<StockOperationResponse> {\r\n    return this.http.post<StockOperationResponse>(\r\n      `${this.apiUrl}/inventory/stocks/adjust`,\r\n      adjustmentData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  transferStock(transferData: StockTransferRequest): Observable<StockOperationResponse> {\r\n    return this.http.post<StockOperationResponse>(\r\n      `${this.apiUrl}/inventory/stocks/transfer`,\r\n      transferData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  reserveStock(reserveData: StockReserveRequest): Observable<StockOperationResponse> {\r\n    return this.http.post<StockOperationResponse>(\r\n      `${this.apiUrl}/inventory/stocks/reserve`,\r\n      reserveData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  releaseStock(releaseData: StockReserveRequest): Observable<StockOperationResponse> {\r\n    return this.http.post<StockOperationResponse>(\r\n      `${this.apiUrl}/inventory/stocks/release`,\r\n      releaseData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n\r\n  performStockCount(countData: StockCountRequest): Observable<StockOperationResponse> {\r\n    return this.http.post<StockOperationResponse>(\r\n      `${this.apiUrl}/inventory/stocks/count`,\r\n      countData,\r\n      this.getAuthHeaders()\r\n    );\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
