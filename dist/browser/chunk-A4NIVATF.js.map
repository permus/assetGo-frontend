{
  "version": 3,
  "sources": ["src/app/shared/components/global-dropdown/global-dropdown.component.ts", "src/app/shared/components/global-dropdown/global-dropdown.component.html"],
  "sourcesContent": ["import { Component, Input, Output, EventEmitter, OnInit, HostListener } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nexport interface DropdownOption {\r\n  id: any;\r\n  name: string;\r\n  description?: string;\r\n  icon?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-global-dropdown',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './global-dropdown.component.html',\r\n  styleUrls: ['./global-dropdown.component.scss']\r\n})\r\nexport class GlobalDropdownComponent implements OnInit {\r\n  @Input() options: DropdownOption[] = [];\r\n  @Input() selectedOption: DropdownOption | null = null;\r\n  @Input() placeholder: string = 'Select option';\r\n  @Input() label: string = '';\r\n  @Input() required: boolean = false;\r\n  @Input() disabled: boolean = false;\r\n  @Input() error: boolean = false;\r\n  @Input() errorMessage: string = '';\r\n  @Input() searchable: boolean = false;\r\n  @Input() maxHeight: string = '300px';\r\n  @Input() minWidth: string = '260px';\r\n\r\n  @Output() selectionChange = new EventEmitter<DropdownOption>();\r\n\r\n  showDropdown = false;\r\n  searchTerm = '';\r\n  filteredOptions: DropdownOption[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.filteredOptions = [...this.options];\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.filteredOptions = [...this.options];\r\n  }\r\n\r\n  toggleDropdown(): void {\r\n    if (this.disabled) return;\r\n    this.showDropdown = !this.showDropdown;\r\n    if (this.showDropdown) {\r\n      this.searchTerm = '';\r\n      this.filteredOptions = [...this.options];\r\n    }\r\n  }\r\n\r\n  selectOption(option: DropdownOption): void {\r\n    if (option.disabled) return;\r\n    \r\n    this.selectedOption = option;\r\n    this.showDropdown = false;\r\n    this.selectionChange.emit(option);\r\n  }\r\n\r\n  onSearchInput(event: Event): void {\r\n    const target = event.target as HTMLInputElement;\r\n    this.searchTerm = target.value;\r\n    \r\n    if (this.searchTerm.trim() === '') {\r\n      this.filteredOptions = [...this.options];\r\n    } else {\r\n      this.filteredOptions = this.options.filter(option =>\r\n        option.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        (option.description && option.description.toLowerCase().includes(this.searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n  }\r\n\r\n  clearSelection(): void {\r\n    this.selectedOption = null;\r\n    this.selectionChange.emit(null as any);\r\n  }\r\n\r\n  @HostListener('document:click')\r\n  closeOnOutsideClick(): void {\r\n    this.showDropdown = false;\r\n  }\r\n\r\n  getOptionDescription(option: DropdownOption): string {\r\n    return option.description || '';\r\n  }\r\n\r\n  hasFieldError(): boolean {\r\n    return this.error && this.errorMessage !== '';\r\n  }\r\n\r\n  getFieldError(): string {\r\n    return this.errorMessage;\r\n  }\r\n}\r\n", "<div class=\"dropdown-wrapper\" [class.error]=\"hasFieldError()\">\r\n  <label *ngIf=\"label\" class=\"dropdown-label\">{{ label }} <span class=\"required\" *ngIf=\"required\">*</span></label>\r\n\r\n  <div class=\"relative generic-dropdown\" (click)=\"$event.stopPropagation()\" [style.min-width]=\"minWidth\">\r\n    <button\r\n      type=\"button\"\r\n      (click)=\"toggleDropdown()\"\r\n      class=\"dropdown-button\"\r\n      [class.error]=\"hasFieldError()\"\r\n      [class.active]=\"showDropdown\"\r\n      [disabled]=\"disabled\">\r\n      <div class=\"dropdown-content\">\r\n        <span *ngIf=\"!selectedOption\" class=\"placeholder\">{{ placeholder }}</span>\r\n\r\n        <div *ngIf=\"selectedOption\" class=\"selected-item\">\r\n          <div class=\"item-icon\" *ngIf=\"selectedOption.icon\">\r\n            <svg class=\"icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n            </svg>\r\n          </div>\r\n          <span class=\"selected-text\">{{ selectedOption.name }}</span>\r\n        </div>\r\n\r\n        <div class=\"dropdown-actions\">\r\n          <button\r\n            *ngIf=\"selectedOption && !disabled\"\r\n            type=\"button\"\r\n            (click)=\"clearSelection(); $event.stopPropagation()\"\r\n            class=\"clear-btn\"\r\n            title=\"Clear selection\">\r\n            <svg class=\"clear-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n            </svg>\r\n          </button>\r\n          \r\n          <svg class=\"dropdown-arrow\" [class.rotated]=\"showDropdown\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </button>\r\n\r\n    <div *ngIf=\"showDropdown\" class=\"dropdown-menu\" [style.max-height]=\"maxHeight\">\r\n      <div class=\"dropdown-header\">\r\n        <span>{{ placeholder }}</span>\r\n        <span class=\"options-count\">{{ filteredOptions.length }} option{{ filteredOptions.length !== 1 ? 's' : '' }}</span>\r\n      </div>\r\n\r\n      <!-- Search input -->\r\n      <div *ngIf=\"searchable\" class=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          [value]=\"searchTerm\"\r\n          (input)=\"onSearchInput($event)\"\r\n          placeholder=\"Search options...\"\r\n          class=\"search-input\"\r\n          (click)=\"$event.stopPropagation()\">\r\n      </div>\r\n\r\n      <!-- No results message -->\r\n      <div *ngIf=\"searchable && filteredOptions.length === 0 && searchTerm.trim() !== ''\" class=\"no-results\">\r\n        No options found for \"{{ searchTerm }}\"\r\n      </div>\r\n\r\n      <!-- Options list -->\r\n      <button\r\n        *ngFor=\"let option of filteredOptions\"\r\n        type=\"button\"\r\n        (click)=\"selectOption(option)\"\r\n        class=\"dropdown-item\"\r\n        [class.selected]=\"selectedOption?.id === option.id\"\r\n        [class.disabled]=\"option.disabled\">\r\n        <div class=\"item-content\">\r\n          <div class=\"item-icon\" *ngIf=\"option.icon\">\r\n            <svg class=\"icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n            </svg>\r\n          </div>\r\n          <div class=\"item-details\">\r\n            <div class=\"item-name\">{{ option.name }}</div>\r\n            <div class=\"item-description\" *ngIf=\"option.description\">{{ getOptionDescription(option) }}</div>\r\n          </div>\r\n        </div>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"field-error\" *ngIf=\"hasFieldError()\">\r\n    {{ getFieldError() }}\r\n  </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": []
}
